/* –†–∞–∑–º–µ—â—ë–Ω–Ω—ã–π –∑–¥–µ—Å—å –∫–æ–¥ JavaScript –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ */


(function($, mw) {
  'use strict';

  // =========================
  // === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
  // =========================
  var config = {
    storePage:      'Chicken_Gun_Fanon_Wiki:_–û—Ü–µ–Ω–∫–∏_—Å—Ç–∞—Ç–µ–π',
    minEditsToVote: 50,
    // BERTRAND: –∏—Å–ø–æ–ª—å–∑—É–µ–º wgScriptPath + index.php?title=...&action=raw
    buttonGifLike:
      mw.config.get('wgScriptPath') +
      '/index.php?title=Special:FilePath/Crazy_Like_Button.gif&action=raw',
    buttonGifDislike:
      mw.config.get('wgScriptPath') +
      '/index.php?title=Special:FilePath/Bad_Dislike_Button.gif&action=raw'
  };

  // =========================
  // === –ë–õ–û–ö 1: –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ ===
  // =========================
  (function initRatingBlock() {
    // –¢–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–æ–µ –Ω–µ–π–º—Å–ø–µ–π—Å –∏ —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    if (mw.config.get('wgNamespaceNumber') !== 0 || mw.config.get('wgAction') !== 'view') return;
    if ($('.article-rating-container').length) return; // –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º

    console.log('[Rating] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');

    mw.loader.using('mediawiki.api').then(function() {
      var page    = mw.config.get('wgPageName'),
          user    = mw.config.get('wgUserName') || '',
          edits   = mw.config.get('wgUserEditCount') || 0,
          groups  = mw.config.get('wgUserGroups') || [],
          canVote = user && groups.includes('autoconfirmed') && edits >= config.minEditsToVote,
          api     = new mw.Api();

      // --- –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ---
      var $cont = $('<div>', { class: 'article-rating-container' }).css({
        border: '1px solid #888', padding: '1em', borderRadius: '0.4em',
        background: '#F5F5DC', color: '#333', margin: '1em 0',
        boxShadow: '0 0.2em 0.5em rgba(0,0,0,0.1)'
      });
      var $title = $('<div>', { text: '–û—Ü–µ–Ω–∫–∞ —Å—Ç–∞—Ç—å–∏', class: 'article-rating-title' }).css({
        fontWeight: 'bold', marginBottom: '0.5em'
      });

      // --- –ö–Ω–æ–ø–∫–∏ —Å GIF ---
      var $likeImg    = $('<img>', { src: config.buttonGifLike,    alt: 'üëç' });
      var $dislikeImg = $('<img>', { src: config.buttonGifDislike, alt: 'üëé' });
      var $like    = $('<button>', { class: 'article-rating-btn like'    }).append($likeImg);
      var $dislike = $('<button>', { class: 'article-rating-btn dislike' }).append($dislikeImg);

      // --- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∞ ---
      var $stats   = $('<span>', { class: 'article-rating-stats', text: '–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶' });
      var $userMsg = $('<span>', { class: 'article-rating-user' }).css({ marginLeft: '1em' });

      // –í—Å—Ç–∞–≤–ª—è–µ–º –≤—Å—ë –≤ —Å—Ç–∞—Ç—å—é
      $('.mw-parser-output').first().prepend($cont.append($title, $like, $dislike, $stats, $userMsg));

      // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
      function updateUI(info) {
        var likes    = info.likes    || 0;
        var dislikes = info.dislikes || 0;
        var total    = likes + dislikes;
        var pct      = total ? Math.round(likes / total * 100) : 0;
        $stats.text(`–í—Å–µ–≥–æ: ${total} (üëç ${likes}, üëé ${dislikes}) ‚Äî ${pct}% üëç`);

        if (!user) {
          $userMsg.text('–í–æ–π–¥–∏—Ç–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è');
        } else if (!canVote) {
          $userMsg.text(`–ù—É–∂–Ω–æ ‚â•${config.minEditsToVote} –ø—Ä–∞–≤–æ–∫ –∏ –∞–≤—Ç–æ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ`);
        } else if (info.voters[user]) {
          $userMsg.text(info.voters[user] === 1 ? '–í—ã —É–∂–µ —Å—Ç–∞–≤–∏–ª–∏ üëç' : '–í—ã —É–∂–µ —Å—Ç–∞–≤–∏–ª–∏ üëé');
          (info.voters[user] === 1 ? $like : $dislike).addClass('voted');
        } else {
          $userMsg.text('–í–∞—à –≥–æ–ª–æ—Å –µ—â—ë –Ω–µ —É—á—Ç—ë–Ω');
        }
      }

      // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      api.get({
        action: 'query',
        prop:   'revisions',
        titles: config.storePage,
        rvprop: 'content',
        format: 'json'
      }).done(function(res) {
        console.log('[Rating] –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        var pages = res.query.pages, raw = '', data = {};
        for (var id in pages) {
          raw = (pages[id].revisions||[])[0]['*'] || '';
          break;
        }
        try {
          data = raw ? JSON.parse(raw) : {};
        } catch(e) {
          data = {};
        }
        if (!data[page]) data[page] = { up:0, down:0, voters:{} };
        var info = {
          likes:    data[page].up   || 0,
          dislikes: data[page].down || 0,
          voters:   data[page].voters || {}
        };
        updateUI(info);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤
        $like.on('click', function() {
          if (!canVote || info.voters[user]) return;
          info.likes++; info.voters[user] = 1; saveAll();
        });
        $dislike.on('click', function() {
          if (!canVote || info.voters[user]) return;
          info.dislikes++; info.voters[user] = -1; saveAll();
        });

        function saveAll() {
          data[page] = { up: info.likes, down: info.dislikes, voters: info.voters };
          api.postWithToken('csrf', {
            action: 'edit',
            title:  config.storePage,
            summary:`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫ –¥–ª—è ¬´${page}¬ª`,
            text:   JSON.stringify(data, null, 2)
          }).done(function() {
            location.reload();
          });
        }
      }).fail(function() {
        console.error('[Rating] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
        $stats.text('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      });

    }); // mw.loader
  })();

  // ======================================
  // === –ë–õ–û–ö 2: –¢–æ–ø‚Äë–ª–∏—Å—Ç —Å—Ç–∞—Ç–µ–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É ===
  // ======================================
  (function initTopList() {
    $(function() {
      if (mw.config.get('wgPageName') !== 'Chicken_Gun_Fanon_Wiki:_–°–ø–∏—Å–æ–∫_–æ—Ü–µ–Ω–æ–∫') return;
      console.log('[TopList] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è');

      mw.loader.using('mediawiki.api').then(function() {
        var api      = new mw.Api();
        var pageList = [];

        // –í—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –Ω–∞–∑–Ω–∞—á–∞–µ–º $output
        var $container = $('.mw-parser-output');
        $container.html(
          '<h2>–°–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É</h2>' +
          '<div id="rating-list">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</div>'
        );
        var $output = $container.find('#rating-list');

        // –®–∞–≥ 1: –ø–æ–ª—É—á–∞–µ–º JSON
        api.get({
          action: 'query',
          prop:   'revisions',
          titles: config.storePage,
          rvprop: 'content',
          format: 'json'
        }).done(function(res) {
          console.log('[TopList] –†–µ–π—Ç–∏–Ω–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã');
          var pages = res.query.pages, raw = '';
          for (var k in pages) {
            raw = (pages[k].revisions||[])[0]['*'] || '';
            break;
          }
          var data = {};
          try {
            data = raw ? JSON.parse(raw) : {};
          } catch(e) {
            console.error('[TopList] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON', e);
          }

          Object.keys(data).forEach(function(titleKey) {
            var rec   = data[titleKey],
                score = (rec.up||0) - (rec.down||0);
            pageList.push({ key: titleKey, score: score });
          });
          pageList.sort(function(a,b){ return b.score - a.score; });

          // –®–∞–≥ 2: –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
         var allTitles = pageList.map(o=>o.key).join('|');
api.get({
  action: 'query',
  titles: allTitles,
  format: 'json'
}).done(function(res2) {
  var existing = {};
  Object.values(res2.query.pages).forEach(function(p) {
    if (!p.missing && !p.invalid) {
      var key = p.title.replace(/ /g, '_');
      existing[key] = true;
    }
  });

  var filtered = pageList.filter(function(item) {
    return existing[item.key];
  });

  if (!filtered.length) {
    $output.text('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.');
    return;
  }
  var html = '<ul>';
  filtered.forEach(function(item) {
    var display = item.key.replace(/_/g, ' ');
    var sign = item.score > 0 ? '+' : '';
    html +=
      '<li>' +
        '<a href="' + mw.util.getUrl(item.key) + '">' + display + '</a>' +
        ' ‚Äî ' + sign + item.score +
      '</li>';
  });
  html += '</ul>';
  $output.html(html);
          }).fail(function() {
            console.error('[TopList] –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü');
            $output.text('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞–ª–∏—á–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü.');
          });

        }).fail(function() {
          console.error('[TopList] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤');
          $output.text('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫.');
        });

      }); // mw.loader
    }); // jQuery ready
  })();

})(jQuery, mediaWiki);