/* All JavaScript here will be loaded for users of the mobile site */
console.log('‚≠ê Rating script loaded');

mw.loader.using(['mediawiki.api'], function() {
  $(function() {
    if ($('.article-rating-container').length) return;
    console.log('‚è≥ Injecting rating container');

    var page      = mw.config.get('wgPageName'),
        user      = mw.config.get('wgUserName'),
        api       = new mw.Api(),
        storePage = 'Chicken_Gun_Fanon_Wiki:_–û—Ü–µ–Ω–∫–∏_—Å—Ç–∞—Ç–µ–π'; // <-- –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ—á–Ω–æ–µ –∏–º—è –≤–∞—à–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã-—Ö—Ä–∞–Ω–∏–ª–∏—â–∞!

    // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    var $cont = $('<div class="article-rating-container">').css({
      border: '1px solid #888',
      padding: '0.6em',
      'border-radius': '0.4em',
      background: '#F5F5DC',
      margin: '1em 0',
      'box-shadow': '0 0.1em 0.3em rgba(0,0,0,0.1)'
    });
    var $like    = $('<span class="article-rating-like">üëç</span>').css({ cursor:'pointer','margin-right':'0.6em','font-size':'1.4em' });
    var $dislike = $('<span class="article-rating-dislike">üëé</span>').css({ cursor:'pointer','margin-right':'0.6em','font-size':'1.4em' });
    var $stats   = $('<span class="article-rating-stats">–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</span>').css({ 'margin-right':'0.8em','font-size':'0.9em', color:'#333' });
    var $userMsg = $('<span class="article-rating-user">‚Äî</span>').css({ 'font-size':'0.9em', color:'#333' });

    $cont.append($like, $dislike, $stats, $userMsg);
    var $main = $('#mw-content-text, #WikiaArticle');
    if (!$main.length) return console.error('‚ùå Rating: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω');
    $main.prepend($cont);
    console.log('‚úÖ Rating container injected');

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
    function updateUI(info) {
      console.log('üîÑ updateUI', info);
      var likes    = info.likes    || 0;
      var dislikes = info.dislikes || 0;
      var total    = likes + dislikes;
      var pct      = total ? Math.round(likes/total*100) : 0;
      $stats.text('–ì–æ–ª–æ—Å–æ–≤: ' + total + ' (üëç ' + likes + ', üëé ' + dislikes + '), ' + pct + '% üëç');
      if (user) {
        if (info.voters && info.voters[user]) {
          var v = info.voters[user] === 1 ? '–í—ã: üëç' : '–í—ã: üëé';
          $userMsg.text(v);
          (info.voters[user] === 1 ? $like : $dislike).css('opacity','0.5');
        } else {
          $userMsg.text('–í—ã –µ—â—ë –Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏');
        }
      } else {
        $userMsg.text('–í–æ–π–¥–∏—Ç–µ, —á—Ç–æ–±—ã –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å');
      }
    }

    // –ó–∞–ø—Ä–æ—Å –∫ API
    api.get({
      action: 'query', prop: 'revisions',
      titles: storePage, rvprop: 'content',
      format: 'json'
    }).done(function(d) {
      console.log('üì• API response', d);
      var pages = d.query.pages, txt = '';
      for (var k in pages) { txt = (pages[k].revisions||[])[0]['*'] || ''; break; }

      var allData;
      try { allData = txt ? JSON.parse(txt) : {}; }
      catch(e) {
        console.error('‚ùó JSON parse error', e);
        allData = {};
      }
      if (!allData[page]) allData[page] = { likes:0, dislikes:0, voters:{} };
      var info = allData[page];
      updateUI(info);

      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤
      $like.click(function() {
        if (!user) return alert('–í–æ–π–¥–∏—Ç–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è');
        if (info.voters[user]) return alert('–í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏');
        info.likes++; info.voters[user] = 1;
        saveAndReload(allData);
      });
      $dislike.click(function() {
        if (!user) return alert('–í–æ–π–¥–∏—Ç–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è');
        if (info.voters[user]) return alert('–í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏');
        info.dislikes++; info.voters[user] = -1;
        saveAndReload(allData);
      });

      function saveAndReload(data) {
        api.edit({
          action: 'edit', title: storePage,
          summary: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞: ' + page,
          text: JSON.stringify(data, null, 2),
          bot: true
        }).done(function(res) {
          console.log('üíæ save response', res);
          if (res.edit && res.edit.result === 'Success') location.reload();
          else if (res.error) alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ' + res.error.info);
        });
      }
    }).fail(function(err) {
      console.error('‚ùó API –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–≤–∞–ª–µ–Ω', err);
      $stats.text('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏');
      $userMsg.text('');
    });

  });
});