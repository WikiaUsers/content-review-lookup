mw.loader.using('mediawiki.api', function() {
	// –∑–∞—â–∏—Ç–∞ –æ—Ç –¥–≤–æ–π–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
	if (window.UserActivityFull) return
	window.UserActivityFull = true
	
	// –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
	const PREFIX = 'kof-uaf__'
	const api = new mw.Api()
	const c = mw.config.get(['wgNamespaceNumber', 'wgTitle', 'wgScriptPath', 'wgSiteName', 'wgArticlePath'])
	
	// –∑–∞–ø—Ä–µ—â–∞–µ–º —Ä–∞–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞ –Ω–µ –Ω–∞ —Å–ª—É–∂–µ–±–Ω–æ–π
	if (c.wgNamespaceNumber != -1 || !c.wgTitle.match(/^useractivityfull\/?/i)) return
	
	// –Ω–∞–º –Ω—É–∂–µ–Ω CSS
	importArticle({ type: 'style', article: 'u:ru.koffee:MediaWiki:UserActivityFull.css' })
	
	// –Ω–∞—á–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
	$('title').text('–ü–æ–ª–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | ' + c.wgSiteName + ' | Fandom')
	$('.page-header__title').text('–ü–æ–ª–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
	$('#mw-content-text').empty()

	const target = c.wgTitle.match(/^useractivityfull\/([^\/?&]+)$/i)
	if (!target) { // –µ—Å–ª–∏ —Ü–µ–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Ñ–æ—Ä–º—É
		$('#mw-content-text').append($('<p>', {
			class: PREFIX + 'intro',
			text: '–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ –≤—Å—é —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ (–ø–æ—Å—Ç—ã, —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏), –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤ –ø–æ—Ä—è–¥–∫–µ –æ—Ç –Ω–æ–≤–æ–≥–æ –∫ —Å—Ç–∞—Ä–æ–º—É.'
		}))
		.append($('<div>', { class: PREFIX + 'form' })
			.append($('<label>', { text: '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:' }).append($('<input>', { type: 'text', id: PREFIX + 'form-user' })))
			.append($('<button>', { text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å', id: PREFIX + 'form-submit' }).on('click', function() {
				const input = $('#' + PREFIX + 'form-user').val()
				if (!input) return

				window.location.href = c.wgArticlePath.replace('$1', 'Special:UserActivityFull/' + input)
			}))
		)
		return
	}
	// –∞ –µ—Å–ª–∏ –µ—Å—Ç—å, —Ç–æ –ø–æ–ª—É—á–∞–µ–º –∞–π–¥–∏
	getId(target[1])
	
	function getId(target) {
		// –Ω–∞–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∞–π–¥–∏—à–Ω–∏–∫ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É
		api.get({
			action: 'query',
			list: 'users',
			ususers: target
		}).done(function(json) {
			// –≤—ã–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
			const id = json.query.users[0].missing == '' ? -1 : json.query.users[0].userid
			const name = json.query.users[0].name
			
			if (id == -1) {
				$('#mw-content-text').text('–£—á–∞—Å—Ç–Ω–∏–∫–∞ ' + name + ' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
				return
			}
	
			// –ø–µ—Ä–µ–≤–µ—Ä—Å—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
			$('.page-header__title').text('–ü–æ–ª–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ' + name)
			$('#mw-content-text').empty()
				.append($('<input>', { type: 'checkbox', class: PREFIX + 'filter', id: PREFIX + 'filter-posts', checked: true }))
				.append($('<input>', { type: 'checkbox', class: PREFIX + 'filter', id: PREFIX + 'filter-messages', checked: true }))
				.append($('<input>', { type: 'checkbox', class: PREFIX + 'filter', id: PREFIX + 'filter-comments', checked: true }))
				.append($('<div>', { class: PREFIX + 'filters' }))
				.append($('<div>', { class: PREFIX + 'list' }))
			$('.' + PREFIX + 'list')
				.append($('<div>', { class: PREFIX + 'loading', text: '–ü–æ—Å—Ç—ã:' }).append($('<span>', { id: PREFIX + 'loading-posts' })))
				.append($('<div>', { class: PREFIX + 'loading', text: '–°–æ–æ–±—â–µ–Ω–∏—è:' }).append($('<span>', { id: PREFIX + 'loading-messages' })))
				.append($('<div>', { class: PREFIX + 'loading', text: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:' }).append($('<span>', { id: PREFIX + 'loading-comments' })))
			
			$('.' + PREFIX + 'filters')
				.append($('<span>', { class: PREFIX + 'filters-label', text: '–§–∏–ª—å—Ç—Ä—ã:' }))
				.append($('<label>', { class: PREFIX + 'filter-button', for: PREFIX + 'filter-posts', text: 'üì£' }))
				.append($('<span>', { class: PREFIX + 'counter', id: PREFIX + 'counter-posts' }))
				.append($('<label>', { class: PREFIX + 'filter-button', for: PREFIX + 'filter-messages', text: '‚úâÔ∏è' }))
				.append($('<span>', { class: PREFIX + 'counter', id: PREFIX + 'counter-messages' }))
				.append($('<label>', { class: PREFIX + 'filter-button', for: PREFIX + 'filter-comments', text: 'üí¨' }))
				.append($('<span>', { class: PREFIX + 'counter', id: PREFIX + 'counter-comments' }))
	
			// –∂–¥–µ–º –ø–æ—Ç—Ç—è–≥–∏–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ—Ç–æ–º —Ä–µ–Ω–¥–µ—Ä–∏–º—Å—è
			Promise.all([
				getData('posts', id, 0),
				getData('messages', id, 0),
				getData('comments', id, 0)
			]).then(render)
			.catch(function() {
				$('.' + PREFIX + 'list').text('–í–æ –≤—Ä–µ–º—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞!')
			})
		})
	}
	
	function getData(type, id, page, accum) {
		if (!accum) accum = []
		return new Promise(function(res, rej) {
			$('#' + PREFIX + 'loading-' + type).text('–≥—Ä—É–∑–∏–º ' + (page + 1) + '-—é —Å—Ç—Ä–∞–Ω–∏—Ü—É')
			$.ajax({
				method: 'get',
				url: c.wgScriptPath + '/wikia.php',
				data: {
					controller: 'Fandom\\UserProfileActivity\\UserProfileActivity',
					method: 'getData',
					type: type,
					userId: id,
					page: page,
					uselang: 'en'
				}
			}).done(function(html) {
				// –æ–±—Ö–æ–¥–∏–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –∏—Ö —Ç–µ–∫—Å—Ç
				$(html).siblings('.Message').each(function(_, e) {
					accum.push({
						type: type,
						time: Date.parse($(e).find('.Message__timestamp').text().replace(/,/g, '') + ' UTC'),
						text: $(e).find('.Message__description').html().replace(/[\t\n]+/g, '')
					})
				})
				console.debug('[KOF-UAF] Getting', type, 'page', page)
				
				// –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ –±–æ–ª—å—à–µ –∑–∞–ø–∏—Å–µ–π, —É—Ö–æ–¥–∏–º –≤ —Ä–µ–∫—É—Ä—Å–∏—é
				if ($(html).siblings('.UserProfileActivity__loadMore').length)
					res(getData(type, id, page + 1, accum))
				else { // –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —Ä–µ–∑–æ–ª–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é
					console.debug('[KOF-UAF] All', type, 'were retrieved!')
					$('#' + PREFIX + 'loading-' + type).text('–≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!')
					res(accum)
				}
			}).fail(function(err) {
				console.error('[KOF-UAF] Page', page, 'of', type, 'loading failed:', err)
				$('#' + PREFIX + 'loading-' + type).text('–æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ' + (page + 1) + '-–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã!')
				rej(err)
			})
		})
	}
	
	function render(data) {
		// —Ä–µ–Ω–¥–µ—Ä–∏–º –≤—Å–µ, —á—Ç–æ –Ω–∞–±—Ä–∞–ª–æ—Å—å
		$('.' + PREFIX + 'list').empty()

		const union = []
		data.forEach(function(t, n) {
			t.forEach(function(e) { union.push(e) })
			$('.' + PREFIX + 'counter').eq(n).text('(' + t.length + ')')
		})
		if (!union.length) return $('.' + PREFIX + 'list').text('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
		union.sort(function(a, b) { return b.time - a.time })
		.forEach(function(entry) {
			$('.' + PREFIX + 'list').append($('<div>', {
				class: PREFIX + 'entry ' + entry.type,
				html: entry.text,
				'data-ts': entry.time
			}))
		})
	}
});