/*
 Copyright (C) 2008 ha55ii, http://dan-ball.jp/
 Modifications by ZoshiX
*/

var ba, ca = 0,
    ea = window,
    fa = 512,     /* Window Width */
    ha = 443,     /* Window Height */
    f = 0,
    ka, la, ma, na, oa, pa, qa, ra, sa = 0,
    ta = 0,
    xa = new wa,
    za = new wa,
    Aa = new wa,
    Ba = new wa,
    Fa = new wa,
    Ga = new wa,
    Ha, Ia, Ja = [0, 0, 0, 0, 0, 0, 0, 0],
    Ka, Ma = new wa,
    Na = new wa,
    Oa = Array(12),
    Pa = new wa, 
    Qa = new wa,
    Sa = new wa,
    Ta = new wa, 
    Va = new wa,
    Wa = new wa,
    Ya = new wa,
    ab = new wa,
    db = new wa, 
    eb = new wa, 
    fb = new wa,
    gb = new wa,
    hb = new wa,
    jb = new wa,
    kb = new wa,
    lb = new wa,
    h = 0,
    mb = 0,
    l = 0,
    nb = 0,
    ob = 0,
    p = 0,
    pb = 3,
    qb = !1,
    rb = 0,
    vb = 0,
    wb = 0,
    yb = [0, 0, 0, 0],
    zb = [0, 0, 0, 0],
    Bb = [0, 0, 0, 0],
    Cb = [0, 0, 0, 0],
    Fb = 0,
    Gb = 0,
    Hb = 0,
    Ib = 0,
    Jb = 0,
    Kb = [1, 1],
    Lb = [1, 1],
    Mb = [0, 0],
    Nb = [0, 0, 0, 0, 0, 0, 0, 0],
    Ob = 0,
    Qb = 0,
    cc = [0, 0, 0, 0, 0, 0, 0, 0],
    q = [50, 50, 50, 50, 50, 50, 50, 50],
    dc = [0, 0, 0, 0, 0, 0, 0, 0],
    ec = [0, 0, 0, 0, 0, 0, 0, 0],
    fc = [0, 0, 0, 0, 0, 0, 0, 0],
    gc = [0, 0, 0, 0, 0, 0, 0, 0],
    hc = [0, 0, 0, 0, 0, 0, 0, 0],
    ic = [50, 50, 50, 50, 50, 50, 50, 50],
    jc = [0, 0, 0, 0, 0, 0, 0, 0],
    kc = [0, 0, 0, 0, 0, 0, 0, 0],
    lc = [0, 0, 0, 0, 0, 0, 0, 0],
    mc = [0, 0, 0, 0, 0, 0, 0, 0],
    nc = [0, 0, 0, 0, 0, 0, 0, 0],
    oc = [0, 0, 0, 0, 0, 0, 0, 0],
    pc = [0, 0, 0, 0, 0, 0, 0, 0],
    qc = [0, 0, 0, 0, 0, 0, 0, 0],
    rc = [1, 1, 1, 1, 1, 1, 1, 1],
    sc = 0,
    tc = 0,
    uc = 0,
    vc = 0,
    xc = 1,
    yc = [0, 0, 0, 0, 0, 0, 0, 0],
    zc = [0, 0, 0, 0, 0, 0, 0, 0],
    Ac = [0, 0, 0, 0, 0, 0, 0, 0],
    s = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    Bc = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    Cc = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    t = 4,
    Dc = 16,
    Ec = 40,
    Fc = 41,
    Gc = 59,
    Hc = "Stickman Boxer Gladiator Archer Magician Priest Gunner Whipper Angel".split(" "),
    Ic = "123456789S".split(""),
    Jc = [
          [
            [3, 7, 11, 15, 54, 64, 68, 72, 116, 121, 131, 137, 153, 178, 202, 214, 226, 253, 312, 328, 345, 360, 394, 410, 429, 451, 471,
                479, 496, 504, 512, 520, 0
            ],
            [4, 8, 12, 16, 55, 65, 69, 73, 117, 122, 132, 138, 154, 179, 203, 215, 227, 254, 313, 329, 346, 361, 395, 411, 430, 452, 472, 480, 497, 505, 513, 521, 0],
            [5, 9, 13, 17, 56, 66, 70, 74, 118, 123, 133, 139, 155, 180, 204, 216, 228, 255, 314, 330, 347, 362, 396, 412, 431, 453, 473, 481, 498, 506, 514, 522, 0],
            [6, 10, 14, 18, 57, 67, 71, 75, 119, 124, 134, 140, 156, 181, 205, 217, 229, 256, 315, 331, 348, 363, 397, 413, 432, 454, 474, 482, 499, 507, 515, 523, 0],
            [58, 60, 61, 62, 63, 115, 126, 127, 128, 129, 135, 141, 157, 182, 206, 218, 230, 257, 316, 332, 349, 364, 398, 414, 433, 455, 475, 483, 500,
                508, 516, 524, 0
            ],
            [76, 77, 78, 79, 80, 81, 82, 83, 120, 125, 136, 142, 158, 183, 207, 219, 231, 258, 317, 333, 350, 365, 399, 415, 434, 456, 476, 484, 501, 509, 517, 525, 0],
            [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 220, 232, 259, 318, 334, 351, 366, 400, 416, 435, 457, 477, 485, 502, 510, 518, 526, 0],
            [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 319, 335, 352, 367, 401, 417, 436, 458, 478, 486, 503, 511, 519, 527, 0]
         ],
         [
            [19, 20, 21, 22, 23, 0, 0, 0, 0],
            [24, 25, 26, 27, 28, 0, 0, 0, 0],
            [31, 32, 33, 34, 35, 36, 37, 38, 0],
            [29, 39, 40, 41, 42, 43,
                44, 45, 47, 46, 341, 389, 406, 441, 459
            ],
            [51, 52, 53, 48, 0, 0, 0, 0, 0],
            [243, 244, 245, 0, 0, 0, 0, 0, 0],
            [277, 285, 0, 0, 0, 0, 0, 0, 0]
         ],
         [
            [270, 270, 0, 0, 0, 0, 0, 0, 0],
            [271, 271, 0, 0, 0, 0, 0, 0, 0],
            [272, 272, 0, 0, 0, 0, 0, 0, 0],
            [273, 273, 0, 0, 0, 0, 0, 0, 0],
            [274, 274, 0, 0, 0, 0, 0, 0, 0],
            [275, 275, 0, 0, 0, 0, 0, 0, 0],
            [276, 276, 0, 0, 0, 0, 0, 0, 0],
            [307, 307, 0, 0, 0, 0, 0, 0, 0]
         ],
         [
            [19, 84, 143, 209, 323, 418, 20, 85, 144, 210, 324, 419, 21, 86, 145, 211, 325, 420, 22, 87, 146, 212, 326, 421, 23, 88, 147, 213, 327, 422],
            [24, 89, 148, 221, 336, 0, 25, 90, 149, 222, 337, 0, 26, 91, 150, 223, 338, 0, 27, 92, 151, 224, 339, 0, 28, 93,
                152, 225, 340, 0
            ],
            [31, 96, 161, 260, 369, 0, 32, 97, 162, 261, 370, 0, 33, 98, 163, 262, 371, 0, 34, 99, 164, 263, 372, 0, 35, 100, 165, 264, 373, 0, 36, 101, 166, 265, 374, 0, 37, 102, 167, 266, 375, 0, 38, 103, 168, 267, 376, 0],
            [39, 104, 169, 237, 353, 0, 40, 105, 170, 242, 354, 0, 41, 106, 171, 240, 355, 0, 42, 107, 172, 268, 0, 0, 43, 108, 173, 269, 356, 0, 44, 109, 174, 238, 357, 0, 45, 110, 175, 249, 0, 0, 47, 111, 176, 239, 358, 0, 46, 130, 177, 241, 359, 0, 341, 342, 343, 344, 368, 0, 389, 390, 391, 392, 393, 0, 406, 407, 408, 409, 0, 0, 459, 460, 461, 462, 463, 0],
            [385, 386, 387, 388, 0, 0, 0, 0, 0],
            [243, 244, 245, 246, 247,
                248, 250, 251, 252, 320, 321, 322
            ],
            [277, 285, 377, 279, 287, 379, 281, 308, 381, 283, 310, 0]
         ]
    ],
    Kc = 0,
    Lc = 1,
    Mc = 2,
    Nc = 3,
    Oc = 4,
    Pc = 5,
    Qc = 6,
    Rc = 10,
    Sc = 11,
    Tc = 12,
    Uc = 14,
    Vc = 15,
    Wc = 16,
    Xc = 19,
    Yc = 34,
    Zc = 35,
    $c = 36,
    ad = 37,
    cd = 39,
    dd = 40,
    ed = 44,
    fd = 7,
    u = 8,
    gd = 9,
    hd = 10,
    id = 11,
    jd = 1,
    kd = 2,
    ld = 3,
    md = 4,
    nd = 5,
    od = 6,
    pd = 7,
    qd = 8,
    rd = 9,
    sd = 10,
    td = 11,
    ud = 12,
    vd = 37,
    wd = 13,
    xd = 14,
    yd = 15,
    zd = 16,
    Ad = 17,
    Bd = 18,
    Cd = 19,
    Dd = 20,
    Ed = 21,
    Fd = 22,
    Gd = 23,
    Hd = 24,
    Id = 25,
    Jd = 26,
    Kd = 27,
    Ld = 28,
    Md = 29,
    Nd = 32,
    Od = 33,
    Pd = 34,
    Qd = 35,
    Rd = 36,
    Sd = 38,
    Td = 39,
    Ud = 40,
    Vd = 41,
    Wd = 42,
    Xd = 43,
    Yd = 44,
    Zd = 45,
    $d = 46,
    ae = 47,
    v = Array(549); /* Make sure to keep up with this value if you add items. */

/* 
<<<<<------------------------------ITEM IDs------------------------------>>>>>
*/

v[0] = ["None", 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[59] = ["NG", 0, 0, 13, 12, 9, 4287137928, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[1] = ["Gold", 0, 0, 1, 0, 0, 4294967295, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[2] = ["Onigiri", 0, 0, 2, 0, 0, 4294967295, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

/*

Weapon Template:

v[x] = ["Name", (Tier), (Cost), (SmallIcon), (LargeIcon), (Class), (ARGB Color), (Ring Hit), (Attack Pattern), (Splash Enabled), (MinAT), (MaxAT), (MinMgAT), (MaxMgAT),
(MinAGI), (MaxAGI), (Range), (MP/$$), (Projectiles), (Speed), (Type), (TypeEffectLngth), (ProjAnimation), (ProjShape), (ProjColor), (ProjTransparency), (ProjWidth), (ProjHeight),
(HitboxWidth), (HitboxHeight), (DelaybtwProj), (DelaybfrEffective), (Lifespan), (DisappearTime), (Gravity), (Accel), (Pierce), (TerrainInteract), (Homing Range), (ResiduePattern),
(ResSplashEnabled), (#Residues), (ResAnimation), (ResShape), (ResColor), (ResTrans), (RedWidth), (ResHeight), (RHitboxWidth), (RHitboxHeight), (ResDelayBtw), (ResDelaybfrEff),
(ResLifespan), (ResDisTime), (ResGravity), (ResAccel), (ResPierce), (ResTerrInt)]

*/

/* Gloves */

v[3] = ["Glove", 0, 100, 3, 2, 1, 4284901119, 1, 0, 0, 1, 3, 0, 0, 15, 20, 15, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[7] = ["Mach Punch", 1, 250, 3, 2, 1, 4291611852, 1, 0, 0, 1, 3, 0, 0, 5, 10, 15, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[11] = ["Thunder Glove", 1, 500, 3, 2, 1, 4294967142, 1, 3, 0, 2, 4, 1, 10, 15, 22, 15, 1, 1, 4294967040, 1, 12, 48, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 3, 0, 10, 0, 0, 1, 29, 0];
v[15] = ["Fire Glove", 1, 750, 3, 2, 1, 4294919236, 1, 3, 0, 2, 4, 1, 8, 15, 22, 15, 1, 5, 4294927889, 2, 16, 32, 16, 32, 0, 0, 40, 10, 0, 100, 0, 0, 0, 1, 50, 10, 0, 0, 7, 9, 0];
v[54] = ["Poison Glove", 1, 1E3, 3, 2, 1, 4278255360, 1, 3, 0, 2, 4, 1, 8, 15, 22, 15, 1, 6, 4278255360, 2, 16, 16, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 4, 15, 12, 0, 0, 2, 2, 0];
v[64] = ["Freeze Glove", 2, 1500, 3, 2, 1, 4291611903, 1, 3, 0, 2, 4, 1, 10, 15, 24, 15, 1, 4, 4291611903, 1, 16, 32, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 5, 5, 15, 0, 0, 8, 12, 0];
v[68] = ["Needle Glove", 2, 2E3, 3, 2, 1, 4291603080, 1, 3, 0, 2, 4, 9, 20, 15, 24, 15, 1, 9, 4291603080, 1, 16, 16, 16, 16, 30, 5, 10, 10, 0, 100, 0, 0, 0, 0, 0, 50, 0, 0, 10, 12, 0];
v[72] = ["Spark Glove", 2, 2500, 3, 2, 1, 4294967176, 1, 4, 0, 2, 4, 6, 30, 15, 24, 15, 0, 13, 4294967244, 2, 16, 16, 8, 8, 8, 20, 80, 10, 5, 100, 0, 1, 0, 3, 0, 50, 0, 0, 1, 29, 0];
v[116] = ["Sonic Punch", 2, 3E3, 3, 2, 1, 4294967295, 1, 1, 1, 1, 3, 0, 0, 5, 10, 15, 0, 14, 4294967295, 2, 16, 16, 0, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, -1, 0];
v[121] = ["Thunder Knuckle", 3, 4E3, 3, 18, 1, 4294967142, 1, 3, 0, 4, 8, 2, 10, 15, 26, 15, 1, 10, 4294967091, 2, 12, 32, 16, 16, 10, 0, 8, 8, 0, 100, 0, 0, 0, 3, 0, 25, 0, 0, 1, 29, 0];
v[131] = ["Fire Knuckle", 3, 4500, 3, 18, 1, 4294919236, 1, 2, 0, 5, 10, 1, 1, 15, 26, 15, 1, 5, 4294927889, 2, 16, 32, 32, 16, 0, 0, 40, 10, 0, 100, 0, 0, 0, 1, 50, 25, 0, 0, 15, 18, 0];
v[137] = ["Mach Knuckle", 3, 5E3, 3, 18, 1, 4291611852, 1, 0, 0, 12, 18, 0, 0, 5, 10, 15, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[153] = ["Poison Knuckle", 3, 5500, 3, 18, 1, 4278255360, 1, 3, 0, 6, 12, 1, 8, 15, 26, 15, 1, 9, 4278255360, 2, 16, 32, 16, 16, 0, 0, 10, 20, 0, 100, 0, 0, 0, 4, 15, 30, 0, 0, 4, 4, 0];
v[178] = ["Freeze Knuckle", 4, 6E3, 3, 18, 1, 4291611903, 1, 3, 0, 8, 16, 2, 10, 15, 28, 15, 1, 4, 4291611903, 1, 16, 32, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 5, 10, 30, 0, 0, 12, 20, 0];
v[202] = ["Needle Knuckle", 4, 6500, 3, 18, 1, 4291603080, 1, 403, 0, 8, 16, 18, 20, 15, 28, 15, 1, 9, 4291603080, 1, 16, 16, 16, 16, 50, 5, 10, 10, 0, 100, 0, 0, 0, 0, 0, 80, 0, 0, 11, 13, 0];
v[214] = ["Spark Knuckle", 4, 7E3, 3, 18, 1, 4294967176, 1, 1204, 0, 8, 16, 8, 30, 15, 28, 15, 1, 18, 4294967244, 2, 2, 8, 8, 8, 8, 20, 100, 10, 5, 100, 0, 2, 0, 3, 0, 80, 0, 0, 1, 50, 0];
v[226] = ["Sonic Knuckle", 4, 7500, 3, 18, 1, 4294967295, 1, 5703, 1, 12, 18, 9, 10, 5, 10, 15, 1, 12, 4287137928, 2, 16, 3, 0, 0, 0, 10, 10, 15, 0, 90, 1, 0, 0, 0, 0, -1, 0];
v[253] = ["Thunder Claw", 5, 8E3, 3, 19, 1, 4294967142, 1, 3, 0, 9, 18, 3, 20, 15, 30, 15, 1, 9, 4294967091, 2, 8, 24, 16, 16, 3, 3, 10, 10, 0, 95, 0, 0, 0, 3, 0, 35, 0, 0, 1, 45, 0];
v[270] = ["Charge Punch", 5, 8500, 3, 2, 1, 4284914175, 1, 109, 0, 9, 18, 5, 2, 15, 30, 15, 1, 9, 2282841855, 2, 32, 60, 32, 32, 0, 0, 200, 10, 0, 90, 1, 0, 0, 1, 50, 300, 0, 0, 8, 12, 0];
v[312] = ["Fire Claw", 5, 8500, 3, 19, 1, 4294919236, 1, 3, 0, 9, 18, 3, 3, 15, 30, 15, 1, 9, 4294927889, 2, 8, 24, 16, 16, 0, 0, 60, 10, 0, 100, 0, 0, 0, 1, 50, 35, 0, 0, 10, 15, 0];
v[328] = ["Mach Claw", 5, 9E3, 3, 19, 1, 4291611852, 1, 0, 0, 36, 54, 0, 0, 5, 10, 15, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[345] = ["Poison Claw", 5, 9500, 3, 19, 1, 4278255360, 1, 3, 0, 9, 18, 3, 8, 15, 30, 15, 1, 9, 4278255360, 2, 8, 20, 8, 8, 0, 7, 10, 20, 0, 100, 0, 0, 0, 4, 15, 40, 0, 0, 5, 5, 0];
v[360] = ["Freeze Claw", 6, 1E4, 3, 19, 1, 4291611903, 1, 3, 0, 10, 20, 3, 10, 15, 32, 15, 1, 9, 2295123199, 2, 8, 32, 8, 8, 0, 9, 10, 10, 0, 100, 1, 0, 0, 5, 15, 45, 0, 0, 18, 36, 0];
v[394] = ["Needle Claw", 6, 11E3, 3, 19, 1, 4291603080, 1, 303, 0, 10, 20, 30, 20, 15, 32, 15, 1, 9, 4291603080, 1, 8, 8, 8, 8, 0, 5, 10, 10, 0, 90, 0, 2, 0, 0, 0, 90, 0, 0, 12, 14, 0];
v[410] = ["Spark Claw", 6, 12E3, 3, 19, 1, 4294967176, 1, 109, 0, 10, 20, 10, 1, 15, 32, 15, 1, 13, 4294967244, 2, 8, 8, 8, 8, 8, 20, 120, 10, 1, 99, 0, 2, 20, 3, 0, 100, 0, 0, 1, 99, 0];
v[429] = ["Sonic Claw", 6, 13E3, 3, 19, 1, 4294967295, 1, 3, 1, 36, 54, 7, 10, 5, 10, 15, 1, 12, 1157627903, 2, 32, 3, 0, 0, 0, 10, 10, 10, 0, 90, 1, 0, 0, 0, 0, -1, 0];
v[451] = ["Thunder Cestus", 7, 15E3, 3, 20, 1, 4294967142, 1, 9, 0, 11, 22, 5, 4, 15, 34, 15, 1, 20, 4294967091, 2, 16, 48, 16, 16, 10, 3, 10, 10, 0, 95, 1, 0, 0, 3, 0, 40, 0, 0, 1, 120, 0];
v[471] = ["Fire Cestus", 7, 16E3, 3, 20, 1, 4294919236, 1, 9, 0, 11, 22, 5, 2, 15, 34, 15, 1, 22, 4294927889, 2, 4, 24, 16, 16, 10, 0, 50, 10, 0, 95, 1, 0, 0, 1, 50, 40, 0, 0, 20, 40, 0];
v[479] = ["Mach Cestus", 7, 17E3, 3, 20, 1, 4291611852, 1, 0, 0, 80, 120, 0, 0, 4, 6, 15, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[496] = ["Poison Cestus", 7, 18E3, 3, 20, 1, 4278255360, 1, 109, 0, 11, 22, 6, 5, 15, 34, 15, 0, 6, 4278242304, 2, 16, 16, 24, 24, 0, 9, 10, 10, 0, 80, 0, 1, 0, 4, 5, 50, 0, 0, 24, 24, 0];
v[504] = ["Freeze Cestus", 8, 19E3, 3, 20, 1, 4291611903, 1, 109, 0, 12, 24, 6, 10, 15, 36, 15, 1, 16, 2295123199, 2, 16, 16, 12, 12, 0, 9, 10, 30, 0, 60, 1, 0, 0, 5, 20, 60, 0, 0, 26, 60, 0];
v[512] = ["Needle Cestus", 8, 2E4, 3, 20, 1, 4291603080, 1, 303, 0, 12, 24, 60, 20, 15, 36, 15, 1, 9, 4291603080, 1, 4, 8, 8, 8, 15, 5, 10, 10, 0, 90, 0, 2, 0, 0, 0, 100, 0, 0, 13, 15, 0];
v[520] = ["Spark Cestus", 8, 21E3, 3, 20, 1, 4294967176, 1, 109, 0, 12, 24, 12, 5, 15, 36, 15, 1, 15, 4294967244, 2, 8, 8, 8, 8, 8, 20, 120, 10, 1, 90, 0, 2, 50, 3, 0, 120, 0, 0, 1, 199, 0];

/* Swords */

v[4] = ["Sword", 0, 100, 4, 3, 2, 4287137928, 1, 0, 0, 1, 5, 0, 0, 20, 30, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[8] = ["Iron Sword", 1, 250, 4, 3, 2, 4289374890, 1, 0, 0, 5, 10, 0, 0, 20, 30, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[12] = ["Fire Sword", 1, 500, 4, 3, 2, 4294919236, 1, 1, 0, 10, 15, 0, 0, 20, 30, 30, 0, 5, 4294927889, 2, 16, 32, 16, 32, 0, 0, 50, 10, 50, 100, 0, 1, 0, 1, 20, 10, 0, 0, 1, 3, 10];
v[16] = ["Thunder Sword", 1, 750, 4, 3, 2, 4294967142, 1, 1, 0, 10, 15, 0, 0, 20, 30, 30, 1, 10, 4294967108, 2, 16, 16, 8, 8, 0, 0, 12, 10, 50, 100, 0, 0, 0, 3, 0, 10, 0, 0, 1, 7, 10];
v[55] = ["Ice Sword", 1, 1E3, 4, 3, 2, 4289374975, 1, 1, 0, 10, 15, 0, 0, 20, 30, 30, 0, 8, 2292886271, 2, 12, 12, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 2, 20, 12, 0, 0, 3, 5, 10];
v[65] = ["Long Sword", 2, 1500, 4, 3, 2, 4290493371, 1, 0, 0, 10, 20, 0, 0, 20, 30, 35, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[69] = ["Lightsaber", 2, 2E3, 4, 3, 2, 4294967142, 2, 7, 0, 10, 15, 1, 1, 20, 30, 30, 1, 10, 2298478404, 2, 16, 32, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 3, 0, 70, 0, 0, 1, 7, 70];
v[73] = ["Flame Sword", 2, 2500, 4, 3, 2, 4294919236, 1, 7, 1, 10, 15, 1, 5, 20, 30, 30, 1, 6, 4294927889, 2, 8, 32, 16, 16, 0, 0, 20, 10, 0, 100, 0, 0, 0, 1, 50, 70, 0, 0, 1, 3, 70];
v[117] = ["Frozen Sword", 2, 3E3, 4, 3, 2, 4288269567, 1, 7, 1, 10, 15, 1, 20, 20, 30, 30, 1, 4, 4288269567, 2, 16, 64, 64, 32, 0, 5, 10, 40, 0, 100, 0, 0, 0, 2, 20, 70, 0, 0, 20, 30, 3];
v[122] = ["Saber", 3, 4E3, 4, 21, 2, 4289374890, 1, 0, 0, 20, 40, 0, 0, 20, 30, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[132] = ["Fire Saber", 3, 4500, 4, 21, 2, 4294919236, 1, 7, 0, 12, 18, 1, 1, 20, 30, 30, 1, 6, 4294927889, 2, 20, 6, 16, 16, 0, 0, 50, 15, 0, 99, 1, 0, 0, 1, 25, 20, 0, 0, 5, 6, 10];
v[138] = ["Thunder Saber", 3, 5E3, 4, 21, 2, 4294967142, 1, 10, 0, 12, 18, 1, 20, 20, 30, 30, 1, 10, 4294967108, 2, 16, 16, 8, 8, 0, 3, 9, 10, 10, 100, 0, 0, 0, 3, 0, 20, 0, 0, 1, 29, 10];
v[154] = ["Ice Saber", 3, 5500, 4, 21, 2, 4289374975, 1, 7, 0, 12, 18, 1, 1, 20, 30, 30, 1, 4, 2292886271, 2, 16, 32, 16, 16, 0, 0, 50, 10, 0, 90, 1, 0, 0, 2, 20, 25, 0, 0, 10, 20, 10];
v[179] = ["Long Saber", 4, 6E3, 4, 21, 2, 4290493371, 1, 0, 0, 20, 50, 0, 0, 20, 30, 40, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[203] = ["Lightsaber", 4, 6500, 4, 21, 2, 4284940134, 2, 7, 0, 15, 20, 1, 1, 20, 30, 30, 1, 18, 2286223172, 2, 16, 32, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 3, 0, 100, 0, 0, 1, 14, 100];
v[215] = ["Flame Saber", 4, 7E3, 4, 21, 2, 4294919236, 1, 7, 1, 15, 20, 1, 5, 20, 30, 30, 1, 6, 4294927889, 2, 8, 32, 16, 16, 0, 0, 20, 10, 0, 100, 0, 0, 50, 1, 50, 100, 0, 0, 2, 6, 100];
v[227] = ["Frozen Saber", 4, 7500, 4, 21, 2, 4288269567, 1, 7, 0, 15, 20, 1, 15, 20, 30, 30, 1, 4, 4288269567, 2, 12, 16, 8, 8, 0, 15, 100, 10, 0, 100, 0, 0, 100, 5, 5, 100, 0, 0, 20, 30, 10];
v[254] = ["Blade", 5, 8E3, 4, 22, 2, 4289374890, 1, 0, 0, 50, 80, 0, 0, 20, 30, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[271] = ["Wooden Sword", 5, 8500, 4, 22, 2, 4287120384, 1, 0, 0, 1, 1, 0, 0, 20, 30, 50, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[313] = ["Fire Blade", 5, 8500, 4, 22, 2, 4294919236, 1, 7, 0, 20, 20, 1, 1, 20, 30, 30, 1, 9, 2298439185, 2, 8, 32, 16, 16, 0, 0, 200, 15, 0, 99, 0, 0, 0, 1, 30, 30, 0, 0, 3, 4, 10];
v[329] = ["Thunder Blade", 5, 9E3, 4, 22, 2, 4294967142, 1, 7, 0, 20, 20, 30, 1, 20, 30, 30, 1, 10, 2298478404, 2, 16, 40, 32, 16, 90, 0, 3, 3, 0, 100, 0, 0, 0, 3, 0, 30, 0, 0, 1, 29, 1];
v[346] = ["Ice Blade", 5, 9500, 4, 22, 2, 4289374975, 1, 7, 0, 20, 20, 1, 15, 20, 30, 30, 1, 4, 2292886271, 2, 8, 16, 8, 8, 0, 20, 60, 10, 0, 100, 1, 0, 50, 2, 20, 35, 0, 0, 15, 35, 10];
v[361] = ["Long Blade", 6, 1E4, 4, 22, 2, 4290493371, 1, 0, 0, 50, 100, 0, 0, 20, 30, 45, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[395] = ["Lightsaber", 6, 11E3, 4, 22, 2, 4284901119, 2, 7, 0, 20, 25, 1, 1, 20, 30, 30, 1, 9, 2286175487, 2, 16, 32, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 3, 0, 120, 0, 0, 1, 45, 120];
v[411] = ["Flame Blade", 6, 12E3, 4, 22, 2, 4294919236, 1, 7, 1, 20, 25, 1, 10, 20, 30, 30, 1, 6, 2298430481, 2, 10, 30, 16, 16, 0, 0, 60, 10, -1, 90, 1, 0, 0, 1, 50, 120, 0, 0, 6, 9, 120];
v[430] = ["Frozen Blade", 6, 13E3, 4, 22, 2, 4288269567, 1, 3, 1, 20, 25, 1, 20, 20, 30, 30, 1, 4, 3432631551, 2, 16, 64, 48, 48, 0, 5, 10, 40, 0, 100, 0, 0, 0, 5, 5, 120, 0, 0, 40, 60, 3];
v[452] = ["GreatSword", 7, 15E3, 4, 23, 2, 4289374890, 1, 0, 0, 150, 250, 0, 0, 20, 30, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[472] = ["Fire GreatSword", 7, 16E3, 4, 23, 2, 4294919236, 1, 1, 0, 30, 30, 0, 0, 20, 30, 30, 0, 23, 3439289873, 2, 16, 32, 16, 32, 0, 0, 200, 10, 50, 100, 0, 1, 0, 1, 35, 40, 0, 0, 6, 8, 15];
v[480] = ["Thunder GreatSword", 7, 17E3, 4, 23, 2, 4294967142, 1, 7, 0, 30, 30, 9, 1, 20, 30, 30, 1, 10, 2298478404, 2, 8, 32, 16, 16, 30, 0, 3, 3, 0, 100, 0, 0, 0, 3, 0, 40, 0, 0, 1, 29, 10];
v[497] = ["Ice GreatSword", 7, 18E3, 4, 23, 2, 4289374975, 1, 7, 1, 30, 30, 1, 40, 20, 30, 30, 1, 22, 2292886271, 2, 8, 48, 48, 48, 0, 5, 6, 10, 0, 100, 1, 0, 0, 2, 25, 45, 0, 0, 25, 55, 10];
v[505] = ["Long GreatSword", 8, 19E3, 4, 23, 2, 4290493371, 1, 0, 0, 100, 200, 0, 0, 20, 30, 50, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[513] = ["Lightsaber", 8, 2E4, 4, 23, 2, 4294927974, 2, 7, 0, 30, 35, 1, 1, 20, 30, 30, 1, 18, 2298430532, 2, 16, 32, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 3, 0, 130, 0, 0, 1, 150, 130];
v[521] = ["Flame GreatSword", 8, 21E3, 4, 23, 2, 4294919236, 1, 7, 1, 30, 35, 1, 50, 20, 30, 30, 1, 22, 2298439185, 2, 10, 20, 16, 16, 0, 0, 120, 10, 0, 90, 1, 0, 50, 1, 50, 130, 0, 0, 9, 12, 130];

/* Bows */

v[5] = ["Bow", 0, 100, 5, 4, 3, 4294954086, 1, 4, 0, 2, 3, 1, 100, 30, 40, 90, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[9] = ["Triple Shot", 1, 250, 5, 14, 3, 4294954086, 1, 3, 0, 2, 3, 3, 100, 30, 40, 150, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[13] = ["Poison Arrow", 1, 500, 5, 4, 3, 4278255360, 1, 4, 0, 4, 6, 1, 100, 30, 40, 90, 1, 3, 4278255360, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 4, 50, 10, 1, 0, 1, 1, 1, 0, 6, 4278255360, 1, 32, 32, 32, 32, 0, 0, 100, 10, 0, 100, 0, 0];
v[17] = ["Double Arrow", 1, 750, 5, 15, 3, 4294954086, 1, 4, 0, 8, 12, 2, 100, 30, 40, 90, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[56] = ["Fire Arrow", 1, 1E3, 5, 4, 3, 4294919236, 1, 4, 0, 8, 12, 1, 100, 30, 40, 90, 1, 3, 4294919236, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 1, 50, 12, 1, 1, 4, 6, 1, 0, 5, 4294927889, 2, 16, 32, 16, 32, 0, 0, 100, 10, 30, 100, 0, 1];
v[66] = ["Triple Arrow", 2, 1500, 5, 16, 3, 4294954086, 1, 4, 0, 8, 12, 3, 100, 30, 40, 90, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[70] = ["Quadruple Arrow", 2, 2E3, 5, 17, 3, 4294954086, 1, 4, 0, 8, 12, 4, 100, 30, 40, 90, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[74] = ["Octuple Arrow", 2, 2500, 5, 17, 3, 4294954086, 1, 4, 0, 4, 6, 8, 100, 45, 60, 90, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[118] = ["Double Poison", 2, 3E3, 5, 15, 3, 4288269312, 1, 4, 0, 8, 12, 2, 100, 30, 40, 90, 1, 3, 4288269312, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 4, 50, 20, 1, 0, 1, 2, 1, 0, 6, 2291780608, 1, 32, 32, 32, 32, 0, 0, 100, 10, 0, 100, 0, 0];
v[123] = ["Quint Shot", 3, 4E3, 5, 14, 3, 4294954086, 1, 3, 0, 4, 6, 5, 100, 30, 40, 150, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[133] = ["Double Fire", 3, 4500, 5, 15, 3, 4294919236, 1, 4, 0, 9, 15, 2, 100, 30, 40, 90, 1, 3, 4294919236, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 1, 50, 20, 1, 1, 8, 9, 1, 0, 5, 4294927889, 2, 16, 32, 16, 32, 0, 0, 100, 10, 30, 100, 0, 1];
v[139] = ["Double Iron Arrow", 3, 5E3, 5, 15, 3, 4284900966, 1, 4, 0, 16, 24, 2, 80, 30, 40, 90, 1, 3, 4284900966, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[155] = ["Triple Iron Arrow", 3, 5500, 5, 16, 3, 4284900966, 1, 104, 0, 15, 20, 3, 80, 30, 40, 90, 1, 3, 4284900966, 1, 16, 16, 8, 8, 30, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[180] = ["Triple Poison", 4, 6E3, 5, 16, 3, 4288269312, 1, 4, 0, 10, 16, 3, 80, 30, 40, 90, 1, 3, 4288269312, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 4, 50, 25, 1, 0, 2, 2, 1, 0, 6, 2291780608, 1, 32, 32, 32, 32, 0, 0, 100, 10, 0, 100, 0, 0];
v[204] = ["Fire Shot", 4, 6500, 5, 14, 3, 4294919236, 1, 3, 0, 4, 6, 3, 15, 30, 40, 90, 1, 3, 4294919236, 1, 16, 16, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 1, 50, 30, 5, 1, 6, 8, 1, 1, 5, 4294927889, 2, 16, 32, 16, 16, 0, 0, 100, 10, 0, 100, 1, 0];
v[216] = ["Quad Iron Arrow", 4, 7E3, 5, 17, 3, 4284900966, 1, 4, 0, 16, 24, 4, 80, 30, 40, 90, 1, 3, 4284900966, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[228] = ["Nonuple Arrow", 4, 7500, 5, 17, 3, 4284900966, 1, 4, 0, 8, 12, 9, 80, 45, 60, 90, 1, 3, 4284900966, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[255] = ["Poison Shot", 5, 8E3, 5, 14, 3, 4288269312, 1, 3, 0, 4, 6, 3, 15, 30, 40, 90, 1, 3, 4288269312, 1, 16, 16, 4, 4, 0, 0, 300, 10, 0, 100, 0, 0, 0, 4, 50, 35, 1, 0, 2, 2, 1, 0, 6, 2291780608, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 1, 0];
v[272] = ["Pyramid Arrow", 5, 8500, 5, 4, 3, 4284874803, 1, 4, 0, 9, 15, 1, 80, 30, 40, 90, 1, 3, 4284874803, 1, 16, 16, 8, 8, 0, 5, 500, 10, 8, 100, 0, 0, 0, 4, 66, 35, 2, 0, 3, 3, 30, 0, 6, 4284874854, 2, 16, 16, 16, 16, 0, 0, 66, 10, 0, 86, 0, 0];
v[314] = ["Flame Arrow", 5, 8500, 5, 4, 3, 4294940979, 1, 4, 0, 16, 24, 1, 80, 30, 40, 90, 1, 3, 4294940979, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 1, 50, 35, 3, 1, 8, 9, 5, 0, 6, 4294927889, 2, 16, 16, 16, 16, 0, 0, 100, 10, 0, 98, 0, 1];
v[330] = ["Septuple Shot", 5, 9E3, 5, 14, 3, 4294954086, 1, 803, 0, 6, 9, 7, 80, 30, 40, 150, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[347] = ["Pierce Arrow", 5, 9500, 5, 17, 3, 4293848814, 1, 4, 0, 16, 24, 4, 80, 30, 40, 90, 1, 3, 4293848814, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 1, 0, 0, 0, 0, 0, 0];
v[362] = ["Quintuple Poison", 6, 1E4, 5, 17, 3, 4288269312, 1, 4, 0, 16, 24, 5, 80, 30, 40, 90, 1, 3, 4288269312, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 4, 50, 40, 1, 0, 2, 2, 1, 0, 6, 2291780608, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0];
v[396] = ["Double Flame", 6, 11E3, 5, 15, 3, 4294940979, 1, 4, 0, 16, 24, 2, 80, 30, 40, 90, 1, 3, 4294940979, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 1, 50, 40, 3, 1, 8, 9, 3, 0, 6, 4294927889, 2, 16, 16, 16, 16, 0, 0, 100, 10, 0, 98, 0, 1];
v[402] = ["Indra Arrow", 6, 2E4, 5, 4, 3, 4294967040, 1, 4, 0, 1, 3333, 1, 120, 60, 80, 90, 1, 3, 4294967040, 1, 16, 16, 8, 8, 0, 0, 500, 10, 8, 100, 0, 0, 0, 3, 0, 0, 0];
v[412] = ["Quad Steel Arrow", 6, 12E3, 5, 17, 3, 4288256409, 1, 604, 0, 48, 72, 4, 60, 30, 40, 90, 1, 3, 4288256409, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[431] = ["Undecuple Arrow", 6, 13E3, 5, 17, 3, 4288256409, 1, 4, 0, 24, 36, 11, 80, 45, 60, 90, 1, 3, 4288256409, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[453] = ["Nonuple Shot", 7, 15E3, 5, 14, 3, 4294954086, 1, 803, 0, 8, 12, 9, 80, 30, 40, 150, 1, 3, 4294954086, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 0, 0, 0];
v[473] = ["Flame Shot", 7, 16E3, 5, 14, 3, 4294919236, 1, 803, 0, 8, 12, 5, 10, 30, 40, 90, 1, 3, 4294919236, 1, 16, 16, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 1, 50, 45, 5, 1, 12, 16, 1, 1, 22, 4294927889, 2, 16, 16, 16, 16, 0, 0, 100, 10, 0, 100, 1, 0];
v[481] = ["Octuple Poison", 7, 17E3, 5, 17, 3, 4288269312, 1, 4, 0, 16, 24, 8, 80, 30, 40, 90, 1, 3, 4288269312, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 4, 50, 45, 1, 0, 3, 3, 1, 0, 6, 2291780608, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0];
v[498] = ["Double Hellfire", 7, 18E3, 5, 15, 3, 4294901862, 1, 4, 0, 16, 24, 2, 70, 30, 40, 90, 1, 3, 4288217139, 1, 16, 16, 8, 8, 0, 0, 300, 10, 9, 100, 0, 0, 0, 1, 50, 50, 1, 1, 90, 99, 1, 0, 24, 4294910532, 2, 16, 32, 16, 32, 0, 0, 100, 10, 30, 100, 0, 1];
v[506] = ["Quint Gold Arrow", 8, 19E3, 5, 4, 3, 4294956800, 1, 104, 0, 96, 144, 5, 80, 30, 40, 90, 1, 3, 4294956800, 1, 16, 16, 8, 8, 30, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[514] = ["Vigintuple Arrow", 8, 2E4, 5, 17, 3, 4294956800, 1, 1604, 0, 48, 72, 20, 80, 45, 60, 90, 1, 3, 4294956800, 1, 16, 16, 8, 8, 0, 0, 300, 10, 8, 100, 0, 0, 0, 0, 0, 0, 0];
v[522] = ["Oct Poison Shot", 8, 21E3, 5, 14, 3, 4288269312, 1, 3, 0, 8, 12, 8, 15, 30, 40, 90, 1, 3, 4288269312, 1, 16, 16, 4, 4, 0, 0, 300, 10, 0, 100, 0, 0, 0, 4, 50, 50, 1, 0, 4, 4, 1, 0, 6, 2291780608, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 1, 0];

/* Orbs */

v[6] = ["Magic", 0, 100, 6, 5, 4, 4278255615, 1, 3, 0, 5, 10, 1, 30, 80, 90, 90, 0, 2, 4278225151, 1, 16, 16, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[10] = ["Explosion", 1, 250, 6, 5, 4, 4294936576, 1, 3, 0, 5, 10, 1, 30, 80, 90, 90, 0, 2, 4294936576, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 1, 0, 0, 1, 1, 5, 10, 1, 0, 2, 1157597184, 1, 48, 48, 32, 32, 0, 0, 10, 10, 0, 100, 0, 0];
v[14] = ["Ice", 1, 500, 6, 5, 4, 4290493439, 1, 3, 0, 5, 10, 1, 30, 80, 90, 90, 0, 7, 4287138047, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 2, 30, 0, 0];
v[18] = ["Fire", 1, 750, 6, 5, 4, 4294910498, 1, 4, 0, 2, 6, 1, 60, 80, 90, 80, 1, 5, 4294927889, 2, 16, 32, 16, 16, 0, 0, 100, 10, 5, 100, 0, 0, 0, 1, 80, 0, 1, 1, 2, 6, 1, 0, 5, 4294927889, 2, 32, 32, 32, 32, 0, 0, 200, 10, 50, 100, 0, 1];
v[57] = ["Thunder", 1, 1E3, 6, 5, 4, 4294967142, 1, 5, 0, 1, 30, 3, 5, 80, 90, 80, 1, 10, 4294967142, 2, 16, 16, 16, 16, 0, 0, 100, 10, 0, 100, 0, 0, 0, 3, 0, 0, 0];
v[67] = ["Freeze", 2, 1500, 6, 5, 4, 4291611903, 1, 3, 0, 5, 10, 1, 30, 80, 90, 90, 1, 16, 4291611903, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 5, 50, 0, 0];
v[71] = ["Blizzard", 2, 2E3, 6, 5, 4, 4287138047, 1, 8, 0, 5, 10, 9, 30, 120, 135, 90, 1, 16, 4287138047, 1, 16, 16, 8, 8, 100, 0, 100, 10, 8, 100, 0, 0, 0, 2, 30, 0, 0];
v[75] = ["Volcano", 2, 2500, 6, 5, 4, 4294919168, 1, 4, 0, 2, 6, 1, 50, 120, 135, 80, 0, 12, 4294919168, 2, 16, 16, 8, 8, 0, 0, 100, 10, 8, 100, 0, 0, 0, 1, 50, 0, 4, 1, 2, 6, 9, 0, 5, 4294927889, 2, 16, 32, 16, 32, 50, 0, 100, 10, 5, 98, 0, 1];
v[119] = ["Thunderstorm", 2, 3E3, 6, 5, 4, 4294967091, 1, 8, 0, 1, 30, 12, 0, 120, 135, 90, 1, 10, 4294967091, 2, 16, 16, 8, 8, 100, 0, 100, 10, 90, 100, 0, 0, 0, 3, 0, 0, 0];
v[124] = ["Delta Explosion", 3, 4E3, 6, 24, 4, 4294936576, 1, 9, 1, 10, 20, 3, 5, 80, 90, 80, 1, 2, 2298447906, 2, 8, 40, 24, 24, 10, 10, 15, 3, 0, 80, 1, 0, 0, 1, 0, 0, 0];
v[134] = ["Icicle", 3, 4500, 6, 24, 4, 4290493439, 1, 3, 0, 15, 25, 1, 50, 80, 90, 90, 1, 9, 4287138047, 1, 16, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 2, 35, 0, 0];
v[140] = ["Fire Rise", 3, 5E3, 6, 24, 4, 4294910498, 1, 4, 0, 2, 6, 5, 80, 80, 90, 80, 1, 5, 4294927889, 2, 16, 32, 16, 16, 20, 0, 100, 10, -2, 99, 0, 1, 0, 1, 30, 0, 0];
v[156] = ["Big Thunder", 3, 5500, 6, 24, 4, 4294967142, 1, 5, 1, 1, 150, 1, 8, 80, 90, 80, 1, 10, 4294967142, 2, 32, 64, 64, 64, 0, 5, 100, 10, 0, 100, 1, 0, 0, 3, 0, 0, 0];
v[181] = ["Big Icicle", 4, 6E3, 6, 24, 4, 4291611903, 1, 5, 1, 10, 20, 1, 8, 80, 90, 90, 1, 9, 4291611903, 1, 32, 64, 64, 64, 0, 5, 100, 10, 0, 100, 1, 0, 0, 5, 50, 0, 0];
v[205] = ["Ice Meteor", 4, 6500, 6, 24, 4, 4287138047, 1, 5, 0, 100, 150, 1, 5, 120, 135, 90, 1, 16, 4287138047, 2, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 2, 30, 0, 4, 0, 10, 15, 9, 1, 16, 4287138047, 2, 16, 16, 8, 8, 0, 10, 100, 10, 5, 100, 0, 0];
v[217] = ["Super Volcano", 4, 7E3, 6, 24, 4, 4294919168, 1, 4, 0, 2, 6, 1, 50, 120, 135, 80, 0, 12, 4294919168, 2, 16, 16, 8, 8, 0, 0, 100, 10, 8, 100, 0, 0, 0, 1, 50, 0, 6, 1, 4, 8, 15, 0, 5, 4294927889, 2, 16, 32, 16, 32, 50, 0, 100, 10, 5, 98, 0, 1];
v[229] = ["Thunder Spear", 4, 7500, 6, 24, 4, 4294967091, 1, 108, 0, 1, 30, 24, 0, 120, 135, 90, 1, 10, 4294967091, 2, 5, 32, 5, 32, 200, 10, 100, 10, 90, 90, 0, 1, 0, 3, 0, 0, 0];
v[256] = ["Timed Explosion", 5, 8E3, 6, 25, 4, 4294919185, 1, 4, 0, 20, 40, 1, 40, 80, 90, 80, 0, 12, 4294919185, 1, 16, 16, 8, 8, 0, 100, 500, 10, 10, 98, 0, 1, 0, 1, 0, 0, 4, 1, 15, 25, 10, 1, 6, 1157588480, 1, 8, 32, 32, 32, 10, 10, 20, 5, 0, 98, 1, 0];
v[273] = ["Atomic Ray", 5, 8500, 6, 25, 4, 4294927889, 1, 3, 0, 10, 20, 1, 20, 80, 90, 90, 1, 18, 4294927889, 2, 12, 20, 16, 16, 0, 0, 500, 10, 0, 100, 0, 2, 0, 1, 80, 0, 0];
v[315] = ["Ice Spike", 5, 8500, 6, 25, 4, 4290493439, 1, 3, 0, 15, 25, 1, 50, 80, 90, 90, 1, 9, 4287138047, 1, 16, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 2, 40, 0, 7, 0, 5, 15, 3, 1, 9, 4287138047, 1, 8, 16, 8, 8, 0, 9, 10, 10, 0, 98, 0, 2];
v[331] = ["Inferno", 5, 9E3, 6, 25, 4, 4294910498, 1, 103, 0, 2, 6, 7, 5, 80, 90, 60, 1, 6, 2298439185, 2, 20, 20, 16, 16, 70, 0, 200, 10, 0, 100, 0, 0, 0, 1, 30, 0, 0];
v[348] = ["Electric Shock", 5, 9500, 6, 25, 4, 4294967142, 1, 9, 0, 1, 20, 30, 1, 80, 90, 30, 1, 10, 2298478438, 2, 16, 12, 16, 16, 60, 0, 30, 10, 0, 90, 0, 0, 0, 3, 0, 0, 0];
v[363] = ["Freeze Explosion", 6, 1E4, 6, 25, 4, 4291611903, 1, 9, 1, 5, 10, 6, 9, 80, 90, 90, 1, 4, 2295123199, 2, 16, 48, 48, 48, 0, 25, 30, 10, 0, 80, 0, 2, 0, 5, 10, 0, 0];
v[397] = ["Ice Orb", 6, 11E3, 6, 25, 4, 4287138047, 1, 3, 0, 0, 0, 1, 6, 120, 135, 60, 1, 2, 4287138047, 2, 16, 16, 16, 16, 0, 150, 150, 10, 0, 100, 0, 0, 0, 2, 30, 0, 2, 0, 10, 15, 50, 1, 9, 4287138047, 2, 16, 16, 8, 8, 0, 6, 50, 10, 0, 95, 0, 0];
v[413] = ["Lava", 6, 12E3, 6, 25, 4, 4294919168, 1, 4, 0, 2, 6, 1, 50, 120, 135, 80, 0, 12, 4294919168, 2, 16, 16, 8, 8, 0, 0, 100, 10, 8, 100, 0, 0, 0, 1, 50, 0, 9, 1, 6, 9, 30, 0, 5, 1157588497, 2, 16, 24, 16, 32, 50, 0, 100, 10, 1, 100, 0, 1];
v[432] = ["Thunder Orb", 6, 13E3, 6, 25, 4, 4294967091, 2, 3, 0, 0, 0, 1, 10, 120, 135, 60, 0, 2, 4294967142, 2, 16, 16, 16, 16, 0, 200, 200, 10, 0, 100, 0, 0, 0, 3, 0, 0, 2, 0, 1, 90, 25, 0, 15, 4294967142, 2, 16, 16, 8, 8, 0, 10, 50, 10, 0, 60, 0, 0];
v[454] = ["Spread Explosion", 7, 15E3, 6, 26, 4, 4294936576, 1, 4, 0, 20, 40, 10, 50, 80, 90, 80, 0, 12, 4294936610, 2, 16, 16, 8, 8, 15, 50, 200, 10, 5, 100, 0, 2, 0, 1, 0, 0, 1, 1, 30, 50, 1, 0, 21, 4294936610, 2, 48, 48, 32, 32, 0, 0, 10, 20, 0, 100, 0, 0];
v[474] = ["Ice Bolt", 7, 16E3, 6, 26, 4, 4290493439, 1, 5, 0, 25, 35, 3, 5, 80, 90, 90, 1, 9, 4287138047, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 2, 45, 0, 0];
v[482] = ["Hellfire", 7, 17E3, 6, 26, 4, 4294910498, 1, 103, 0, 2, 6, 30, 5, 80, 90, 40, 1, 6, 2298439185, 2, 16, 16, 16, 16, 40, 0, 80, 10, 0, 100, 0, 0, 0, 1, 50, 0, 0];
v[499] = ["Lightning", 7, 18E3, 6, 26, 4, 4294967142, 1, 11, 0, 1, 90, 30, 5, 80, 90, 80, 1, 20, 4294967142, 2, 16, 16, 16, 16, 60, 0, 150, 10, 0, 100, 0, 0, 0, 3, 0, 0, 0];
v[507] = ["Permafrost", 8, 19E3, 6, 26, 4, 4291611903, 1, 9, 1, 15, 25, 6, 9, 80, 90, 90, 1, 22, 1724697855, 2, 24, 48, 48, 48, 0, 25, 30, 10, 0, 70, 1, 0, 0, 5, 30, 0, 0];
v[515] = ["Ice Missile", 8, 2E4, 6, 26, 4, 4287138047, 1, 3, 0, 0, 0, 3, 30, 120, 135, 90, 1, 17, 4287138047, 2, 16, 16, 16, 16, 0, 100, 100, 10, 0, 100, 0, 0, 0, 2, 30, 0, 2, 0, 10, 15, 90, 1, 6, 4287138047, 2, 12, 12, 8, 8, 0, 4, 5, 20, 0, 90, 0, 0];
v[523] = ["Pyroclastic Flow", 8, 21E3, 6, 26, 4, 4294919168, 1, 4, 0, 2, 6, 1, 50, 120, 135, 90, 1, 12, 4294919168, 2, 16, 16, 8, 8, 0, 0, 200, 10, 5, 100, 0, 0, 0, 1, 50, 0, 2, 1, 9, 12, 50, 0, 5, 1157588497, 2, 16, 32, 16, 32, 0, 0, 150, 10, 5, 90, 0, 1];

/* Staves */

v[58] = ["Staff", 0, 100, 12, 11, 5, 4288217343, 1, 6, 0, 1, 2, 1, 0, 80, 90, 70, 0, 15, 4291598847, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[60] = ["Wooden Staff", 1, 250, 12, 11, 5, 4287120384, 1, 6, 0, 2, 3, 1, 0, 80, 90, 70, 0, 15, 4288243251, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[61] = ["Long Staff", 1, 500, 12, 11, 5, 4289374890, 1, 6, 0, 3, 4, 1, 0, 80, 90, 110, 0, 15, 4289374890, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[62] = ["Staff of Thunder", 1, 750, 12, 11, 5, 4294967142, 1, 6, 0, 1, 9, 1, 0, 80, 90, 70, 0, 15, 4294967142, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 3, 0, 0, 0];
v[63] = ["Staff of Ice", 1, 1E3, 12, 11, 5, 4290493439, 1, 6, 0, 4, 5, 1, 0, 80, 90, 70, 0, 15, 4290493439, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 2, 10, 0, 0];
v[115] = ["Battle Staff", 2, 1500, 12, 11, 5, 4294919236, 1, 6, 0, 10, 10, 1, 0, 80, 90, 30, 0, 15, 4294927974, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[126] = ["Staff of Fire", 2, 2E3, 12, 11, 5, 4294927889, 1, 6, 0, 2, 3, 1, 0, 80, 90, 70, 0, 15, 4294927889, 2, 24, 24, 24, 24, 0, 0, 100, 10, 0, 100, 0, 0, 0, 1, 30, 0, 0];
v[127] = ["Lightning Staff", 2, 2500, 12, 11, 5, 4294967142, 1, 5, 0, 1, 25, 1, 10, 80, 90, 70, 1, 10, 4294967142, 2, 16, 24, 16, 16, 10, 0, 100, 20, 0, 100, 0, 0, 0, 3, 0, 0, 0];
v[128] = ["Staff of Poison", 2, 3E3, 12, 11, 5, 4282711876, 1, 6, 0, 0, 1, 1, 0, 80, 90, 70, 0, 15, 4282711876, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 4, 20, 0, 0];
v[129] = ["Long Wood Staff", 3, 4E3, 12, 11, 5, 4288243251, 1, 6, 0, 10, 15, 1, 0, 80, 90, 130, 0, 15, 4288243251, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[135] = ["Staff of Freeze", 3, 4500, 12, 11, 5, 4291611903, 1, 6, 0, 5, 10, 1, 0, 80, 90, 70, 0, 15, 4291611903, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 5, 20, 0, 0];
v[141] = ["Staff of Light", 1, 5E3, 12, 11, 5, 4294967295, 1, 6, 0, 5, 5, 1, 0, 80, 90, 70, 0, 13, 2298478591, 2, 16, 16, 8, 8, 0, 100, 200, 40, 0, 100, 1, 0, 50, 3, 0, 0, 0];
v[157] = ["Staff of Flame", 3, 5500, 12, 34, 5, 4294927889, 1, 6, 0, 4, 6, 1, 0, 80, 90, 70, 0, 15, 4294927889, 2, 24, 24, 24, 24, 0, 0, 100, 10, 0, 100, 0, 0, 0, 1, 30, 0, 0];
v[182] = ["Combat Staff", 4, 6E3, 12, 34, 5, 4294919236, 1, 6, 0, 25, 25, 1, 0, 80, 90, 30, 0, 15, 4294919236, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[206] = ["Toxic Staff", 4, 6500, 12, 34, 5, 4284874956, 1, 6, 0, 1, 1, 1, 0, 80, 90, 70, 0, 15, 4284874956, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 4, 30, 0, 0];
v[218] = ["Long Iron Staff", 4, 7E3, 12, 34, 5, 4284900966, 1, 6, 0, 10, 15, 1, 0, 80, 90, 150, 0, 15, 4288256409, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[230] = ["Staff of Icicle", 4, 7500, 12, 34, 5, 4290493439, 1, 6, 0, 10, 15, 1, 0, 80, 90, 70, 0, 15, 4290493439, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 2, 15, 0, 0];
v[257] = ["Explosion Staff", 5, 8E3, 12, 34, 5, 4294936576, 1, 6, 1, 10, 15, 1, 0, 80, 90, 70, 0, 2, 2298447906, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 1, 0, 0, 0];
v[274] = ["High Light Staff", 3, 8500, 12, 34, 5, 4294967295, 1, 6, 0, 10, 15, 1, 0, 80, 90, 140, 0, 13, 2298478591, 2, 16, 16, 8, 8, 0, 100, 200, 40, 0, 100, 1, 0, 50, 3, 0, 0, 0];
v[316] = ["Warrior Staff", 5, 8500, 12, 34, 5, 4288217088, 1, 6, 0, 35, 35, 1, 0, 80, 90, 30, 0, 15, 4288217088, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[332] = ["Inferno Staff", 5, 9E3, 12, 45, 5, 4294927889, 1, 6, 0, 10, 15, 1, 0, 80, 90, 70, 1, 6, 4294927889, 2, 16, 16, 16, 16, 0, 0, 100, 10, 0, 96, 0, 0, 20, 1, 30, 0, 0];
v[349] = ["Electric Staff", 5, 9500, 12, 45, 5, 4294967142, 1, 6, 0, 1, 9, 3, 2, 80, 90, 70, 0, 14, 2298478438, 2, 16, 16, 16, 16, 15, 0, 30, 10, 0, 90, 0, 0, 0, 3, 0, 0, 0];
v[364] = ["Long Silver Staff", 6, 1E4, 12, 45, 5, 4294967295, 1, 6, 0, 10, 15, 1, 0, 80, 90, 170, 0, 15, 4294967295, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[398] = ["Poisonous Staff", 6, 11E3, 12, 45, 5, 4284874905, 1, 6, 0, 1, 2, 1, 0, 80, 90, 70, 0, 15, 4284874905, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 4, 40, 0, 0];
v[414] = ["Freeze Explosion Staff", 6, 12E3, 12, 45, 5, 4291611903, 1, 6, 1, 5, 5, 1, 0, 80, 90, 70, 0, 15, 4291611903, 2, 16, 16, 12, 12, 0, 0, 100, 40, 0, 100, 0, 0, 0, 5, 5, 0, 0];
v[433] = ["Mega Explosion", 6, 13E3, 12, 45, 5, 4294936576, 1, 6, 1, 10, 15, 1, 0, 80, 90, 70, 0, 2, 2298447906, 2, 32, 32, 32, 32, 0, 0, 100, 40, 0, 100, 0, 0, 0, 1, 0, 0, 0];
v[455] = ["Strike Rod", 7, 15E3, 12, 60, 5, 4294919236, 1, 6, 0, 55, 55, 1, 0, 80, 90, 30, 0, 21, 4294919236, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[475] = ["Inferno Rod", 7, 16E3, 12, 60, 5, 4294927889, 1, 6, 0, 20, 25, 1, 0, 80, 90, 70, 1, 22, 4294927889, 2, 12, 12, 16, 16, 0, 0, 150, 10, 0, 96, 1, 0, 20, 1, 30, 0, 0];
v[483] = ["Thunder Rod", 7, 17E3, 12, 60, 5, 4294967142, 1, 6, 0, 1, 30, 3, 0, 80, 90, 70, 0, 21, 2298478438, 2, 16, 16, 16, 16, 15, 0, 100, 10, 0, 100, 0, 0, 0, 3, 0, 0, 0];
v[500] = ["Long Gold Rod", 7, 18E3, 12, 60, 5, 4294956800, 1, 6, 0, 10, 15, 1, 0, 80, 90, 190, 0, 15, 4294956800, 2, 24, 24, 24, 24, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[508] = ["Poisonous Rod", 8, 19E3, 12, 60, 5, 4288217343, 1, 6, 0, 2, 2, 1, 0, 80, 90, 70, 0, 15, 4288217343, 1, 24, 24, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 4, 50, 0, 0];
v[516] = ["Freeze Explosion Rod", 8, 2E4, 12, 60, 5, 4291611903, 1, 6, 1, 5, 15, 1, 0, 80, 90, 70, 0, 21, 4291611903, 2, 16, 16, 16, 16, 0, 0, 100, 40, 0, 100, 0, 0, 0, 5, 10, 0, 0];
v[524] = ["Giga Explosion Rod", 8, 21E3, 12, 60, 5, 4294936576, 1, 6, 1, 10, 15, 1, 0, 80, 90, 70, 0, 2, 2298447906, 2, 48, 48, 48, 48, 0, 0, 100, 40, 0, 100, 0, 0, 0, 1, 0, 0, 0];

/* Guns */

v[76] = ["Gun", 0, 100, 14, 13, 6, 4288256409, 1, 3, 0, 2, 6, 1, 30, 20, 30, 60, 1, 17, 4288256409, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 0, 0];
v[77] = ["Handgun", 1, 250, 14, 13, 6, 4291611852, 1, 3, 0, 8, 12, 1, 30, 20, 30, 60, 1, 17, 4291611852, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 5, 0];
v[78] = ["SMG", 1, 500, 14, 27, 6, 4284901017, 1, 3, 0, 4, 8, 1, 30, 5, 10, 50, 1, 17, 4284901017, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 5, 0];
v[79] = ["Shotgun", 1, 750, 14, 28, 6, 4288243251, 1, 3, 0, 1, 20, 5, 30, 50, 60, 50, 0, 13, 4288243251, 1, 16, 16, 8, 8, 5, 0, 30, 10, 0, 100, 0, 1, 0, 0, 0, 15, 0];
v[80] = ["Rifle", 1, 1E3, 14, 29, 6, 4284914073, 1, 3, 0, 20, 40, 1, 50, 50, 60, 120, 1, 17, 4284914073, 1, 16, 32, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 0, 10, 0];
v[81] = ["Grenade", 2, 1500, 14, 30, 6, 4294927872, 1, 4, 0, 8, 12, 1, 40, 70, 80, 60, 1, 17, 4294927872, 1, 16, 16, 8, 8, 0, 0, 100, 10, 10, 100, 0, 0, 0, 1, 50, 25, 4, 1, 2, 6, 4, 0, 5, 4294927889, 2, 16, 32, 16, 32, 0, 0, 100, 10, 8, 98, 0, 1];
v[82] = ["Laser Gun", 2, 2E3, 14, 31, 6, 4288217088, 1, 3, 1, 8, 12, 1, 30, 20, 30, 50, 1, 18, 4288217088, 1, 8, 16, 8, 8, 0, 0, 200, 10, 0, 100, 1, 0, 0, 1, 100, 20, 0];
v[83] = ["Bazooka", 2, 2500, 14, 32, 6, 4278229248, 1, 3, 0, 40, 60, 1, 30, 80, 90, 60, 1, 17, 4278229248, 1, 32, 32, 16, 16, 0, 0, 50, 10, 5, 100, 0, 0, 0, 0, 0, 30, 3, 0, 20, 30, 6, 0, 6, 2291754547, 1, 24, 24, 12, 12, 10, 0, 50, 20, 0, 97, 1, 0];
v[120] = ["Homing Laser", 2, 3E3, 14, 33, 6, 4288269312, 1, 3, 0, 8, 12, 2, 30, 20, 30, 70, 1, 11, 4288269312, 1, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 50, 3, 0, 20, 0];
v[125] = ["Beretta", 3, 4E3, 14, 13, 6, 4291611852, 1, 3, 0, 24, 36, 1, 30, 20, 30, 60, 1, 17, 4291611852, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 10, 0];
v[136] = ["Uzi", 3, 4500, 14, 27, 6, 4281545574, 1, 3, 0, 12, 24, 1, 30, 5, 10, 50, 1, 17, 4281545574, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 15, 0];
v[142] = ["Remington", 3, 5E3, 14, 28, 6, 4282655266, 1, 3, 0, 1, 40, 7, 30, 50, 60, 50, 0, 13, 4282655266, 1, 16, 16, 8, 8, 7, 0, 30, 10, 0, 100, 0, 1, 0, 0, 0, 30, 0];
v[158] = ["Sniper Rifle", 3, 5500, 14, 29, 6, 4278203187, 1, 3, 0, 60, 80, 1, 50, 50, 60, 120, 1, 17, 4284914073, 1, 16, 32, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 0, 20, 0];
v[183] = ["Grenade Launcher", 4, 6E3, 14, 30, 6, 4291572480, 1, 4, 0, 12, 24, 1, 40, 70, 80, 60, 1, 17, 4291572480, 1, 16, 16, 8, 8, 0, 0, 100, 10, 10, 100, 0, 0, 0, 1, 50, 40, 4, 1, 6, 18, 4, 0, 5, 2298426129, 2, 16, 32, 16, 32, 0, 0, 100, 10, 8, 96, 0, 1];
v[207] = ["Laser Beam Gun", 4, 6500, 14, 31, 6, 4291559424, 1, 3, 1, 16, 24, 1, 25, 20, 30, 50, 1, 18, 4291559424, 1, 8, 16, 8, 8, 0, 0, 200, 10, 0, 100, 1, 0, 0, 1, 100, 35, 0];
v[219] = ["Cannon", 4, 7E3, 14, 32, 6, 4288256256, 1, 3, 0, 80, 120, 1, 30, 80, 90, 60, 1, 17, 4288256256, 1, 32, 32, 16, 16, 0, 0, 50, 10, 5, 100, 0, 0, 0, 0, 0, 50, 3, 0, 50, 70, 6, 1, 6, 2295109939, 1, 12, 48, 16, 16, 0, 5, 25, 20, 0, 98, 1, 0];
v[231] = ["Homing Laser Beam", 4, 7500, 14, 33, 6, 4291624755, 1, 3, 0, 8, 12, 5, 30, 20, 30, 70, 1, 11, 4291624755, 1, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 100, 3, 0, 35, 0];
v[258] = ["3-round Burst", 5, 8E3, 14, 13, 6, 4284900966, 1, 603, 0, 24, 36, 3, 30, 20, 30, 60, 1, 17, 4284900966, 1, 16, 16, 8, 8, 10, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 10, 0];
v[275] = ["Missile", 5, 8500, 14, 32, 6, 4294967295, 1, 4, 1, 300, 500, 1, 80, 160, 180, 80, 1, 17, 4294967295, 1, 16, 32, 16, 16, 0, 5, 100, 10, 10, 100, 0, 0, 0, 0, 0, 100, 2, 0, 0, 0, 50, 1, 6, 2288412262, 1, 16, 16, 16, 16, 10, 25, 25, 20, 0, 80, 0, 0];
v[317] = ["Mini Uzi", 5, 8500, 14, 27, 6, 4281545625, 1, 103, 0, 12, 24, 2, 30, 5, 10, 50, 1, 17, 4281545625, 1, 16, 16, 8, 8, 5, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 25, 0];
v[333] = ["Scattergun", 5, 9E3, 14, 28, 6, 4284883456, 1, 803, 0, 1, 80, 9, 30, 50, 60, 50, 0, 13, 4284883456, 1, 16, 16, 8, 8, 9, 0, 30, 10, 0, 100, 0, 2, 0, 0, 0, 40, 0];
v[350] = ["Hunting Rifle", 5, 9500, 14, 29, 6, 4284887859, 1, 3, 0, 140, 160, 1, 50, 50, 60, 120, 1, 17, 4284900966, 1, 16, 32, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 0, 30, 0];
v[365] = ["M9 Grenade", 6, 1E4, 14, 30, 6, 4294910481, 1, 4, 0, 18, 48, 1, 40, 70, 80, 60, 1, 17, 4294910481, 1, 16, 16, 8, 8, 0, 0, 100, 10, 10, 100, 0, 0, 0, 1, 50, 55, 4, 1, 6, 18, 9, 0, 5, 3439272465, 2, 16, 32, 16, 32, 0, 0, 100, 10, 15, 90, 0, 1];
v[399] = ["Power Laser", 6, 11E3, 14, 31, 6, 4291559424, 1, 3, 1, 24, 36, 1, 20, 20, 30, 50, 1, 18, 4291559424, 1, 8, 16, 8, 8, 0, 0, 200, 10, 0, 100, 1, 0, 0, 1, 100, 45, 0];
v[403] = ["Napalm Bomb", 6, 2E4, 14, 32, 6, 4294914833, 1, 4, 0, 0, 0, 1, 120, 160, 180, 80, 1, 17, 4294914833, 1, 32, 32, 8, 8, 0, 200, 200, 10, 5, 100, 0, 0, 0, 1, 50, 200, 8, 1, 8, 8, 30, 1, 6, 2298426129, 2, 32, 32, 24, 24, 10, 0, 150, 30, 0, 95, 0, 2];
v[415] = ["Wave Cannon", 6, 12E3, 14, 32, 6, 4284900864, 1, 3, 0, 120, 180, 1, 30, 80, 90, 60, 1, 17, 4284900864, 1, 32, 32, 16, 16, 0, 0, 50, 10, 5, 100, 0, 0, 0, 0, 0, 70, 9, 0, 100, 150, 6, 1, 11, 4284892194, 2, 12, 40, 20, 20, 25, 10, 50, 20, 0, 98, 1, 0];
v[434] = ["Piercing Laser", 6, 13E3, 14, 33, 6, 4294967091, 1, 3, 0, 12, 16, 7, 30, 20, 30, 70, 1, 11, 4294967091, 1, 8, 16, 8, 8, 0, 0, 200, 10, 0, 100, 1, 0, 150, 3, 0, 45, 0];
v[456] = ["Magnum", 7, 15E3, 14, 61, 6, 4291611852, 1, 3, 1, 80, 120, 1, 30, 20, 30, 60, 1, 17, 4291611852, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 15, 0];
v[476] = ["Micro Uzi", 7, 16E3, 14, 27, 6, 4280427110, 1, 103, 0, 16, 32, 3, 30, 5, 10, 50, 1, 17, 4280427110, 1, 16, 16, 8, 8, 5, 0, 50, 10, 0, 100, 0, 0, 0, 0, 0, 35, 0];
v[484] = ["Triple Shotgun", 7, 17E3, 14, 28, 6, 4287120418, 1, 803, 0, 1, 120, 15, 30, 50, 60, 50, 0, 13, 4287120418, 1, 16, 16, 8, 8, 11, 0, 30, 10, 0, 100, 0, 2, 0, 0, 0, 50, 0];
v[501] = ["Railgun", 7, 18E3, 14, 29, 6, 4282664004, 1, 3, 0, 300, 320, 1, 50, 50, 60, 150, 1, 17, 4282664004, 1, 16, 32, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 0, 40, 0];
v[509] = ["Napalm Gun", 8, 19E3, 14, 30, 6, 4294906112, 1, 4, 0, 26, 96, 1, 40, 70, 80, 60, 1, 17, 4294906112, 1, 16, 16, 8, 8, 0, 0, 100, 10, 10, 100, 0, 0, 0, 1, 50, 70, 4, 1, 15, 45, 9, 0, 5, 3439269896, 2, 16, 32, 16, 32, 0, 0, 100, 10, 8, 94, 0, 1];
v[517] = ["Slow Laser", 8, 2E4, 14, 31, 6, 4291559424, 1, 3, 1, 32, 48, 1, 10, 20, 30, 50, 1, 18, 4291559424, 1, 8, 12, 8, 8, 0, 0, 200, 10, 0, 100, 1, 0, 0, 1, 100, 55, 0];
v[525] = ["Rocket Launcher", 8, 21E3, 14, 32, 6, 4282663936, 1, 3, 0, 160, 240, 1, 30, 80, 90, 60, 1, 17, 4284900864, 1, 32, 32, 16, 16, 0, 0, 50, 10, 5, 100, 0, 0, 0, 0, 0, 80, 3, 0, 200, 300, 6, 1, 24, 4284892194, 2, 16, 64, 24, 24, 5, 5, 25, 20, 0, 90, 1, 0];

/* Whips */

v[188] = ["Whip", 0, 100, 15, 35, 7, 4294936576, 1, 0, 0, 1, 4, 0, 0, 15, 20, 40, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[189] = ["Stone Whip", 1, 250, 15, 35, 7, 4287120384, 1, 4, 0, 1, 4, 3, 80, 15, 20, 40, 0, 12, 4282664004, 1, 16, 16, 8, 8, 0, 20, 200, 10, 5, 100, 0, 0, 0, 0, 0, 10, 0, 0, 3, 5, 0];
v[190] = ["Fire Whip", 1, 500, 15, 35, 7, 4294919236, 1, 4, 0, 1, 4, 4, 50, 15, 20, 40, 0, 5, 2298439185, 2, 16, 32, 16, 32, 0, 0, 100, 10, 8, 95, 0, 1, 0, 1, 30, 40, 0, 0, 3, 5, 0];
v[191] = ["Iron Whip", 1, 750, 15, 35, 7, 4289374890, 1, 0, 0, 10, 20, 0, 0, 15, 20, 40, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[192] = ["Thunder Whip", 1, 1E3, 15, 35, 7, 4294967040, 1, 5, 0, 1, 4, 5, 5, 15, 20, 40, 1, 10, 4294967108, 2, 16, 16, 8, 8, 50, 0, 100, 10, 0, 100, 0, 0, 0, 3, 0, 90, 0, 0, 1, 33, 0];
v[193] = ["Ice Whip", 2, 1500, 15, 35, 7, 4291611903, 1, 103, 0, 2, 5, 5, 30, 15, 20, 40, 1, 4, 2295123199, 2, 16, 16, 8, 8, 0, 30, 200, 10, 5, 100, 0, 1, 0, 2, 20, 60, 0, 0, 15, 20, 0];
v[194] = ["Thorn Whip", 2, 2E3, 15, 35, 7, 4291603080, 1, 3, 0, 2, 6, 7, 20, 15, 20, 40, 1, 9, 4291603080, 1, 16, 16, 8, 8, 0, 5, 100, 10, 0, 100, 1, 0, 0, 0, 0, 80, 0, 0, 18, 22, 0];
v[195] = ["Poison Whip", 2, 2500, 15, 35, 7, 4287103231, 1, 9, 0, 2, 7, 5, 1, 15, 20, 40, 0, 6, 2290614527, 1, 16, 16, 8, 8, 50, 10, 200, 10, 0, 99, 0, 1, 0, 4, 100, 120, 0, 0, 1, 1, 0];
v[196] = ["Explosion Whip", 2, 3E3, 15, 35, 7, 4294927906, 1, 9, 1, 2, 8, 3, 5, 15, 20, 40, 1, 2, 2298430498, 2, 8, 40, 16, 16, 10, 10, 15, 3, 0, 80, 1, 0, 0, 1, 0, 150, 0, 0, 30, 40, 0];
v[197] = ["Stone Chain", 3, 4E3, 15, 36, 7, 4287120384, 1, 4, 0, 3, 9, 3, 80, 15, 20, 40, 0, 13, 4284900966, 1, 16, 16, 8, 8, 0, 20, 200, 10, 7, 100, 0, 0, 0, 0, 0, 40, 0, 0, 18, 30, 0];
v[198] = ["Fire Chain", 3, 4500, 15, 36, 7, 4294919236, 1, 9, 0, 3, 10, 4, 1, 15, 20, 40, 1, 5, 1728026897, 2, 12, 24, 24, 24, 0, 0, 100, 10, 0, 95, 1, 0, 0, 1, 30, 60, 0, 0, 6, 10, 0];
v[199] = ["Iron Chain", 3, 5E3, 15, 36, 7, 4289374890, 1, 0, 0, 20, 40, 0, 0, 15, 20, 40, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[200] = ["Thunder Chain", 3, 5500, 15, 36, 7, 4294967040, 1, 105, 0, 3, 12, 5, 5, 15, 20, 40, 1, 18, 2298478404, 2, 8, 32, 8, 8, 50, 0, 100, 10, 0, 100, 0, 0, 0, 3, 0, 130, 0, 0, 1, 66, 0];
v[201] = ["Ice Chain", 4, 6E3, 15, 36, 7, 4291611903, 1, 103, 0, 4, 13, 5, 30, 15, 20, 40, 1, 4, 2295123199, 2, 16, 16, 8, 8, 0, 20, 200, 10, 20, 100, 0, 1, 0, 2, 20, 90, 0, 0, 30, 40, 0];
v[208] = ["Thorn Chain", 4, 6500, 15, 36, 7, 4291603080, 1, 803, 0, 4, 14, 15, 20, 15, 20, 40, 1, 9, 4291603080, 1, 16, 16, 8, 8, 0, 5, 100, 10, 0, 100, 1, 0, 0, 0, 0, 120, 0, 0, 18, 22, 0];
v[220] = ["Poison Chain", 4, 7E3, 15, 36, 7, 4287103231, 1, 9, 0, 4, 15, 5, 1, 15, 20, 40, 0, 6, 2290614527, 1, 16, 16, 8, 8, 0, 20, 300, 10, 0, 99, 0, 1, 0, 4, 150, 180, 0, 0, 2, 2, 0];
v[232] = ["Explosion Chain", 4, 7500, 15, 36, 7, 4294927906, 1, 9, 1, 4, 16, 3, 5, 15, 20, 40, 1, 2, 2298430498, 2, 32, 8, 16, 16, 0, 19, 20, 3, 0, 80, 1, 0, 0, 1, 0, 220, 0, 0, 60, 80, 0];
v[259] = ["Stone Flail", 5, 8E3, 15, 37, 7, 4287120384, 1, 4, 0, 5, 17, 3, 80, 15, 20, 40, 0, 13, 4284900966, 1, 16, 16, 8, 8, 0, 20, 200, 10, 7, 100, 0, 0, 0, 0, 0, 60, 0, 0, 32, 52, 0];
v[276] = ["Freeze Whip", 5, 8500, 15, 35, 7, 4291611903, 1, 105, 0, 5, 18, 1, 5, 15, 20, 40, 1, 8, 2295123199, 2, 8, 8, 8, 8, 50, 0, 100, 10, 0, 100, 0, 0, 0, 5, 5, 60, 0, 0, 3, 5, 0];
v[318] = ["Fire Flail", 5, 8500, 15, 37, 7, 4294919236, 1, 9, 0, 5, 18, 4, 1, 15, 20, 40, 1, 5, 2298452241, 2, 8, 16, 20, 20, 0, 0, 300, 10, 0, 99, 1, 0, 0, 1, 30, 80, 0, 0, 8, 15, 0];
v[334] = ["Iron Flail", 5, 9E3, 15, 37, 7, 4289374890, 1, 0, 0, 40, 80, 0, 0, 15, 20, 40, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[351] = ["Thunder Flail", 5, 9500, 15, 37, 7, 4294967040, 1, 5, 0, 5, 20, 5, 5, 15, 20, 40, 1, 18, 4294967108, 2, 6, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 3, 0, 150, 0, 0, 1, 99, 0];
v[366] = ["Ice Flail", 6, 1E4, 15, 37, 7, 4291611903, 1, 109, 0, 6, 21, 5, 3, 15, 20, 40, 1, 4, 2295123199, 2, 16, 16, 8, 8, 0, 20, 200, 10, 20, 100, 0, 1, 0, 2, 20, 120, 0, 0, 45, 60, 0];
v[400] = ["Thorn Flail", 6, 11E3, 15, 37, 7, 4291603080, 1, 403, 0, 6, 22, 45, 20, 15, 20, 40, 1, 9, 4291603080, 1, 8, 8, 8, 8, 0, 5, 100, 10, 0, 100, 1, 0, 0, 0, 0, 160, 0, 0, 18, 22, 0];
v[416] = ["Poison Flail", 6, 12E3, 15, 37, 7, 4287103231, 1, 9, 0, 6, 23, 5, 1, 15, 20, 40, 0, 6, 2290614527, 1, 16, 16, 8, 8, 100, 20, 300, 20, 0, 99, 0, 1, 0, 4, 200, 240, 0, 0, 4, 5, 0];
v[435] = ["Explosion Flail", 6, 13E3, 15, 37, 7, 4294927906, 1, 9, 1, 6, 24, 3, 5, 15, 20, 40, 1, 19, 2298430498, 2, 16, 16, 16, 16, 0, 19, 20, 3, 0, 80, 1, 0, 0, 1, 0, 360, 0, 0, 120, 160, 0];
v[457] = ["Morning Star", 7, 15E3, 15, 38, 7, 4289374890, 1, 0, 0, 100, 200, 0, 0, 15, 20, 40, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[477] = ["Stone Star", 7, 16E3, 15, 38, 7, 4287120384, 1, 104, 0, 7, 26, 3, 80, 15, 20, 40, 0, 13, 4282664004, 1, 16, 16, 8, 8, 0, 20, 200, 10, 9, 100, 0, 0, 0, 0, 0, 70, 0, 0, 60, 110, 0];
v[485] = ["Fire Star", 7, 17E3, 15, 38, 7, 4294919236, 1, 9, 1, 7, 27, 4, 1, 15, 20, 40, 1, 22, 1728026897, 2, 16, 16, 20, 20, 0, 0, 100, 10, 0, 98, 1, 0, 0, 1, 30, 90, 0, 0, 8, 15, 0];
v[502] = ["Thunder Star", 7, 18E3, 15, 38, 7, 4294967040, 1, 5, 0, 7, 28, 5, 5, 15, 20, 40, 1, 20, 4294967108, 2, 16, 32, 8, 8, 50, 0, 100, 10, 0, 100, 0, 0, 0, 3, 0, 170, 0, 0, 1, 222, 0];
v[510] = ["Ice Star", 8, 19E3, 15, 38, 7, 4291611903, 1, 11, 0, 8, 29, 5, 3, 15, 20, 40, 1, 4, 2295123199, 2, 16, 16, 8, 8, 0, 20, 200, 10, 10, 100, 0, 1, 0, 2, 25, 120, 0, 0, 90, 120, 0];
v[518] = ["Thorn Star", 8, 2E4, 15, 38, 7, 4291603080, 1, 103, 0, 8, 30, 90, 20, 15, 20, 40, 1, 9, 4291603080, 1, 8, 8, 8, 8, 0, 0, 100, 10, 0, 100, 1, 0, 0, 0, 0, 160, 0, 0, 18, 22, 0];
v[526] = ["Poison Star", 8, 21E3, 15, 38, 7, 4287103231, 1, 9, 1, 8, 31, 5, 1, 15, 20, 40, 0, 6, 2290614527, 1, 24, 24, 8, 8, 0, 20, 300, 20, 0, 99, 0, 1, 0, 4, 250, 300, 0, 0, 9, 9, 0];

/* Rings */

v[289] = ["Ring", 0, 100, 18, 41, 8, 4291611852, 25, 0, 0, 2, 3, 0, 0, 20, 30, 60, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[290] = ["Fire Ring", 1, 250, 18, 41, 8, 4294919236, 25, 3, 0, 3, 4, 1, 1, 20, 30, 60, 0, 6, 2298439185, 2, 24, 24, 16, 16, 0, 0, 100, 10, 0, 98, 1, 0, 0, 1, 50, 30, 0, 0, 4, 6, 0];
v[291] = ["Thunder Ring", 1, 500, 18, 41, 8, 4294967108, 25, 11, 0, 3, 4, 7, 10, 20, 30, 60, 1, 10, 4294967040, 1, 16, 16, 16, 16, 0, 10, 100, 10, 0, 90, 0, 0, 0, 3, 0, 90, 0, 0, 1, 29, 0];
v[292] = ["Long Ring", 1, 750, 18, 41, 8, 4287120384, 25, 0, 0, 5, 10, 0, 0, 20, 30, 90, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[293] = ["Ice Ring", 1, 1E3, 18, 41, 8, 4289374975, 25, 9, 0, 3, 4, 3, 1, 20, 30, 60, 1, 4, 4289374975, 2, 16, 24, 16, 16, 0, 25, 50, 10, 0, 90, 0, 1, 0, 2, 20, 80, 0, 0, 15, 30, 0];
v[294] = ["Thorn Ring", 2, 1500, 18, 41, 8, 4291603080, 25, 9, 0, 4, 5, 16, 5, 20, 30, 60, 1, 9, 4291603080, 1, 16, 16, 16, 16, 0, 10, 100, 10, 0, 100, 0, 0, 0, 0, 0, 110, 0, 0, 10, 30, 0];
v[295] = ["Power Ring", 2, 2E3, 18, 41, 8, 4294967295, 25, 0, 0, 15, 30, 0, 0, 20, 30, 60, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[296] = ["Quick Ring", 2, 2500, 18, 41, 8, 4288282521, 25, 3, 1, 4, 5, 1, 1, 5, 10, 60, 0, 13, 4289396650, 1, 80, 12, 40, 8, 0, 15, 50, 10, 0, 98, 1, 0, 0, 0, 0, 50, 0, 0, 10, 10, 0];
v[297] = ["Charge Ring", 2, 3E3, 18, 41, 8, 4294936644, 25, 3, 0, 4, 5, 1, 1, 20, 30, 60, 0, 2, 4294919236, 1, 16, 16, 16, 16, 0, 200, 200, 25, 0, 100, 1, 0, 50, 1, 50, 200, 2, 0, 4, 6, 20, 0, 6, 4294927889, 2, 16, 16, 16, 16, 0, 0, 50, 10, 0, 86, 0, 0];
v[298] = ["Fire Circle", 3, 4E3, 18, 42, 8, 4294919236, 25, 3, 0, 5, 6, 1, 1, 20, 30, 60, 0, 6, 4294927889, 2, 16, 24, 16, 16, 0, 0, 100, 10, 0, 100, 1, 0, 0, 1, 50, 120, 2, 0, 6, 8, 20, 0, 6, 2298439185, 2, 16, 16, 16, 16, 0, 0, 50, 10, 0, 86, 0, 0];
v[299] = ["Thunder Circle", 3, 4500, 18, 42, 8, 4294967108, 25, 11, 0, 5, 6, 11, 15, 20, 30, 60, 1, 10, 4294967040, 1, 16, 16, 16, 16, 0, 10, 100, 10, 0, 90, 0, 2, 0, 3, 0, 120, 0, 0, 1, 59, 0];
v[300] = ["Long Circle", 3, 5E3, 18, 42, 8, 4287120384, 25, 0, 0, 10, 15, 0, 0, 20, 30, 120, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[301] = ["Ice Circle", 3, 5500, 18, 42, 8, 4289374975, 25, 11, 0, 5, 6, 1, 1, 20, 30, 60, 0, 7, 4289374975, 2, 16, 16, 16, 16, 0, 100, 100, 10, 0, 100, 1, 0, 0, 2, 20, 120, 2, 0, 5, 10, 30, 1, 4, 2292886271, 2, 8, 24, 8, 8, 0, 10, 50, 10, 0, 86, 0, 0];
v[302] = ["Thorn Circle", 4, 6E3, 18, 42, 8, 4291603080, 25, 9, 0, 6, 7, 16, 5, 20, 30, 60, 1, 9, 4291603080, 1, 16, 16, 16, 16, 0, 10, 100, 10, 0, 100, 0, 2, 0, 0, 0, 130, 0, 0, 20, 60, 0];
v[303] = ["Power Circle", 4, 6500, 18, 42, 8, 4294967295, 25, 0, 0, 30, 60, 0, 0, 20, 30, 60, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[304] = ["Quick Circle", 4, 7E3, 18, 42, 8, 4288282521, 25, 9, 1, 6, 7, 3, 1, 5, 10, 60, 0, 13, 4289396650, 1, 24, 24, 16, 16, 0, 15, 50, 10, 0, 95, 1, 0, 0, 0, 0, 50, 0, 0, 10, 10, 0];
v[305] = ["Charge Circle", 4, 7500, 18, 42, 8, 4294967108, 25, 3, 0, 6, 7, 1, 1, 20, 30, 60, 0, 6, 4284900966, 1, 32, 24, 16, 16, 0, 200, 200, 25, 0, 100, 1, 0, 50, 3, 50, 400, 2, 0, 1, 99, 20, 1, 10, 2298478336, 2, 16, 16, 16, 16, 0, 0, 100, 10, 80, 86, 0, 0];
v[306] = ["Fire Chakram", 5, 8E3, 18, 43, 8, 4294919236, 25, 3, 0, 7, 8, 1, 5, 20, 30, 60, 0, 6, 4294927889, 2, 16, 24, 16, 16, 0, 0, 180, 10, 2, 100, 0, 2, 0, 1, 50, 150, 2, 0, 12, 16, 20, 0, 6, 2298439185, 2, 16, 16, 16, 16, 0, 0, 50, 10, 0, 86, 0, 0];
v[307] = ["Chakram", 5, 8500, 18, 43, 8, 4282664004, 5, 0, 0, 1, 1, 0, 0, 20, 30, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[319] = ["Thunder Chakram", 5, 8500, 18, 43, 8, 4294967108, 25, 11, 0, 7, 8, 15, 20, 20, 30, 60, 1, 10, 2298478336, 1, 16, 16, 16, 16, 0, 10, 100, 10, 0, 95, 0, 2, 0, 3, 0, 150, 0, 0, 1, 149, 0];
v[335] = ["Long Chakram", 5, 9E3, 18, 43, 8, 4287120384, 25, 0, 0, 20, 30, 0, 0, 20, 30, 150, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[352] = ["Ice Chakram", 5, 9500, 18, 43, 8, 4289374975, 20, 9, 0, 7, 8, 3, 1, 20, 30, 60, 1, 4, 4289374975, 2, 16, 24, 16, 16, 0, 25, 50, 10, 0, 90, 0, 1, 0, 2, 20, 40, 0, 0, 30, 45, 0];
v[367] = ["Thorn Chakram", 6, 1E4, 18, 43, 8, 4291603080, 25, 9, 0, 8, 9, 16, 5, 20, 30, 60, 1, 9, 4291603080, 1, 16, 16, 16, 16, 0, 10, 150, 10, 0, 90, 0, 2, 0, 0, 0, 150, 0, 0, 30, 90, 0];
v[401] = ["Power Chakram", 6, 11E3, 18, 43, 8, 4294967295, 20, 0, 0, 60, 120, 0, 0, 20, 30, 60, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[417] = ["Quick Chakram", 6, 12E3, 18, 43, 8, 4288282521, 25, 9, 1, 8, 9, 3, 1, 5, 10, 60, 1, 9, 4289396650, 2, 16, 16, 16, 16, 0, 15, 50, 10, 0, 95, 1, 0, 0, 0, 0, 50, 0, 0, 33, 33, 0];
v[436] = ["Charge Chakram", 6, 13E3, 18, 43, 8, 4288269567, 25, 11, 0, 8, 9, 1, 1, 20, 30, 60, 0, 7, 4288269567, 2, 16, 16, 16, 16, 0, 200, 200, 25, 0, 100, 0, 2, 0, 2, 20, 600, 2, 0, 40, 60, 50, 1, 4, 2292886271, 2, 8, 16, 8, 8, 0, 5, 100, 10, 0, 104, 0, 0];
v[458] = ["Fire God", 7, 15E3, 18, 44, 8, 4294919236, 25, 109, 0, 9, 10, 20, 1, 20, 30, 60, 1, 22, 1728013841, 2, 16, 16, 16, 16, 0, 0, 100, 15, 0, 98, 1, 0, 0, 1, 50, 200, 0, 0, 36, 48, 0];
v[478] = ["Thunder God", 7, 16E3, 18, 44, 8, 4294967108, 25, 11, 0, 9, 10, 20, 20, 20, 30, 60, 1, 10, 2298478336, 1, 16, 16, 16, 16, 0, 5, 100, 10, 0, 98, 0, 2, 0, 3, 0, 180, 0, 0, 1, 399, 0];
v[486] = ["Long God", 7, 17E3, 18, 44, 8, 4287120384, 10, 0, 0, 40, 60, 0, 0, 20, 30, 180, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[503] = ["Ice God", 7, 18E3, 18, 44, 8, 4289374975, 25, 11, 0, 9, 10, 1, 1, 20, 30, 60, 0, 7, 4289374975, 2, 16, 16, 16, 16, 0, 100, 100, 10, 0, 100, 1, 0, 0, 2, 30, 120, 2, 0, 30, 45, 30, 1, 9, 2292886271, 2, 16, 16, 8, 8, 0, 10, 50, 10, 0, 86, 0, 0];
v[511] = ["Thorn God", 8, 19E3, 18, 44, 8, 4291603080, 25, 9, 0, 10, 11, 32, 5, 20, 30, 60, 1, 9, 4291603080, 1, 16, 16, 16, 16, 0, 10, 100, 10, 0, 100, 0, 2, 0, 0, 0, 160, 0, 0, 40, 120, 0];
v[519] = ["Power God", 8, 2E4, 18, 44, 8, 4294967295, 10, 0, 0, 180, 360, 0, 0, 20, 30, 60, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
v[527] = ["Quick God", 8, 21E3, 18, 44, 8, 4288282521, 10, 9, 1, 10, 11, 5, 1, 5, 10, 60, 1, 20, 4289396650, 2, 16, 16, 16, 16, 0, 15, 50, 10, 0, 95, 1, 0, 0, 0, 0, 50, 0, 0, 55, 55, 0];

/* Stones */

v[19] = ["White Stone", 1, 400, 7, 6, 9, 4294967295, jd, 50, 0, "LP +50", ""];
v[84] = ["White Stone", 2, 800, 7, 6, 9, 4294967295, jd, 100, 0, "LP +100", ""];
v[143] = ["White Stone", 3, 1200, 7, 6, 9, 4294967295, jd, 150, 0, "LP +150", ""];
v[209] = ["White Stone", 4, 1600, 7, 6, 9, 4294967295, jd, 200, 0, "LP +200", ""];
v[323] = ["White Stone", 5, 2E3, 7, 6, 9, 4294967295, jd, 300, 0, "LP +300", ""];
v[418] = ["White Stone", 6, 2400, 7, 6, 9, 4294967295, jd, 400, 0, "LP +400", ""];
v[491] = ["White Stone", 7, 2800, 7, 6, 9, 4294967295, jd, 500, 0, "LP +500", ""];
v[20] = ["Red Stone", 1, 400, 7, 6, 9, 4294914867, kd, 5, 0, "STR +5", ""];
v[85] = ["Red Stone", 2, 800, 7, 6, 9, 4294914867, kd, 10, 0, "STR +10", ""];
v[144] = ["Red Stone", 3, 1200, 7, 6, 9, 4294914867, kd, 15, 0, "STR +15", ""];
v[210] = ["Red Stone", 4, 1600, 7, 6, 9, 4294914867, kd, 20, 0, "STR +20", ""];
v[324] = ["Red Stone", 5, 2E3, 7, 6, 9, 4294914867, kd, 25, 0, "STR +25", ""];
v[419] = ["Red Stone", 6, 2400, 7, 6, 9, 4294914867, kd, 30, 0, "STR +30", ""];
v[492] = ["Red Stone", 7, 2800, 7, 6, 9, 4294914867, kd, 40, 0, "STR +40", ""];
v[21] = ["Green Stone", 1, 400, 7, 6, 9, 4281597747, ld, 5, 0, "DEX +5", ""];
v[86] = ["Green Stone", 2, 800, 7, 6, 9, 4281597747, ld, 10, 0, "DEX +10", ""];
v[145] = ["Green Stone", 3, 1200, 7, 6, 9, 4281597747, ld, 15, 0, "DEX +15", ""];
v[211] = ["Green Stone", 4, 1600, 7, 6, 9, 4281597747, ld, 20, 0, "DEX +20", ""];
v[325] = ["Green Stone", 5, 2E3, 7, 6, 9, 4281597747, ld, 25, 0, "DEX +25", ""];
v[420] = ["Green Stone", 6, 2400, 7, 6, 9, 4281597747, ld, 30, 0, "DEX +30", ""];
v[493] = ["Green Stone", 7, 2800, 7, 6, 9, 4281597747, ld, 40, 0, "DEX +40", ""];
v[22] = ["Blue Stone", 1, 400, 7, 6, 9, 4281545727, md, 5, 0, "MAG +5", ""];
v[87] = ["Blue Stone", 2, 800, 7, 6, 9, 4281545727, md, 10, 0, "MAG +10", ""];
v[146] = ["Blue Stone", 3, 1200, 7, 6, 9, 4281545727, md, 15, 0, "MAG +15", ""];
v[212] = ["Blue Stone", 4, 1600, 7, 6, 9, 4281545727, md, 20, 0, "MAG +20", ""];
v[326] = ["Blue Stone", 5, 2E3, 7, 6, 9, 4281545727, md, 25, 0, "MAG +25", ""];
v[421] = ["Blue Stone", 6, 2400, 7, 6, 9, 4281545727, md, 30, 0, "MAG +30", ""];
v[494] = ["Blue Stone", 7, 2800, 7, 6, 9, 4281545727, md, 40, 0, "MAG +40", ""];
v[23] = ["Black Stone", 1, 400, 7, 6, 9, 4284900966, nd, 2, 0, "STR DEX MAG +2", ""];
v[88] = ["Black Stone", 2, 800, 7, 6, 9, 4284900966, nd, 4, 0, "STR DEX MAG +4", ""];
v[147] = ["Black Stone", 3, 1200, 7, 6, 9, 4284900966, nd, 6, 0, "STR DEX MAG +6", ""];
v[213] = ["Black Stone", 4, 1600, 7, 6, 9, 4284900966, nd, 8, 0, "STR DEX MAG +8", ""];
v[327] = ["Black Stone", 5, 2E3, 7, 6, 9, 4284900966, nd, 10, 0, "STR DEX MAG +10", ""];
v[422] = ["Black Stone", 6, 2400, 7, 6, 9, 4284900966, nd, 15, 0, "STR DEX MAG +15", ""];
v[495] = ["Black Stone", 7, 2800, 7, 6, 9, 4284900966, nd, 20, 0, "STR DEX MAG +20", ""];

/* Crystals */

v[24] = ["Red Crystal", 1, 1200, 8, 7, 9, 4294936712, od, 1, 3, "AT +(1-3)", ""];
v[89] = ["Red Crystal", 2, 2400, 8, 7, 9, 4294936712, od, 2, 6, "AT +(2-6)", ""];
v[148] = ["Red Crystal", 3, 3600, 8, 7, 9, 4294936712, od, 3, 9, "AT +(3-9)", ""];
v[221] = ["Red Crystal", 4, 4800, 8, 7, 9, 4294936712, od, 4, 12, "AT +(4-12)", ""];
v[336] = ["Red Crystal", 5, 6E3, 8, 7, 9, 4294936712, od, 5, 15, "AT +(5-15)", ""];
v[424] = ["Red Crystal", 6, 7200, 8, 7, 9, 4294936712, od, 6, 18, "AT +(6-18)", ""];
v[528] = ["Red Crystal", 7, 8400, 8, 7, 9, 4294936712, od, 7, 21, "AT +(7-21)", ""];
v[25] = ["Yellow Crystal", 1, 1200, 8, 7, 9, 4294967176, pd, 20, 0, "AT +20%", ""];
v[90] = ["Yellow Crystal", 2, 2400, 8, 7, 9, 4294967176, pd, 30, 0, "AT +30%", ""];
v[149] = ["Yellow Crystal", 3, 3600, 8, 7, 9, 4294967176, pd, 40, 0, "AT +40%", ""];
v[222] = ["Yellow Crystal", 4, 4800, 8, 7, 9, 4294967176, pd, 50, 0, "AT +50%", ""];
v[337] = ["Yellow Crystal", 5, 6E3, 8, 7, 9, 4294967176, pd, 60, 0, "AT +60%", ""];
v[425] = ["Yellow Crystal", 6, 7200, 8, 7, 9, 4294967176, pd, 70, 0, "AT +70%", ""];
v[529] = ["Yellow Crystal", 7, 8400, 8, 7, 9, 4294967176, pd, 80, 0, "AT +80%", ""];
v[26] = ["Silver Crystal", 1, 1200, 8, 7, 9, 4291611852, qd, 1, 0, "Defense +1", ""];
v[91] = ["Silver Crystal", 2, 2400, 8, 7, 9, 4291611852, qd, 3, 0, "Defense +3", ""];
v[150] = ["Silver Crystal", 3, 3600, 8, 7, 9, 4291611852, qd, 6, 0, "Defense +6", ""];
v[223] = ["Silver Crystal", 4, 4800, 8, 7, 9, 4291611852, qd, 9, 0, "Defense +9", ""];
v[338] = ["Silver Crystal", 5, 6E3, 8, 7, 9, 4291611852, qd, 12, 0, "Defense +12", ""];
v[426] = ["Silver Crystal", 6, 7200, 8, 7, 9, 4291611852, qd, 15, 0, "Defense +15", ""];
v[530] = ["Silver Crystal", 7, 8400, 8, 7, 9, 4291611852, qd, 18, 0, "Defense +18", ""];
v[27] = ["Purple Crystal", 1, 1200, 8, 7, 9, 4291598847, rd, 10, 0, "Magic Defense +10%", ""];
v[92] = ["Purple Crystal", 2, 2400, 8, 7, 9, 4291598847, rd, 20, 0, "Magic Defense +20%", ""];
v[151] = ["Purple Crystal", 3, 3600, 8, 7, 9, 4291598847, rd, 30, 0, "Magic Defense +30%", ""];
v[224] = ["Purple Crystal", 4, 4800, 8, 7, 9, 4291598847, rd, 40, 0, "Magic Defense +40%", ""];
v[339] = ["Purple Crystal", 5, 6E3, 8, 7, 9, 4291598847, rd, 50, 0, "Magic Defense +50%", ""];
v[427] = ["Purple Crystal", 6, 7200, 8, 7, 9, 4291598847, rd, 60, 0, "Magic Defense +60%", ""];
v[531] = ["Purple Crystal", 7, 8400, 8, 7, 9, 4291598847, rd, 70, 0, "Magic Defense +70%", ""];
v[28] = ["Black Crystal", 1, 1200, 8, 7, 9, 4284900966, sd, 10, 0, "+10% Block Rate", ""];
v[93] = ["Black Crystal", 2, 2400, 8, 7, 9, 4284900966, sd, 20, 0, "+20% Block Rate", ""];
v[152] = ["Black Crystal", 3, 3600, 8, 7, 9, 4284900966, sd, 30, 0, "+30% Block Rate", ""];
v[225] = ["Black Crystal", 4, 4800, 8, 7, 9, 4284900966, sd, 40, 0, "+40% Block Rate", ""];
v[340] = ["Black Crystal", 5, 6E3, 8, 7, 9, 4284900966, sd, 50, 0, "+50% Block Rate", ""];
v[428] = ["Black Crystal", 6, 7200, 8, 7, 9, 4284900966, sd, 60, 0, "+60% Block Rate", ""];
v[532] = ["Black Crystal", 7, 8400, 8, 7, 9, 4284900966, sd, 70, 0, "+70% Block Rate", ""];

/* Cards */

v[29] = ["Vampire's Card", 1, 4E3, 10, 9, 9, 4288217088, td, 3, 0, "3% LP Recovery", "per Hit"];
v[94] = ["Vampire's Card", 3, 8E3, 10, 9, 9, 4288217088, td, 4, 0, "4% LP Recovery", "per Hit"];
v[159] = ["Vampire's Card", 4, 12E3, 10, 9, 9, 4288217088, td, 5, 0, "5% LP Recovery", "per Hit"];
v[30] = ["Onigiri's Card", 1, 8E3, 10, 9, 9, 4294967295, ud, 5, 0, "5% Chance of", "Onigiri Drop per Hit"];
v[95] = ["Gold Rush Card", 1, 16E3, 10, 9, 9, 4294967040, vd, 5, 0, "5% Chance of", "Gold Drop per Hit"];
v[160] = ["Zombie's Card", 4, 24E3, 10, 9, 9, 4281532518, Nd, 50, 100, "LP +50% ", "+100% Fire Damage"];
v[39] = ["Quick's Card", 1, 4E3, 10, 46, 9, 4287124736, Ed, 10, 0, "-10% AGI Limit", ""];
v[104] = ["Quick's Card", 2, 8E3, 10, 46, 9, 4287124736, Ed, 20, 0, "-20% AGI Limit", ""];
v[169] = ["Quick's Card", 3, 12E3, 10, 46, 9, 4287124736, Ed, 30, 0, "-30% AGI Limit", ""];
v[237] = ["Quick's Card", 4, 16E3, 10, 46, 9, 4287124736, Ed, 40, 0, "-40% AGI Limit", ""];
v[353] = ["Quick's Card", 5, 2E4, 10, 46, 9, 4287124736, Ed, 50, 0, "-50% AGI Limit", ""];
v[542] = ["Quick's Card", 7, 28E3, 10, 46, 9, 4287124736, Ed, 60, 0, "-60% AGI Limit", ""];
v[40] = ["Long Sword's Card", 1, 4E3, 10, 47, 9, 4281545523, Fd, 5, 0, "+5 Sword Length", ""];
v[105] = ["Long Sword's Card", 2, 8E3, 10, 47, 9, 4281545523, Fd, 8, 0, "+8 Sword Length", ""];
v[170] = ["Long Sword's Card", 3, 12E3, 10, 47, 9, 4281545523, Fd, 10, 0, "+10 Sword Length", ""];
v[242] = ["Long Sword's Card", 4, 16E3, 10, 47, 9, 4281545523, Fd, 12, 0, "+12 Sword Length", ""];
v[354] = ["Long Sword's Card", 5, 2E4, 10, 47, 9, 4281545523, Fd, 15, 0, "+15 Sword Length", ""];
v[465] = ["Long Sword's Card", 6, 24E3, 10, 47, 9, 4281545523, Fd, 20, 0, "+20 Sword Length", ""];
v[543] = ["Long Sword's Card", 7, 28E3, 10, 47, 9, 4281545523, Fd, 25, 0, "+25 Sword Length", ""];
v[41] = ["Catapult's Card", 1, 4E3, 10, 48, 9, 4284887808, Gd, 20, 0, "+20 Range", ""];
v[106] = ["Catapult's Card", 2, 8E3, 10, 48, 9, 4284887808, Gd, 40, 0, "+40 Range", ""];
v[171] = ["Catapult's Card", 3, 12E3, 10, 48, 9, 4284887808, Gd, 60, 0, "+60 Range", ""];
v[240] = ["Catapult's Card", 4, 16E3, 10, 48, 9, 4284887808, Gd, 80, 0, "+80 Range", ""];
v[355] = ["Catapult's Card", 5, 2E4, 10, 48, 9, 4284887808, Gd, 100, 0, "+100 Range", ""];
v[466] = ["Catapult's Card", 6, 24E3, 10, 48, 9, 4284887808, Gd, 120, 0, "+120 Range", ""];
v[544] = ["Catapult's Card", 7, 28E3, 10, 48, 9, 4284887808, Gd, 150, 0, "+150 Range", ""];
v[42] = ["Pierce's Card", 1, 4E3, 10, 49, 9, 4291611903, Hd, 25, 0, "25% Chance of", "Penetration"];
v[107] = ["Pierce's Card", 2, 8E3, 10, 49, 9, 4291611903, Hd, 50, 0, "50% Chance of", "Penetration"];
v[172] = ["Pierce's Card", 3, 12E3, 10, 49, 9, 4291611903, Hd, 75, 0, "75% Chance of", "Penetration"];
v[268] = ["Pierce's Card", 4, 16E3, 10, 49, 9, 4291611903, Hd, 100, 0, "100% Chance of", "Penetration"];
v[43] = ["Guide's Card", 1, 4E3, 10, 50, 9, 4288282521, Id, 10, 0, "+10 Homing Range", ""];
v[108] = ["Guide's Card", 2, 8E3, 10, 50, 9, 4288282521, Id, 20, 0, "+20 Homing Range", ""];
v[173] = ["Guide's Card", 3, 12E3, 10, 50, 9, 4288282521, Id, 30, 0, "+30 Homing Range", ""];
v[269] = ["Guide's Card", 4, 16E3, 10, 50, 9, 4288282521, Id, 40, 0, "+40 Homing Range", ""];
v[356] = ["Guide's Card", 5, 2E4, 10, 50, 9, 4288282521, Id, 50, 0, "+50 Homing Range", ""];
v[467] = ["Guide's Card", 6, 24E3, 10, 50, 9, 4288282521, Id, 60, 0, "+60 Homing Range", ""];
v[545] = ["Guide's Card", 7, 28E3, 10, 50, 9, 4288282521, Id, 70, 0, "+70 Homing Rage", ""];
v[44] = ["Bullet's Card", 1, 4E3, 10, 51, 9, 4281545523, Jd, 1, 0, "+1 Projectile", ""];
v[109] = ["Bullet's Card", 2, 8E3, 10, 51, 9, 4281545523, Jd, 2, 0, "+2 Projectiles", ""];
v[174] = ["Bullet's Card", 3, 12E3, 10, 51, 9, 4281545523, Jd, 0, 75, "+75% Projectiles", ""];
v[238] = ["Bullet's Card", 4, 16E3, 10, 51, 9, 4281545523, Jd, 0, 100, "+100% Projectiles", ""];
v[357] = ["Bullet's Card", 5, 2E4, 10, 51, 9, 4281545523, Jd, 6, 0, "+6 Projectiles", ""];
v[468] = ["Bullet's Card", 6, 24E3, 10, 51, 9, 4281545523, Jd, 0, 125, "+125% Projectiles", ""];
v[546] = ["Bullet's Card", 7, 28E3, 10, 51, 9, 4281545523, Jd, 0, 150, "+150% Projectiles", ""];
v[45] = ["Explosion's Card", 1, 4E3, 10, 52, 9, 4294940928, Kd, 25, 0, "25% Chance of", "Explosion Damage"];
v[110] = ["Explosion's Card", 2, 8E3, 10, 52, 9, 4294940928, Kd, 50, 0, "50% Chance of", "Explosion Damage"];
v[175] = ["Explosion's Card", 3, 12E3, 10, 52, 9, 4294940928, Kd, 75, 0, "75% Chance of", "Explosion Damage"];
v[249] = ["Explosion's Card", 4, 16E3, 10, 52, 9, 4294940928, Kd, 100, 0, "100% Chance of", "Explosion Damage"];
v[47] = ["Critical's Card", 1, 4E3, 10, 53, 9, 4294967142, Md, 25, 100, "25% Chance of", "AT +100%"];
v[111] = ["Critical's Card", 2, 8E3, 10, 53, 9, 4294967142, Md, 25, 150, "25% Chance of", "AT +150%"];
v[176] = ["Critical's Card", 3, 12E3, 10, 53, 9, 4294967142, Md, 25, 200, "25% Chance of", "AT +200%"];
v[239] = ["Critical's Card", 4, 16E3, 10, 53, 9, 4294967142, Md, 25, 300, "25% Chance of", "AT +300%"];
v[358] = ["Critical's Card", 5, 2E4, 10, 53, 9, 4294967142, Md, 25, 400, "25% Chance of", "AT +400%"];
v[469] = ["Critical's Card", 6, 24E3, 10, 53, 9, 4294967142, Md, 20, 600, "20% Chance of", "AT +600%"];
v[547] = ["Critical's Card", 7, 28E3, 10, 53, 9, 4294967142, Md, 15, 900, "15% Chance of", "AT +900%"];
v[46] = ["Berserk Card", 1, 4E3, 10, 54, 9, 4291559424, Ld, 50, 50, "AT +50%", "DF -50%"];
v[130] = ["Berserk Card", 2, 8E3, 10, 54, 9, 4291559424, Ld, 100, 100, "AT +100%", "DF -100%"];
v[177] = ["Berserk Card", 3, 12E3, 10, 54, 9, 4291559424, Ld, 150, 150, "AT +150%", "DF -150%"];
v[241] = ["Berserk Card", 4, 16E3, 10, 54, 9, 4291559424, Ld, 200, 200, "AT +200%", "DF -200%"];
v[359] = ["Berserk Card", 5, 2E4, 10, 54, 9, 4291559424, Ld, 250, 250, "AT +250%", "DF -250%"];
v[470] = ["Berserk Card", 6, 24E3, 10, 54, 9, 4291559424, Ld, 300, 200, "AT +300%", "DF -200%"];
v[548] = ["Berserk Card", 7, 28E3, 10, 54, 9, 4291559424, Ld, 350, 200, "AT +350%", "DF -200%"];
v[341] = ["Big Card", 1, 4E3, 10, 55, 9, 4293848814, Wd, 50, 0, "+50% Melee Range", ""];
v[342] = ["Big Card", 2, 8E3, 10, 55, 9, 4293848814, Wd, 100, 0, "+100% Melee Range", ""];
v[343] = ["Big Card", 3, 12E3, 10, 55, 9, 4293848814, Wd, 150, 0, "+150% Melee Range", ""];
v[344] = ["Big Card", 4, 16E3, 10, 55, 9, 4293848814, Wd, 200, 0, "+200% Melee Range", ""];
v[368] = ["Big Card", 5, 2E4, 10, 55, 9, 4293848814, Wd, 300, 0, "+300% Melee Range", ""];
v[423] = ["Katana's Card", 6, 24E3, 10, 58, 9, 4281545523, Zd, 40, 10, "AT +40%", "+10 Sword Length"];
v[541] = ["Katana's Card", 7, 28E3, 10, 58, 9, 4281545523, Zd, 50, 10, "AT +50%", "+10 Sword Length"];
v[389] = ["Knockback's Card", 1, 4E3, 10, 56, 9, 4288282572, Xd, 25, 20, "25% Chance of", "Knockback 20"];
v[390] = ["Knockback's Card", 2, 8E3, 10, 56, 9, 4288282572, Xd, 50, 20, "50% Chance of", "Knockback 20"];
v[391] = ["Knockback's Card", 3, 12E3, 10, 56, 9, 4288282572, Xd, 50, 30, "50% Chance of", "Knockback 30"];
v[392] = ["Knockback's Card", 4, 16E3, 10, 56, 9, 4288282572, Xd, 100, 30, "100% Chance of", "Knockback 30"];
v[393] = ["Knockback's Card", 5, 2E4, 10, 56, 9, 4288282572, Xd, 30, 90, "30% Chance of", "Knockback 90"];
v[406] = ["Reflection Card", 1, 4E3, 10, 57, 9, 4294967244, Yd, 25, 0, "25% Chance of", "Reflection"];
v[407] = ["Reflection Card", 2, 8E3, 10, 57, 9, 4294967244, Yd, 50, 0, "50% Chance of", "Reflection"];
v[408] = ["Reflection Card", 3, 12E3, 10, 57, 9, 4294967244, Yd, 75, 0, "75% Chance of", "Reflection"];
v[409] = ["Reflection Card", 4, 16E3, 10, 57, 9, 4294967244, Yd, 100, 0, "100% Chance of", "Reflection"];
v[459] = ["Ring's Card", 1, 4E3, 10, 62, 9, 4294967091, ae, 1, 0, "Ring +1", ""];
v[460] = ["Ring's Card", 2, 8E3, 10, 62, 9, 4294967091, ae, 1, 50, "Ring +1", "LP +50"];
v[461] = ["Ring's Card", 3, 12E3, 10, 62, 9, 4294967091, ae, 1, 100, "Ring +1", "LP +100"];
v[462] = ["Ring's Card", 4, 16E3, 10, 62, 9, 4294967091, ae, 1, 150, "Ring +1", "LP +150"];
v[463] = ["Ring's Card", 5, 2E4, 10, 62, 9, 4294967091, ae, 1, 200, "Ring +1", "LP +200"];
v[464] = ["Ring's Card", 6, 24E3, 10, 62, 9, 4294967091, ae, 1, 300, "Ring +1", "LP +300"];
v[441] = ["Heal's Card", 1, 48E3, 10, 59, 9, 4294967295, $d, 1, 0, "Attack Becomes", "Healing +1"];
v[442] = ["Heal's Card", 2, 48E3, 10, 59, 9, 4294967295, $d, 2, 0, "Attack Becomes", "Healing +2"];
v[50] = ["Rubber's Card", 1, 4E3, 10, 9, 9, 4294967295, Nd, 30, 0, "+10 Extend Arm", ""];

/* Jewels */

v[31] = ["Ruby", 1, 2E3, 9, 8, 9, 4294901760, wd, 1, 2, "+1-2 Fire", "Damage"];
v[96] = ["Ruby", 2, 4E3, 9, 8, 9, 4294901760, wd, 3, 4, "+3-4 Fire", "Damage"];
v[161] = ["Ruby", 3, 6E3, 9, 8, 9, 4294901760, wd, 5, 6, "+5-6 Fire", "Damage"];
v[260] = ["Ruby", 4, 8E3, 9, 8, 9, 4294901760, wd, 6, 9, "+6-9 Fire", "Damage"];
v[369] = ["Ruby", 5, 1E4, 9, 8, 9, 4294901760, wd, 8, 12, "+8-12 Fire", "Damage"];
v[443] = ["Ruby", 6, 12E3, 9, 8, 9, 4294901760, wd, 10, 15, "+10-15 Fire", "Damage"];
v[533] = ["Ruby", 7, 14E3, 9, 8, 9, 4294901760, wd, 15, 20, "+15-20 Fire", "Damage"];
v[32] = ["Garnet", 1, 2E3, 9, 8, 9, 4294914867, xd, 20, 0, "+0.4s Fire Length", ""];
v[97] = ["Garnet", 2, 4E3, 9, 8, 9, 4294914867, xd, 30, 0, "+0.6s Fire Length", ""];
v[162] = ["Garnet", 3, 6E3, 9, 8, 9, 4294914867, xd, 40, 0, "+0.8s Fire Length", ""];
v[261] = ["Garnet", 4, 8E3, 9, 8, 9, 4294914867, xd, 55, 0, "+1.1s Fire Length", ""];
v[370] = ["Garnet", 5, 1E4, 9, 8, 9, 4294914867, xd, 70, 0, "+1.4s Fire Length", ""];
v[444] = ["Garnet", 6, 12E3, 9, 8, 9, 4294914867, xd, 85, 0, "+1.7s Fire Length", ""];
v[534] = ["Garnet", 7, 14E3, 9, 8, 9, 4294914867, xd, 100, 0, "+2.0s Fire Length", ""];
v[33] = ["Sapphire", 1, 2E3, 9, 8, 9, 4284914175, yd, 3, 5, "+3-5 Ice", "Damage"];
v[98] = ["Sapphire", 2, 4E3, 9, 8, 9, 4284914175, yd, 6, 10, "+6-10 Ice", "Damage"];
v[163] = ["Sapphire", 3, 6E3, 9, 8, 9, 4284914175, yd, 9, 15, "+9-15 Ice", "Damage"];
v[262] = ["Sapphire", 4, 8E3, 9, 8, 9, 4284914175, yd, 12, 20, "+12-20 Ice", "Damage"];
v[371] = ["Sapphire", 5, 1E4, 9, 8, 9, 4284914175, yd, 15, 25, "+15-25 Ice", "Damage"];
v[446] = ["Sapphire", 6, 12E3, 9, 8, 9, 4284914175, yd, 18, 30, "+18-30 Ice", "Damage"];
v[535] = ["Sapphire", 7, 14E3, 9, 8, 9, 4284914175, yd, 21, 35, "+21-35 Ice", "Damage"];
v[34] = ["Aquamarine", 1, 2E3, 9, 8, 9, 4284927231, zd, 5, 0, "+5% Slow Effect", ""];
v[99] = ["Aquamarine", 2, 4E3, 9, 8, 9, 4284927231, zd, 10, 0, "+10% Slow Effect", ""];
v[164] = ["Aquamarine", 3, 6E3, 9, 8, 9, 4284927231, zd, 15, 0, "+15% Slow Effect", ""];
v[263] = ["Aquamarine", 4, 8E3, 9, 8, 9, 4284927231, zd, 20, 0, "+20% Slow Effect", ""];
v[372] = ["Aquamarine", 5, 1E4, 9, 8, 9, 4284927231, zd, 25, 0, "+25% Slow Effect", ""];
v[447] = ["Aquamarine", 6, 12E3, 9, 8, 9, 4284927231, zd, 30, 0, "+30% Slow Effect", ""];
v[536] = ["Aquamarine", 7, 14E3, 9, 8, 9, 4284927231, zd, 35, 0, "+35% Slow Effect", ""];
v[35] = ["Topaz", 1, 2E3, 9, 8, 9, 4294954035, Ad, 0, 4, "+0-4 Thunder", "Damage"];
v[100] = ["Topaz", 2, 4E3, 9, 8, 9, 4294954035, Ad, 0, 9, "+0-9 Thunder", "Damage"];
v[165] = ["Topaz", 3, 6E3, 9, 8, 9, 4294954035, Ad, 0, 15, "+0-15 Thunder", "Damage"];
v[264] = ["Topaz", 4, 8E3, 9, 8, 9, 4294954035, Ad, 0, 22, "+0-22 Thunder", "Damage"];
v[373] = ["Topaz", 5, 1E4, 9, 8, 9, 4294954035, Ad, 0, 30, "+0-30 Thunder", "Damage"];
v[448] = ["Topaz", 6, 12E3, 9, 8, 9, 4294954035, Ad, 0, 39, "+0-39 Thunder", "Damage"];
v[537] = ["Topaz", 7, 14E3, 9, 8, 9, 4294954035, Ad, 0, 49, "+0-49 Thunder", "Damage"];
v[36] = ["Emerald", 1, 2E3, 9, 8, 9, 4281597747, Bd, 0, 1, "+0-1 Poison", "Damage"];
v[101] = ["Emerald", 2, 4E3, 9, 8, 9, 4281597747, Bd, 1, 1, "+1-1 Poison", "Damage"];
v[166] = ["Emerald", 3, 6E3, 9, 8, 9, 4281597747, Bd, 1, 2, "+1-2 Poison", "Damage"];
v[265] = ["Emerald", 4, 8E3, 9, 8, 9, 4281597747, Bd, 2, 2, "+2-2 Poison", "Damage"];
v[374] = ["Emerald", 5, 1E4, 9, 8, 9, 4281597747, Bd, 2, 3, "+2-3 Poison", "Damage"];
v[449] = ["Emerald", 6, 12E3, 9, 8, 9, 4281597747, Bd, 3, 3, "+3-3 Poison", "Damage"];
v[538] = ["Emerald", 7, 14E3, 9, 8, 9, 4281597747, Bd, 3, 4, "+3-4 Poison", "Damage"];
v[37] = ["Peridot", 1, 2E3, 9, 8, 9, 4288282419, Cd, 50, 0, "+1s Poison Length", ""];
v[102] = ["Peridot", 2, 4E3, 9, 8, 9, 4288282419, Cd, 100, 0, "+2s Poison Length", ""];
v[167] = ["Peridot", 3, 6E3, 9, 8, 9, 4288282419, Cd, 150, 0, "+3s Poison Length", ""];
v[266] = ["Peridot", 4, 8E3, 9, 8, 9, 4288282419, Cd, 200, 0, "+4s Poison Length", ""];
v[375] = ["Peridot", 5, 1E4, 9, 8, 9, 4288282419, Cd, 250, 0, "+5s Poison Length", ""];
v[450] = ["Peridot", 6, 12E3, 9, 8, 9, 4288282419, Cd, 300, 0, "+6s Poison Length", ""];
v[539] = ["Peridot", 7, 14E3, 9, 8, 9, 4288282419, Cd, 350, 0, "+7s Poison Length", ""];
v[38] = ["Diamond", 1, 2E3, 9, 8, 9, 4294967295, Dd, 5, 0, "+0.1s Freeze Length", ""];
v[103] = ["Diamond", 2, 4E3, 9, 8, 9, 4294967295, Dd, 10, 0, "+0.2s Freeze Length", ""];
v[168] = ["Diamond", 3, 6E3, 9, 8, 9, 4294967295, Dd, 15, 0, "+0.3s Freeze Length", ""];
v[267] = ["Diamond", 4, 8E3, 9, 8, 9, 4294967295, Dd, 20, 0, "+0.4s Freeze Length", ""];
v[376] = ["Diamond", 5, 1E4, 9, 8, 9, 4294967295, Dd, 25, 0, "+0.5s Freeze Length", ""];
v[445] = ["Diamond", 6, 12E3, 9, 8, 9, 4294967295, Dd, 30, 0, "+0.6s Freeze Length", ""];
v[540] = ["Diamond", 7, 14E3, 9, 8, 9, 4294967295, Dd, 35, 0, "+0.7s Freeze Length", ""];

/* Medals */

v[51] = ["Bronze Medal", 1, 2E3, 11, 10, 9, 4292708369, Od, 10, 0, "+10% Drop Rate", ""];
v[112] = ["Bronze Medal", 2, 4E3, 11, 10, 9, 4292708369, Od, 20, 0, "+20% Drop Rate", ""];
v[184] = ["Bronze Medal", 3, 6E3, 11, 10, 9, 4292708369, Od, 30, 0, "+30% Drop Rate", ""];
v[233] = ["Bronze Medal", 4, 8E3, 11, 10, 9, 4292708369, Od, 40, 0, "+40% Drop Rate", ""];
v[385] = ["Bronze Medal", 5, 1E4, 11, 10, 9, 4292708369, Od, 50, 0, "+50% Drop Rate", ""];
v[437] = ["Bronze Medal", 6, 12E3, 11, 10, 9, 4292708369, Od, 75, 0, "+75% Drop Rate", ""];
v[487] = ["Bronze Medal", 7, 14E3, 11, 10, 9, 4292708369, Od, 100, 0, "+100% Drop Rate", ""];
v[52] = ["Silver Medal", 1, 2E3, 11, 10, 9, 4291611852, Pd, 10, 0, "+10% Onigiri Drop", ""];
v[113] = ["Silver Medal", 2, 4E3, 11, 10, 9, 4291611852, Pd, 20, 0, "+20% Onigiri Drop", ""];
v[185] = ["Silver Medal", 3, 6E3, 11, 10, 9, 4291611852, Pd, 30, 0, "+30% Onigiri Drop", ""];
v[234] = ["Silver Medal", 4, 8E3, 11, 10, 9, 4291611852, Pd, 40, 0, "+40% Onigiri Drop", ""];
v[386] = ["Silver Medal", 5, 1E4, 11, 10, 9, 4291611852, Pd, 50, 0, "+50% Onigiri Drop", ""];
v[438] = ["Silver Medal", 6, 12E3, 11, 10, 9, 4291611852, Pd, 75, 0, "+75% Onigiri Drop", ""];
v[488] = ["Silver Medal", 7, 14E3, 11, 10, 9, 4291611852, Pd, 100, 0, "+100% Onigiri Drop", ""];
v[53] = ["Gold Medal", 1, 2E3, 11, 10, 9, 4294958336, Qd, 10, 0, "+10% Gold", ""];
v[114] = ["Gold Medal", 2, 4E3, 11, 10, 9, 4294958336, Qd, 20, 0, "+20% Gold", ""];
v[186] = ["Gold Medal", 3, 6E3, 11, 10, 9, 4294958336, Qd, 30, 0, "+30% Gold", ""];
v[235] = ["Gold Medal", 4, 8E3, 11, 10, 9, 4294958336, Qd, 40, 0, "+40% Gold", ""];
v[387] = ["Gold Medal", 5, 1E4, 11, 10, 9, 4294958336, Qd, 50, 0, "+50% Gold", ""];
v[439] = ["Gold Medal", 6, 12E3, 11, 10, 9, 4294958336, Qd, 75, 0, "+75% Gold", ""];
v[489] = ["Gold Medal", 7, 14E3, 11, 10, 9, 4294958336, Qd, 100, 0, "+100% Gold", ""];
v[48] = ["Iron Medal", 1, 2E3, 11, 10, 9, 4284900966, Rd, 10, 0, "+10% EXP", ""];
v[49] = ["Iron Medal", 2, 4E3, 11, 10, 9, 4284900966, Rd, 20, 0, "+20% EXP", ""];
v[187] = ["Iron Medal", 3, 6E3, 11, 10, 9, 4284900966, Rd, 30, 0, "+30% EXP", ""];
v[236] = ["Iron Medal", 4, 8E3, 11, 10, 9, 4284900966, Rd, 40, 0, "+40% EXP", ""];
v[388] = ["Iron Medal", 5, 1E4, 11, 10, 9, 4284900966, Rd, 50, 0, "+50% EXP", ""];
v[440] = ["Iron Medal", 6, 12E3, 11, 10, 9, 4284900966, Rd, 75, 0, "+75% EXP", ""];
v[490] = ["Iron Medal", 7, 14E3, 11, 10, 9, 4284900966, Rd, 100, 0, "+100% EXP", ""];

/* Charms */

v[243] = ["Ice Charm", 1, 2E3, 16, 39, 9, 4284927231, Sd, 50, 0, "50% Ice Immunity", ""];
v[246] = ["Ice Charm", 2, 4E3, 16, 39, 9, 4284927231, Sd, 80, 0, "80% Ice Immunity", ""];
v[250] = ["Ice Charm", 3, 6E3, 16, 39, 9, 4284927231, Sd, 90, 0, "90% Ice Immunity", ""];
v[320] = ["Ice Charm", 4, 8E3, 16, 39, 9, 4284927231, Sd, 95, 0, "95% Ice Immunity", ""];
v[244] = ["Poison Charm", 1, 2E3, 16, 39, 9, 4288282419, Td, 50, 0, "50% Poison Immunity", ""];
v[247] = ["Poison Charm", 2, 4E3, 16, 39, 9, 4288282419, Td, 80, 0, "80% Poison Immunity", ""];
v[251] = ["Poison Charm", 3, 6E3, 16, 39, 9, 4288282419, Td, 90, 0, "90% Poison Immunity", ""];
v[321] = ["Poison Charm", 4, 8E3, 16, 39, 9, 4288282419, Td, 95, 0, "95% Poison Immunity", ""];
v[245] = ["Freeze Charm", 1, 2E3, 16, 39, 9, 4294967295, Ud, 50, 0, "50% Freeze Immunity", ""];
v[248] = ["Freeze Charm", 2, 4E3, 16, 39, 9, 4294967295, Ud, 80, 0, "80% Freeze Immunity", ""];
v[252] = ["Freeze Charm", 3, 6E3, 16, 39, 9, 4294967295, Ud, 90, 0, "90% Freeze Immunity", ""];
v[322] = ["Freeze Charm", 4, 8E3, 16, 39, 9, 4294967295, Ud, 95, 0, "95% Freeze Immunity", ""];

/* Spirits */

v[277] = ["Fire Spirit", 1, 4E3, 17, 40, 9, 4294919202, Vd, 100, 278, "Fire on", "100% of Kills"];
v[278] = ["Fire Spirit", 0, 0, 0, 0, 0, 0, 1, 109, 0, 5, 15, 3, 1, 0, 0, 0, 1, 6, 4294927889, 2, 16, 16, 16, 16, 0, 0, 100, 10, 0, 90, 1, 0, 0, 1, 50, 0, 0];
v[279] = ["Fire Spirit", 2, 8E3, 17, 40, 9, 4294919202, Vd, 10, 280, "Fire Explosion on", "10% of Kills"];
v[280] = ["Fire Spirit", 0, 0, 0, 0, 0, 0, 1, 109, 0, 30, 50, 16, 2, 0, 0, 0, 1, 6, 4294927889, 2, 16, 16, 16, 16, 0, 0, 150, 30, 0, 95, 1, 0, 0, 1, 50, 0, 0];
v[281] = ["Fire Spirit", 3, 12E3, 17, 40, 9, 4294919202, Vd, 10, 282, "Flame on", "10% of Kills"];
v[282] = ["Fire Spirit", 0, 0, 0, 0, 0, 0, 1, 204, 0, 30, 50, 16, 40, 0, 0, 0, 1, 6, 2298439185, 2, 16, 20, 12, 12, 50, 0, 100, 10, -1, 99, 1, 0, 0, 1, 50, 0, 0];
v[283] = ["Fire Spirit", 4, 16E3, 17, 40, 9, 4294919202, Vd, 10, 284, "Atomic Ray on", "10% of Kills"];
v[284] = ["Fire Spirit", 0, 0, 0, 0, 0, 0, 1, 109, 0, 60, 100, 4, 2, 0, 0, 0, 1, 18, 4294927889, 2, 12, 20, 16, 16, 0, 0, 1E3, 10, 0, 100, 0, 2, 0, 1, 80, 0, 0];
v[285] = ["Thunder Spirit", 1, 4E3, 17, 40, 9, 4293848576, Vd, 50, 286, "Thunder on", "50% of Kills"];
v[286] = ["Thunder Spirit", 0, 0, 0, 0, 0, 0, 1, 105, 0, 1, 99, 1, 5, 0, 0, 0, 1, 10, 4294967142, 2, 16, 16, 16, 16, 0, 0, 200, 10, 0, 100, 0, 0, 0, 3, 0, 0, 0];
v[287] = ["Thunder Spirit", 2, 8E3, 17, 40, 9, 4293848576, Vd, 10, 288, "Lightning on", "10% of Kills"];
v[288] = ["Thunder Spirit", 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 99, 10, 20, 0, 0, 0, 1, 10, 2291767807, 2, 12, 16, 8, 8, 10, 0, 500, 10, 0, 100, 0, 0, 0, 3, 0, 0, 0];
v[308] = ["Thunder Spirit", 3, 12E3, 17, 40, 9, 4293848576, Vd, 10, 309, "Big Thunder on", "10% of Kills"];
v[309] = ["Thunder Spirit", 0, 0, 0, 0, 0, 0, 1, 108, 1, 1, 333, 1, 0, 0, 0, 0, 1, 10, 4294967142, 2, 64, 64, 64, 64, 0, 25, 26, 10, 50, 100, 0, 1, 0, 3, 0, 0, 0];
v[310] = ["Thunder Spirit", 4, 16E3, 17, 40, 9, 4293848576, Vd, 5, 311, "Thunder Ball on", "5% of Kills"];
v[311] = ["Thunder Spirit", 0, 0, 0, 0, 0, 0, 1, 105, 0, 1, 9999, 1, 4, 0, 0, 0, 1, 2, 4294967142, 2, 16, 16, 16, 16, 0, 0, 200, 10, 0, 100, 0, 0, 0, 3, 0, 0, 2, 0, 1, 9, 30, 0, 15, 4294967142, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 0, 0, 0];
v[377] = ["Ice Spirit", 1, 4E3, 17, 40, 9, 4284927231, Vd, 50, 378, "Freeze Arrow on", "50% of Kills"];
v[378] = ["Ice Spirit", 0, 0, 0, 0, 0, 0, 1, 109, 0, 25, 50, 4, 1, 0, 0, 0, 1, 3, 4291611903, 2, 16, 16, 8, 8, 0, 25, 2E3, 10, 0, 100, 0, 2, 0, 5, 50, 0, 0];
v[379] = ["Ice Spirit", 2, 8E3, 17, 40, 9, 4284927231, Vd, 20, 380, "Ice Mist on", "20% of Kills"];
v[380] = ["Ice Spirit", 0, 0, 0, 0, 0, 0, 1, 2404, 1, 5, 5, 9, 50, 0, 0, 0, 0, 6, 1154272511, 2, 32, 32, 48, 48, 0, 50, 51, 10, 2, 95, 0, 1, 0, 2, 40, 0, 0];
v[381] = ["Ice Spirit", 3, 12E3, 17, 40, 9, 4284927231, Vd, 20, 382, "Freeze Spike on", "20% of Kills"];
v[382] = ["Ice Spirit", 0, 0, 0, 0, 0, 0, 1, 4, 0, 5, 5, 25, 100, 0, 0, 0, 1, 9, 3435973887, 2, 12, 12, 6, 6, 0, 25, 200, 10, 5, 100, 0, 0, 0, 5, 20, 0, 0];
v[383] = ["Ice Spirit", 4, 2E4, 17, 40, 9, 4284927231, Vd, 40, 384, "Ice Meteor on", "40% of Kills"];
v[384] = ["Ice Spirit", 0, 0, 0, 0, 0, 0, 1, 105, 0, 100, 150, 1, 5, 0, 0, 0, 1, 16, 4291611903, 2, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 2, 20, 0, 4, 0, 10, 15, 9, 1, 16, 3431500031, 2, 12, 12, 6, 6, 0, 10, 100, 10, 5, 100, 0, 0];
v[404] = ["Poison Spirit", 4, 2E4, 17, 40, 9, 4278255360, Vd, 60, 405, "Poison on", "60% of Kills"];
v[405] = ["Poison Spirit", 0, 0, 0, 0, 0, 0, 1, 109, 1, 1, 1, 6, 1, 0, 0, 0, 0, 6, 1147600640, 2, 24, 24, 32, 32, 0, 50, 51, 10, 0, 88, 0, 1, 0, 4, 1E3, 0, 0];

/*
<<<<<------------------------------GAME FUNCTIONS------------------------------>>>>>
*/

var be = 0,
    ce = 0,
    de = "";
window.GameSave = ee;

function ee(a) 
{
    return 0 == a.length ? "" : de
}

var fe = 0,
    ge = 0,
    he = "";
window.GameLoad = ie;

function ie(a) 
{
    if (0 != a.length) return he = a, 0;
    if (0 == a.length) 
    {
        if (0 == he.length) return -1;
        p = ob = nb = l = mb = h = 0;
        pb = 3;
        qb = !1;
        for (a = 0; 4 > a; a++) dc[a] = 0;
        Jb = 0;
        w.j();
        je.j();
        ke.j();
        le.j();
        me.j();
        fe = ne(he, 0);
        0 < fe ? ge = 50 : de = oe(0);
        he = "";
        pe()
    }
    return -1
}

window.AutoSave = qe;

function qe(a) 
{
    if (0 == a.length || 0 == be) return "";
    be = 0;
    ce = 50;
    return ee("0")
}

function x(a, b) 
{
    return v[a].length <= b ? 0 : b == Qc || b == Xc || b == ed ? v[a][b] >>> 0 : v[a][b]
}

var re = !1,
    se = !1;

function y(a, b) 
{
    se = re = !1;
    x(Bc[a], fd) == b && (re = !0);
    x(Cc[a], fd) == b && (se = !0);
    return re || se ? !0 : !1
}

function z(a, b) 
{
    var c = 0;
    re && (c += x(Bc[a], b));
    se && (c += x(Cc[a], b));
    return c
}

var te = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.*".split("");

function oe(a)
{
    var b, c, d = "",
        e = new Int32Array(512);
    b = 0;
    e[b++] = 1;
    e[b++] = 0;
    e[b++] = 0;
    e[b++] = A(B(64));
    e[b++] = A(B(64));
    for (c = 0; 8 > c; c++) e[b++] = Ja[c];
    0 == a && (e[b++] = l >> 6 & 63, e[b++] = l >> 0 & 63);
    e[b++] = Kb[0] >> 6 & 63;
    e[b++] = Kb[0] >> 0 & 63;
    1 == a && (e[b++] = Mb[0]);
    for (c = 0; 4 > c; c++) e[b++] = Nb[c] >> 6 & 63, e[b++] = Nb[c] >> 0 & 63;
    0 == a && (e[b++] = Ob >> 18 & 63, e[b++] = Ob >> 12 & 63, e[b++] = Ob >> 6 & 63, e[b++] = Ob >> 0 & 63, e[b++] = Qb >> 18 & 63, e[b++] = Qb >> 12 & 63, e[b++] = Qb >> 6 & 63, e[b++] = Qb >> 0 & 63);
    for (c = 0; 4 > c; c++) e[b++] = cc[c] >> 0 & 63;
    if (0 == a)
        for (c = 0; 4 > c; c++) e[b++] = q[c] >> 12 & 63, e[b++] = q[c] >> 6 & 63, e[b++] = q[c] >> 0 & 63;
    for (c = 0; 4 > c; c++) e[b++] = ec[c] >> 6 & 63, e[b++] = ec[c] >> 0 & 63, e[b++] = fc[c] >> 6 & 63, e[b++] = fc[c] >> 0 & 63, e[b++] = gc[c] >> 6 & 63, e[b++] = gc[c] >> 0 & 63, e[b++] = hc[c] >> 6 & 63, e[b++] = hc[c] >> 0 & 63;
    for (c = t; c < t + 4; c++) e[b++] = s[c] >> 6 & 63, e[b++] = s[c] >> 0 & 63, e[b++] = Bc[c] >> 6 & 63, e[b++] = Bc[c] >> 0 & 63, e[b++] = Cc[c] >> 6 & 63, e[b++] = Cc[c] >> 0 & 63;
    if (0 == a) 
    {
        for (c = Dc; c < Fc; c++) e[b++] = s[c] >> 6 & 63, e[b++] = s[c] >> 0 & 63, e[b++] = Bc[c] >> 6 & 63, e[b++] = Bc[c] >> 0 & 63, e[b++] = Cc[c] >> 6 & 63, e[b++] = Cc[c] >> 0 & 63;
        for (c = 0; 4 > c; c++) e[b++] = rc[c];
        e[b++] = sc;
        e[b++] = tc;
        e[b++] = uc;
        e[b++] = vc;
        e[b++] = xc;
        for (c = 0; 3 > c; c++) e[b++] = 0;
        for (c = 0; c < ve; c++)
        {
            d = we[c];
            for (a = 0; c < ve - 1 && d == we[c + 1]; c++)
                if (a++, 31 == a) 
                {
                    c++;
                    break
                }
            e[b++] = d;
            0 < a && (e[b++] = 16 + a)
        }
    }
    for (c = a = 0; c < b; c++) a += e[c] * (A(c / 7) + 1);
    e[1] = a >> 6 & 63;
    e[2] = a & 63;
    for (c = a = 0; c < b; c++) a += e[c] * ((c & 15) + 1);
    e[b++] = a >> 8 & 47;
    e[b++] = a >> 4 & 31;
    e[b++] = a >> 0 & 15;
    d = "" + te[e[0]];
    d += te[e[1]];
    d += te[e[2]];
    a = e[2];
    for (c = 3; c < b; c++) d += te[e[c] + a & 63], a += e[c] + c + e[1];
    return d
}

function ne(a, b) 
{
    var c = 4 * b,
        d, e, g = new Int32Array(512),
        k = a.length,
        r = 0;
    if (0 == k) return 1;
    90 > k && (r = 1);
    for (d = 0; d < k; d++) 
    {
        var m = a.charAt(d);
        for (e = 0; e < te.length; e++)
            if (te[e] == m) 
            {
                g[d] = e;
                break
            }
    }
    if (0 >= g[0]) return 2;
    e = g[2];
    for (d = 3; d < k; d++) g[d] = g[d] - e & 63, e += g[d] + d + g[1];
    for (d = e = 0; d < k - 3; d++) e += g[d] * ((d & 15) + 1);
    if (g[d + 0] != (e >> 8 & 47) || g[d + 1] != (e >> 4 & 31) || g[d + 2] != (e >> 0 & 15)) return 3;
    if (0 == b)
        for (d = 0; 8 > d; d++)
            if (g[d + 5] != Ja[d]) return 4;
    d = 0;
    d++;
    d++;
    d++;
    d++;
    d++;
    d += 8;
    0 == r && (l = (g[d++] << 6) + g[d++]);
    Kb[b] = (g[d++] << 6) + g[d++];
    1 == r && (Mb[b] = g[d++]);
    for (e = c; e < c + 4; e++) Nb[e] = (g[d++] << 6) + g[d++];
    0 == r && (Ob = (g[d++] << 18) + (g[d++] << 12) + (g[d++] << 6) + g[d++], Qb = (g[d++] << 18) + (g[d++] << 12) + (g[d++] << 6) + g[d++]);
    for (e = c; e < c + 4; e++) cc[e] = g[d++];
    if (0 == r)
        for (e = c; e < c + 4; e++) q[e] = (g[d++] << 12) + (g[d++] << 6) + g[d++];
    for (e = c; e < c + 4; e++) ec[e] = (g[d++] << 6) + g[d++], fc[e] = (g[d++] << 6) + g[d++], gc[e] = (g[d++] << 6) + g[d++], hc[e] = (g[d++] << 6) + g[d++];
    for (e = t + c; e < t + 4 + c; e++) s[e] = (g[d++] << 6) + g[d++], Bc[e] = (g[d++] << 6) + g[d++], Cc[e] = (g[d++] << 6) + g[d++];
    if (1 == r) return 0;
    for (e = Dc; e < Fc; e++) s[e] = (g[d++] << 6) + g[d++], Bc[e] = (g[d++] << 6) + g[d++], Cc[e] = (g[d++] << 6) + g[d++];
    for (e = 0; 4 > e; e++) rc[e] = g[d++];
    sc = g[d++];
    tc = g[d++];
    uc = g[d++];
    vc = g[d++];
    xc = g[d++];
    for (e = 0; 3 > e; e++) d++;
    for (e = 0; e < ve; e++) we[e] = 0;
    for (e = 0; d < k - 3; d++)
        if (16 > g[d]) we[e++] = g[d];
        else
            for (c = 0; c < g[d] - 16; c++) we[e++] = g[d - 1];
    for (e = 0; e < ve; e++) 0 != (we[e] & xe) && (we[e] |= ye, 0 < ze[e][3] && (we[ze[e][3]] |= ye), 0 < ze[e][4] && (we[ze[e][4]] |= ye));
    return 0
}

ea.fff = Ae;

function Ae(a) 
{
    var b, c = "",
        d = new Int32Array(16);
    b = 0;
    d[b++] = A(B(64));
    d[b++] = A(B(64));
    d[b++] = A(B(64));
    d[b++] = A(B(64));
    d[b++] = Mb[0];
    d[b++] = Mb[1];
    d[b++] = a;
    d[b++] = ta >> 18 & 63;
    d[b++] = ta >> 12 & 63;
    d[b++] = ta >> 6 & 63;
    d[b++] = ta & 63;
    var e = 0;
    for (a = 0; a < b; a++) e += d[a] * ((a & 15) + 1);
    d[b++] = e >> 8 & 47;
    d[b++] = e >> 4 & 31;
    d[b++] = e >> 0 & 15;
    c = "" + te[d[0]];
    c += te[d[1]];
    e = d[1];
    for (a = 2; a < b; a++) c += te[d[a] + e & 63], e += d[a] + a + d[0];
    return c
}

var Be = 0,
    Ce = 0,
    De = [],
    Ee = 0,
    Fe = 0,
    Ge = 0;
ea.fff = He;

function He() 
{
    var a, b, c;
    De = new Int32Array(v.length);
    for (a = 0; a < v.length; a++)
        for (b = De[a] = 0; b < v[a].length; b++) "number" == typeof v[a][b] && (De[a] += v[a][b] & 255);
    for (a = Ee = 0; a < Ie.length; a++)
        for (b = 0; b < Ie[a].length; b++)
            for (c = 0; c < Ie[a][b].length; c++) Ee += Ie[a][b][c];
    for (a = Fe = 0; a < C.length; a++)
        for (b = 0; b < C[a].length; b++) Fe += C[a][b] & 65535;
    for (c = Ge = 0; c < Jc.length; c++)
        for (a = 0; a < Jc[c].length; a++)
            for (b = 0; b < Jc[c][a].length; b++) Ge += Jc[c][a][b] * b & 65535
}

function Je() 
{
    var a, b, c, d;
    0 > Kb[0] && 99 < Kb[0] && (D = null);
    0 > Kb[1] && 99 < Kb[1] && (D = null);
    0 > Ob && 9999999 < Ob && (D = null);
    0 > Qb && 9999999 < Qb && (D = null);
    for (a = 0; 8 > a; a++) 0 > Nb[a] && 196 < Nb[a] && (D = null), 0 > ec[a] && 196 < ec[a] && (D = null), 0 > fc[a] && 196 < fc[a] && (D = null), 0 > gc[a] && 196 < gc[a] && (D = null), 0 > hc[a] && 196 < hc[a] && (D = null);
    for (a = 0; 8 > a; a++) 0 != s[t + a] && x(s[t + a], Pc) != cc[a] && (D = null);
    for (a = 0; 8 > a; a++) 
    {
        b = x(s[t + a], Pc);
        c = x(s[t + a], Yc);
        d = x(s[t + a], Tc);
        if (0 != Bc[t + a]) 
        {
            9 != x(Bc[t + a], Pc) && (D = null);
            x(Bc[t + a], fd) == x(Cc[t + a], fd) && (D = null);
            var e = x(Bc[t + a], fd);
            !1 == Ke(e, b, c, d) && (D = null)
        }
        0 != Cc[t + a] && Cc[t + a] != Gc && (9 != x(Cc[t + a], Pc) && (D = null), e = x(Cc[t + a], fd), !1 == Ke(e, b, c, d) && (D = null))
    }
    if (0 == f || 2 == f) 
    {
        for (a = c = 0; a < ve; a++)
            if (0 != (we[a] & ye))
                for (d = Le[a + 1] - Le[a], b = 0; b < d; b++) c < C[Le[a] + b][Me] && (c = C[Le[a] + b][Me]), 1 == C[Le[a] + b][Ne] && b++;
        c + 10 + 2 < Kb[0] && (D = null)
    }
    if (0 == f || 2 == f) 
    {
        b = 4753E3;
        a = 9999999;
        if (98 > Kb[0]) 
        {
            b = 0;
            for (a = 1; a < Kb[0]; a++) b += 1E3 * a;
            a = b + 1E3 * a
        }
        if (Ob < b || a < Ob) D = null
    }
    for (a = d = 0; 8 > a; a++) d += Nb[a];
    for (a = 0; 8 > a; a++) d += ec[a];
    for (a = 0; 8 > a; a++) d += fc[a];
    for (a = 0; 8 > a; a++) d +=
        gc[a];
    for (a = 0; 8 > a; a++) d += hc[a];
    d != 8 * (Kb[0] - 1) + 8 * (Kb[1] - 1) && (D = null);
    d = Ce;
    d += (Ob | 1) * (d & 15 | 1);
    d += (Qb | 1) * (d & 15 | 1);
    for (a = 0; 2 > a; a++) d += (Kb[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (Nb[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (ec[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (fc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (gc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (hc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (cc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (q[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (dc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (ic[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d +=
        (jc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (kc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (lc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (mc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (nc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (oc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (pc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (qc[a] | 1) * (d & 15 | 1);
    for (a = 0; a < Fc; a++) d += (s[a] | 1) * (d & 15 | 1);
    for (a = 0; a < Fc; a++) d += (Bc[a] | 1) * (d & 15 | 1);
    for (a = 0; a < Fc; a++) d += (Cc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (yc[a] | 1) * (d & 15 | 1);
    for (a = 0; 8 > a; a++) d += (zc[a] | 1) * (d & 15 | 1);
    for (a = 0; a < ve; a++) d += (we[a] |
        1) * (d & 15 | 1);
    d += (f | 1) * (d & 15 | 1);
    d += (Lb[0] | 1) * (d & 15 | 1);
    d += (Lb[1] | 1) * (d & 15 | 1);
    d += (Mb[0] | 1) * (d & 15 | 1);
    d += (Mb[1] | 1) * (d & 15 | 1);
    d != (Be ^ 16777215) && (D = null);
    if (1 > B(100))
        for (a = 0; a < v.length; a++) 
        {
            for (b = d = 0; b < v[a].length; b++) "number" == typeof v[a][b] && (d += v[a][b] & 255);
            d != De[a] && (D = null)
        }
    if (1 > B(100)) 
    {
        for (a = d = 0; a < Ie.length; a++)
            for (b = 0; b < Ie[a].length; b++)
                for (c = 0; c < Ie[a][b].length; c++) d += Ie[a][b][c];
        d != Ee && (D = null)
    }
    if (1 > B(100)) 
    {
        for (a = d = 0; a < C.length; a++)
            for (b = 0; b < C[a].length; b++) d += C[a][b] & 65535;
        d != Fe && (D = null)
    }
    if (1 > B(100)) 
    {
        for (c =
            d = 0; c < Jc.length; c++)
            for (a = 0; a < Jc[c].length; a++)
                for (b = 0; b < Jc[c][a].length; b++) d += Jc[c][a][b] * b & 65535;
        d != Ge && (D = null)
    }
}

function pe() 
{
    var a, b = A(B(1024));
    Ce = b;
    b += (Ob | 1) * (b & 15 | 1);
    b += (Qb | 1) * (b & 15 | 1);
    for (a = 0; 2 > a; a++) b += (Kb[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (Nb[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (ec[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (fc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (gc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (hc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (cc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (q[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (dc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (ic[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (jc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (kc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (lc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (mc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (nc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (oc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (pc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (qc[a] | 1) * (b & 15 | 1);
    for (a = 0; a < Fc; a++) b += (s[a] | 1) * (b & 15 | 1);
    for (a = 0; a < Fc; a++) b += (Bc[a] | 1) * (b & 15 | 1);
    for (a = 0; a < Fc; a++) b += (Cc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (yc[a] | 1) * (b & 15 | 1);
    for (a = 0; 8 > a; a++) b += (zc[a] | 1) * (b & 15 | 1);
    for (a = 0; a < ve; a++) b += (we[a] | 1) * (b & 15 | 1);
    b += (f | 1) * (b & 15 | 1);
    b += (Lb[0] | 1) * (b & 15 | 1);
    b += (Lb[1] | 1) * (b & 15 | 1);
    b += (Mb[0] | 1) * (b & 15 | 1);
    b += (Mb[1] | 1) * (b & 15 | 1);
    Be = b ^ 16777215
}

var Oe = 0;

function Pe(a, b, c, d, e, g, k, r, m, n, G, H, N) 
{
    if (0 == Oe) 
    {
        ka = null != a ? a : "";
        Ka = "0" == b ? !0 : !1;
        Ha = null != c ? c : "";
        f = null != d ? ~~d : 0;
        la = null != e ? e : "";
        oa = null != g ? g : "";
        Ia = null != k ? k : "";
        sa = null != r ? ~~r : 0;
        ta = null != m ? ~~m : 0;
        ma = null != n ? n : "";
        na = null != G ? G : "";
        pa = null != H ? H : "";
        qa = null != N ? N : "";
        for (a = 0; 8 > a && a < ka.length; a++)
            for (b = ka.charAt(a), c = 0; c < te.length; c++)
                if (te[c] == b) 
                {
                    Ja[a] = c;
                    break
                }
        Qe(Re);
        Se.width = fa;
        Se.height = ha;
        for (a = 0; 513 > a; a++) Te[a] = new Float32Array(2);
        for (a = 0; 512 > a; a++) b = 360 * a / 512 * Ue / 180, Te[a][0] = Math.cos(b), Te[a][1] = Math.sin(b);
        Te[a][0] = Te[0][0];
        Te[a][1] = Te[0][1];
        for (a = 0; 256 > a; a++) Ve[a] = !1, We[a] = !1, Xe[a] = !1, Ye[a] = 0, Ze[a] = 0;
        for (a = 0; 10 > a; a++) Ye[48 + a] = 48 + a;
        for (a = 0; 9 > a; a++) Ze[49 + a] = 33 + a;
        for (a = 0; 4 > a; a++) Ye[37 + a] = 37 + a;
        for (a = 0; 4 > a; a++) Ze[37 + a] = 37 + a;
        Ye[13] = Ze[13] = 13;
        Ye[16] = Ze[16] = 16;
        Ye[17] = Ze[17] = 17;
        Ye[18] = Ze[18] = 18;
        Ye[32] = Ze[32] = 32;
        Ye[186] = 58;
        Ze[186] = 42;
        Ye[187] = 59;
        Ze[187] = 43;
        Ye[188] = 44;
        Ze[188] = 60;
        Ye[189] = 45;
        Ze[189] = 61;
        Ye[190] = 46;
        Ze[190] = 62;
        Ye[191] = 47;
        Ze[191] = 63;
        Ye[192] = 64;
        Ze[192] = 96;
        Ye[219] = 91;
        Ze[219] = 123;
        Ye[220] = 92;
        Ze[220] = 124;
        Ye[221] = 93;
        Ze[221] = 125;
        Ye[222] = 94;
        Ze[222] = 126;
        Ye[226] = 92;
        Ze[226] = 95;
        Ye[58] = 58;
        Ze[58] = 42;
        Ye[59] = 59;
        Ze[59] = 43;
        Ye[173] = 45;
        Ze[173] = 61;
        Ye[64] = 64;
        Ze[64] = 96;
        Ye[160] = 94;
        Ze[160] = 126;
        for (a = 0; 1024 > a; a++) $e[a] = a / 1024;
        for (a = 0; 1024 > a; a++) b = A(1024 * Math.random()), c = $e[a], $e[a] = $e[b], $e[b] = c;
        af = A(1024 * Math.random()) & 1023;
        bf = A(512 * Math.random()) | 1;
        for (a = 0; a < fa * ha; a++) D[a] = 0;
        for (a = 0; a < fa * ha * 4; a++) cf[a] = 255;
        F.j("font.gif", 8, 12);
        df.j("font_s.gif", 5, 7);
        for (a = 0; 12 > a; a++) Oa[a] = new wa, Oa[a].j("gt" + a + ".gif");
        Pa.j("pl.gif");
        Qa.j("icon.gif");
        Sa.j("item.gif");
        Ta.j("en.gif");
        Va.j("next.gif");
        Wa.j("mag.gif");
        Ya.j("title.gif");
        ab.j("ef.gif");
        db.j("town.gif");
        eb.j("water.gif");
        fb.j("water2.gif");
        gb.j("tree.gif");
        hb.j("map.gif");
        jb.j("mt.gif");
        kb.j("map2.gif");
        lb.j("mt2.gif");
        ef() ? Oe-- : Oe++
    }
    if (1 == Oe) 
    {
        hf(F.N);
        hf(df.N);
        for (a = 0; 12 > a; a++) hf(Oa[a]);
        hf(Pa);
        hf(Qa);
        hf(Sa);
        hf(Ta);
        hf(Va);
        hf(Wa);
        hf(Ya);
        hf(ab);
        hf(db);
        hf(eb);
        hf(fb);
        hf(gb);
        hf(hb);
        hf(jb);
        hf(kb);
        hf(lb);
        0 != jf ? kf(Pe, lf()) : Oe++
    }
    2 == Oe && (w.j(), je.j(), ke.j(), le.j(), me.j(), 1 == f &&
        ne(Ia, 1), ne(Ha, 0), de = oe(0), He(), pe(), mf(Ma, fa, ha), nf())
}

ea.fff = of;

function of() 
{
    if (0 < pf) pf++;
    else {
        ie("");
        qe("");
        for (var a = fa * ha - 1; 0 <= a; a--) D[a] = 0;
        9 >= h ? qf() : 49 >= h ? rf() : 59 >= h ? sf() : 60 <= h && tf();
        0 < ce && (ce--, uf(F, 480, 247, "Game Saved", 16711680, 6684672));
        0 < ge && (ge--, 2 == fe ? F.b(10, 10, "VERSION ERROR", 16711680, 6684672) : 3 == fe ? F.b(10, 10, "DATA ERROR", 16711680, 6684672) : 4 == fe && F.b(10, 10, "USER ERROR", 16711680, 6684672));
        1 == ca && (F.b(0, 0, vf + wf, 16777215, 0), 1 == ca && F.b(48, 0, xf + "sl", 16777215, 0));
        Je()
    }
}

ea.fff = qf;

function qf() 
{
    var a;
    if (0 == h)
        if (w.j(), I.j(0), h++, 1 == f) h = 60;
        else 
        {
            if (2 == f || 3 == f) h = 70
        }
    else if (1 == h) nb = 0, J.j(0) && (w.set(0, 20, J.o[20]), w.set(1, 28, J.o[28]), w.set(2, 36, J.o[36]), w.set(3, 44, J.o[44]), yf(), I.j(1), h++);
    else if (2 == h) 
    {
        w.move();
        yf();
        J.b();
        w.b();
        K(Ya, 256, 100, 365, 121, 0, Ka ? 0 : 121, 365, 121, 16777215);
        uf(F, 256, 195, "NEW GAME", 16777215, 10053171);
        if (zf(256, 195, 128, 24)) 
        {
            if (Af) 
            {
                Je();
                pb = p = 3;
                for (a = 0; 4 > a; a++) yb[a] = cc[a], zb[a] = s[t + a], Bb[a] = Bc[t + a], Cb[a] = Cc[t + a], cc[a] = 0, s[t + a] = 0, Bc[t + a] = 0, Cc[t + a] = 0;
                h++;
                pe();
                yf()
            }
            L(192,
                203, 320, 203, 11141120)
        }
        0 != cc[0] && 0 != cc[1] && 0 != cc[2] && 0 != cc[3] && (uf(F, 256, 235, "LOAD GAME", 16777215, 10053171), zf(256, 235, 128, 24) && (Af && (h = 5), L(192, 243, 320, 243, 11141120)));
        uf(F, 256, 275, "VS MODE", 16777215, 5066137);
        zf(256, 275, 128, 24) && (Af && (location.pathname = Ka ? "/javagame/ranger/versus.html" : "/en/javagame/ranger/versus.html"), L(192, 283, 320, 283, 11141120));
        Bf()
    } 
        else if (3 == h) /* Class Selection */
        {
        w.move();
        J.b();
        w.b();
        Cf(F, 256, 50, "Class Selection", 204, 148, 73, 255, 100, 0, 0, 255, 16, 24);
        for (a = 0; 4 > a; a++) zf(160 + 64 * a, 100, 24, 24) &&
            (Af && (pb = p = a), Df(160 + 64 * a, 100, 24, 24, 8388608)), Ef(160 + 64 * a, 100, 25, 25, 16777215), K(Pa, 160 + 64 * a, 100, 24, 24, 24 * cc[a], 0, 24, 24, 16777215);
        Ef(160 + 64 * p, 100, 25, 25, 16711680);
        Je();
        for (a = 0; 6 > a; a++) 
        {
            var b = 96 + 64 * a,
                c = Hc[a + 1],
                d = F;
            d.Q = -1;
            uf(d, b, 170, c, 13407305, 6553600);
            d.Q = 0;
            zf(96 + 64 * a, 190, 24, 24) && (Af && (cc[p] = a + 1, s[t + p] = [3, 4, 5, 6, 58, 76, 188, 289][a], Bc[t + p] = 0, Cc[t + p] = 0), Df(96 + 64 * a, 190, 24, 24, 8388608));
            Ef(96 + 64 * a, 190, 25, 25, 16777215);
            K(Pa, 96 + 64 * a, 190, 24, 24, 24 * (a + 1), 0, 24, 24, 16777215)
        }
        for (a = 6; 8 > a; a++) 
        {
            var b = 96 + 64 * a - 384,
                c = Hc[a + 1],
                d = F;
            d.Q = -1;
            uf(d, b, 220, c, 13407305, 6553600);
            d.Q = 0;
            zf(96 + 64 * a - 384, 240, 24, 24) && (Af && (cc[p] = a + 1, s[t + p] = [3, 4, 5, 6, 58, 76, 188, 289][a], Bc[t + p] = 0, Cc[t + p] = 0), Df(96 + 64 * a - 384, 240, 24, 24, 8388608));
            Ef(96 + 64 * a - 384, 240, 25, 25, 16777215);
            K(Pa, 96 + 64 * a - 384, 240, 24, 24, 24 * (a + 1), 0, 24, 24, 16777215)
        }
        0 != cc[0] && 0 != cc[1] && 0 != cc[2] && 0 != cc[3] &&
            (uf(F, 464, 300, "START", 16777215, 10053171), zf(464, 300, 128, 24) && (Af && h++, L(416, 308, 512, 308, 11141120)));
        uf(F, 48, 300, "RETURN", 16777215, 10053171);
        if (zf(48, 300, 128, 24)) 
        {
            if (Af) 
            {
                for (a = 0; 4 > a; a++) cc[a] = yb[a], s[t + a] = zb[a], Bc[t + a] = Bb[a], Cc[t + a] = Cb[a];
                h = 2
            }
            L(0, 308, 96, 308, 11141120)
        }
        pe();
        Bf()
    } 
        else if (4 == h) 
        {
        Je();
        l = 0;
        Kb[0] = 1;
        Lb[0] = 1;
        for (a = Qb = Ob = Mb[0] = 0; 4 > a; a++) Nb[a] = 0, q[a] = 50, dc[a] = 0, ec[a] = 0, fc[a] = 0, gc[a] = 0, hc[a] = 0, rc[a] = 1;
        vc = uc = tc = sc = 0;
        xc = 1;
        for (a = Dc; a < Fc; a++) s[a] = 0, Bc[a] = 0, Cc[a] = 0;
        for (a = 0; a < ve; a++) we[a] = 0;
        we[0] = xe |
            ye;
        we[1] = ye;
        for (a = 0; 4 > a; a++) w.step[a] = 0;
        nb = 0;
        h = 6;
        pe();
        Bf()
        }  
        else 5 == h ? (nb = 0, h = 6) : 6 == h && (me.b(), Ff(2))
}

ea.fff = rf;

function rf() {
    var a, b, c, d;
    a = "";
    if (10 == h) {
        if (J.j(l)) {
            w.set(0, 0, J.o[0]);
            w.set(1, 1, J.o[1]);
            w.set(2, 2, J.o[2]);
            w.set(3, 3, J.o[3]);
            I.j(1);
            var e = A(M(12, 28)),
                g = A(M(28, 44)),
                k = A(M(44, 60)),
                r = A((Ie[l][nb].length - 2) / 3);
            for (a = 0; a < r; a++) {
                var m = Ie[l][nb][3 * a + 2],
                    n = Ie[l][nb][3 * a + 3],
                    G = Ie[l][nb][3 * a + 4];
                for (b = 0; b < G; b++) {
                    if (m == O) c = A(M(12, 60)), d = Gf(J.o[c], J.I[c]);
                    else if (m == P) c = A(M(12, 28)), d = Gf(J.o[c], J.I[c]);
                    else if (m == Q) c = A(M(28, 44)), d = Gf(J.o[c], J.I[c]);
                    else if (m == R) c = A(M(44, 60)), d = Gf(J.o[c], J.I[c]);
                    else if (m == S) c = A(M(12,
                        60)), d = A(M(J.$[c] + 2, J.I[c]));
                    else if (m == Hf) c = A(M(12, 60)), d = A(M(J.$[c] + 2, J.hb[c]));
                    else if (m == T && 0 < J.ab) d = A(B(J.ab)), c = J.gb[d] & 63, d = A(J.gb[d] / 64);
                    else if (m == If) c = e, d = Gf(J.o[c], J.I[c]);
                    else if (m == Jf) c = g, d = Gf(J.o[c], J.I[c]);
                    else if (m == Kf) c = k, d = Gf(J.o[c], J.I[c]);
                    else if (m == Lf) c = A(M(12, 60)), d = J.$[c];
                    else if (m == Mf) c = A(M(12, 28)), d = J.$[c];
                    else if (m == Nf) c = A(M(28, 44)), d = J.$[c];
                    else if (m == Of) c = A(M(44, 60)), d = J.$[c];
                    else continue;
                    I.add(c, d, n)
                }
            }
            ke.index = 0;
            je.index = 0;
            le.index = 0;
            mb = ob = Ib = Hb = Gb = Fb = le.J = 0;
            h++
        }
    } else if (11 ==
        h) Pf(0), Ff(0), r = 30, a = "", 0 == nb ? (r = 110, a = Qf[l]) : nb + 1 == Ie[l].length && (r = 110, a = "BOSS AREA"), Rf(255 - A(255 * (30 > mb ? mb : 30) / 30)), 110 == r && (b = 255, 30 > mb ? b = A(255 * mb / 30) : 80 < mb && (b = 255 - A(255 * (mb - 80) / 30)), Cf(F, 256, 128, a, 255, 255, 255, b, 64, 64, 64, b, 16, 24), c = -1024 + A(512 * mb / 30), L(c, 112, c + 1024, 112, 8421504), c = 512 - A(512 * mb / 30), L(c, 141, c + 1024, 141, 8421504)), mb++, mb == r && (mb = 0, h++);
    else if (12 == h) Pf(0), Ff(0), 0 == q[0] + q[1] + q[2] + q[3] ? (mb = 0, h = 30) : 0 != ob ? h++ : Sf(364, 4, 56, 20) ? (Af ? h = 20 : Ve[32] && (h = 20), F.b(368, 8, "Option", 16711680, 0)) : Ve[32] ?
        h = 20 : Sf(428, 4, 80, 20) && (Af && (h = 6), F.b(432, 8, "World Map", 16711680, 0));
    else if (13 == h) Pf(0), Ff(0), Rf(A(255 * mb / 30)), mb++, 30 == mb && (1 == ob ? (ob = 0, nb++, mb = 0, h = 10) : 2 == ob && (mb = nb = ob = 0, Je(), we[l] |= xe, 0 < ze[l][3] && (we[ze[l][3]] |= ye), 0 < ze[l][4] && (we[ze[l][4]] |= ye), pe(), h = 6, -1 == ze[l][3] && (h = 40)), de = oe(0), be = 1);
    else if (20 == h) {
        Pf(1);
        Ff(1);
        r = 12;
        0 != l && 20 != l && 47 != l && 70 != l && 77 != l || 1 != nb || (r = 52);
        Sf(364, 4, 56, 20) ? (Af ? h = r : Ve[32] && (h = r), F.b(368, 8, "Option", 16711680, 0)) : Ve[32] && (h = r);
        Tf = 1;
        U(128, 42, 256, 151, 3425907507);
        Tf = 0;
        uf(F,
            256, 58, "OPTION", 16777215, 0);
        for (a = 0; 4 > a; a++) K(Pa, 256 + 32 * a, 78, 24, 24, 24 * x(s[t + a], Pc), 0, 24, 24, 16777215), Uf(256 + 32 * a - 12, 66, 24 * x(s[t + a], Pc), x(s[t + a], Qc));
        uf(F, 180, 98, "Auto move", 16777215, 0);
        b = ["OFF", "ON"];
        for (a = 0; 4 > a; a++) uf(F, 256 + 32 * a, 98, b[rc[a]], 16777215, 0), zf(256 + 32 * a, 98, 32, 13) && (uf(F, 256 + 32 * a, 98, b[rc[a]], 16711680, 0), Af && (rc[a] = 1 - rc[a]));
        F.b(128, 108, "  Move of dying: " + b[sc], 16777215, 0);
        Sf(128, 108, 256, 13) && (F.b(128, 108, "  Move of dying: " + b[sc], 16711680, 0), sc = Vf(sc + Wf, 0, 1));
        a = ["PLAYER&ENEMY", "PLAYER",
            "ENEMY", "OFF"
        ];
        F.b(128, 121, "  Damage Effect: " + a[tc], 16777215, 0);
        Sf(128, 121, 256, 13) && (F.b(128, 121, "  Damage Effect: " + a[tc], 16711680, 0), tc = Vf(tc + Wf, 0, 3));
        a = ["OFF", "PLAYER", "ENEMY", "PLAYER&ENEMY"];
        F.b(128, 134, "  LP Bar       : " + a[uc], 16777215, 0);
        Sf(128, 134, 256, 13) && (F.b(128, 134, "  LP Bar       : " + a[uc], 16711680, 0), uc = Vf(uc + Wf, 0, 3));
        a = ["SQUARE", "TRIANGLE", "SHADOW", "OFF"];
        F.b(128, 147, "  PL Symbol    : " + a[vc], 16777215, 0);
        Sf(128, 147, 256, 13) && (F.b(128, 147, "  PL Symbol    : " + a[vc], 16711680, 0), vc = Vf(vc +
            Wf, 0, 3));
        F.b(128, 160, "  Drag DeadBody: " + b[xc], 16777215, 0);
        Sf(128, 160, 256, 13) && (F.b(128, 160, "  Drag DeadBody: " + b[xc], 16711680, 0), xc = Vf(xc + Wf, 0, 1));
        uf(F, 256, 182, "Space Key: open & close", 12632256, 0);
        zf(256, 182, 256, 13) && (uf(F, 256, 182, "Space Key: open & close", 16711680, 0), 0 != Wf && (h = r))
    } else if (30 == h) {
        if (Pf(0), Ff(0), 100 > mb && mb++, b = A(255 * mb / 100), Cf(F, 256, 128, "GAME OVER", 100, 20, 10, b, 200, 0, 0, b, 16, 24), 100 == mb && Af) {
            Je();
            for (a = 0; 4 > a; a++) 0 == q[a] && (q[a] = 1);
            pe();
            h = 1
        }
    } else if (40 == h && (uf(F, 256, 128, "see you. next version.",
            13407305, 6553600), Af)) {
        Je();
        for (a = 0; 4 > a; a++) 0 == q[a] && (q[a] = 1);
        pe();
        h = 1
    }
}
ea.fff = sf;

function sf() {
    var a, b, c, d, e = "";
    if (50 == h) J.j(l) && (w.set(0, 16, J.o[0]), w.set(1, 19, J.o[1]), w.set(2, 22, J.o[2]), w.set(3, 25, J.o[3]), I.j(1), ke.index = 0, je.index = 0, le.index = 0, mb = ob = Ib = Hb = Gb = Fb = le.J = 0, h++);
    else if (51 == h) Pf(0), Ff(0), e = "", 0 == l ? e = "TOWN" : 20 == l ? e = "VILLAGE" : 47 == l ? e = "RESORT" : 70 == l ? e = "Forget Tree" : 77 == l && (e = "ISLAND"), Rf(255 - A(255 * (30 > mb ? mb : 30) / 30)), c = 255, 30 > mb ? c = A(255 * mb / 30) : 80 < mb && (c = 255 - A(255 * (mb - 80) / 30)), Cf(F, 256, 128, e, 255, 255, 255, c, 64, 64, 64, c, 16, 24), b = -1024 + A(512 * mb / 30), L(b, 112, b + 1024, 112, 8421504),
        b = 512 - A(512 * mb / 30), L(b, 141, b + 1024, 141, 8421504), mb++, 110 == mb && (mb = 0, h++);
    else if (52 == h)
        if (Pf(0), Ff(0), 0 != ob) h = 59;
        else if (Sf(364, 4, 56, 20)) Af ? h = 20 : Ve[32] && (h = 20), F.b(368, 8, "Option", 16711680, 0);
    else if (Ve[32]) h = 20;
    else if (Sf(428, 4, 80, 20)) Af && (h = 6), F.b(432, 8, "World Map", 16711680, 0);
    else if (70 == l)
        if (zf(256, 128, 40, 24) && (uf(F, 256, 128, "FORGET", 16711680, 1054740), Af && (h = 55, wb = vb = rb = 0)), zf(256, 160, 40, 24)) {
            var g = 0;
            for (a = 0; 4 > a; a++) g += ic[a] - q[a];
            uf(F, 256, 160, "INN", 16711680, 1054740);
            F.b(280, 154, "charge of " + g, 16711680,
                1054740);
            if (g <= Qb && Af) {
                Je();
                for (a = 0; 4 > a; a++) q[a] != ic[a] && je.add(w.a[a][0].x, w.a[a][0].y, 0, ic[a] - q[a], 65280), q[a] = ic[a];
                Qb -= g;
                pe()
            }
        } else zf(256, 184, 48, 24) && (uf(F, 256, 184, "BOOK", 16711680, 1054740), Af && (h = 54, wb = vb = rb = 0));
    else if (zf(400, 168, 40, 24)) {
        for (a = g = 0; 4 > a; a++) g += ic[a] - q[a];
        uf(F, 400, 168, "INN", 16711680, 13800762);
        uf(F, 400, 208, "Charge of " + g, 16777215, 3219229);
        if (g <= Qb && Af) {
            Je();
            for (a = 0; 4 > a; a++) q[a] != ic[a] && je.add(w.a[a][0].x, w.a[a][0].y, 0, ic[a] - q[a], 65280), q[a] = ic[a];
            Qb -= g;
            pe()
        }
    } else zf(40, 152, 72, 24) ?
        (0 == l ? uf(F, 40, 152, "SHOP", 16711680, 13800762) : 20 == l ? uf(F, 40, 152, " COMPO SHOP", 16711680, 13800762) : 47 == l ? uf(F, 40, 152, " JUNK SHOP", 16711680, 13800762) : 77 == l && uf(F, 40, 152, " COMPO SHOP", 16711680, 13800762), Af && (h = 53, wb = vb = rb = 0)) : zf(40, 184, 48, 24) && (uf(F, 40, 184, "BOOK", 16711680, 13800762), Af && (h = 54, wb = vb = rb = 0));
    else if (53 == h) {
        Pf(0);
        e = ob = 0;
        0 == l ? e = 0 : 20 == l ? e = 1 : 47 == l ? e = 2 : 77 == l && (e = 3);
        var k = [
            [3, 4, 5, 6, 12, 14, 15, 18],
            [7, 8, 9, 10, 11, 16, 17],
            [3, 4, 5, 6, 12, 14, 15, 18],
            [7, 8, 9, 10, 11, 16, 17]
        ];
        c = 80;
        d = 28;
        Tf = 1;
        U(c - 4, d - 4, 243, 168, 2147483648);
        Tf = 0;
        Xf(c + 0, d + 0, 236, 161, 16777215);
        Sf(c + 8, d + 4, 16 * k[e].length, 12) && (b = A((Yf - (c + 8)) / 16), Af && (rb = b, vb = V(vb, 0, A(Jc[e][rb].length / 3) - 1)), U(c + 8 + 16 * b, d + 4, 12, 12, 10027008));
        Zf = 2;
        for (a = 0; a < k[e].length; a++) $f(Qa, c + 8 + 16 * a, d + 4, 12, 12, 12 * k[e][a], 0, 12, 12, 16777215);
        Zf = 0;
        Xf(c + 8 + 16 * rb - 1, d + 4 - 1, 14, 14, 10027008);
        L(c + 0, d + 20 - 1, c + 235, d + 20 - 1, 16777215);
        Sf(c + 120, d + 24, 84, 84) && (b = A((Yf - (c + 120)) / 28), a = A((ag - (d + 24)) / 28), Af && (wb = 3 * a + b), U(c + 120 + 28 * b, d + 24 + 28 * a, 24, 24, 10027008));
        b = (3 * vb + wb) % Jc[e][rb].length;
        k = Jc[e][rb][b];
        g = 1;
        for (a = 0; a <
            ve; a++) 0 < (we[a] & xe) && g < bg[a] && (g = bg[a]);
        0 == l && g <= b && (k = 0);
        cg(c + 8, d + 24, v[k][Kc] + " " + (v[k][Lc] ? v[k][Lc] : ""), -1, 2631720, -2);
        cg(c + 8, d + 24, v[k][Kc] + " " + (v[k][Lc] ? v[k][Lc] : ""), 16777215, -1, -2);
        a = x(k, Pc);
        if (9 == a) F.b(c + 8, d + 40, "Compo Item", -1, 5263440), cg(c + 8, d + 56, v[k][hd], -1, 2631720, -2), cg(c + 8, d + 56, v[k][hd], 16777215, -1, -2), cg(c + 8, d + 68, v[k][id], -1, 2631720, -2), cg(c + 8, d + 68, v[k][id], 16777215, -1, -2);
        else {
            F.b(c + 8, d + 40, "AT " + v[k][Rc] + "-" + v[k][Sc], 16777215, 0);
            F.b(c + 8, d + 52, "AGI " + v[k][Uc] + "-" + v[k][Vc], 16777215, 0);
            F.b(c +
                8, d + 64, "RANGE " + v[k][Wc], 16777215, 0);
            var r = x(k, Yc),
                m = x(k, Zc),
                n = dg(x(k, $c), 0),
                G = x(k, cd),
                H = x(k, dd);
            F.b(c + 8, d + 80, "TYPE " + "Physical Fire Ice Thunder Poison Freeze".split(" ")[r], 16777215, 0);
            F.b(c + 8, d + 92, "AT " + G + "-" + H, 16777215, 0);
            6 == a ? F.b(c + 8, d + 104, "$$ " + n, 16777215, 0) : F.b(c + 8, d + 104, "MP " + n, 16777215, 0);
            2 == r ? F.b(c + 8, d + 116, "SLOW " + m + "%", 16777215, 0) : 4 == r ? F.b(c + 8, d + 116, "TIME " + m / 50 + "s", 16777215, 0) : 5 == r && F.b(c + 8, d + 116, "TIME " + m / 50 + "s", 16777215, 0)
        }
        for (a = 0; 9 > a; a++) r = (3 * vb + a) % Jc[e][rb].length, 0 == l && g <= r || (Zf = 2,
            $f(Sa, c + 120 + a % 3 * 28, d + 24 + 28 * A(a / 3), 24, 24, 24 * x(Jc[e][rb][r], Oc), 0, 24, 24, x(Jc[e][rb][r], Qc)), Zf = 0, v[Jc[e][rb][r]][Lc] && df.b(c + 120 + a % 3 * 28 + 19, d + 24 + 28 * A(a / 3) + 17, "" + v[Jc[e][rb][r]][Lc], 16777215, -1));
        Xf(c + 120 + wb % 3 * 28, d + 24 + 28 * A(wb / 3), 24, 24, 10027008);
        g = x(k, Mc);
        2 == e && 1 == b && (g *= 10);
        if (Sf(c + 176 - 56, d + 120 - 10, 108, 20)) {
            if (0 != k && g <= Qb && Af) {
                Je();
                a = 0;
                if (0 == e || 2 == e && 0 == b) a = Gc;
                le.add(40, 200, k, 0, a);
                Qb -= g;
                pe()
            }
            U(c + 176 - 56, d + 120 - 10, 108, 20, 10027008)
        }
        uf(F, c + 176, d + 120, "BUY $" + g + "", 16777215, 0);
        Xf(c + 176 - 56, d + 120 - 10, 108, 20, 10027008);
        k = 16777215;
        Sf(c + 216 - 12, d + 36 - 12, 24, 24) && (Af && (vb = Vf(vb - 1, 0, A(Jc[e][rb].length / 3) - 1)), k = 10027008);
        Xf(c + 216 - 12, d + 36 - 12, 24, 24, 16777215);
        U(c + 216 - 1, d + 36 - 8, 2, 2, k);
        U(c + 216 - 2, d + 36 - 6, 4, 2, k);
        U(c + 216 - 3, d + 36 - 4, 6, 2, k);
        U(c + 216 - 4, d + 36 - 2, 8, 2, k);
        U(c + 216 - 5, d + 36 + 0, 10, 2, k);
        U(c + 216 - 6, d + 36 + 2, 12, 2, k);
        U(c + 216 - 7, d + 36 + 4, 14, 2, k);
        U(c + 216 - 8, d + 36 + 6, 16, 2, k);
        k = 16777215;
        Sf(c + 216 - 12, d + 92 - 12, 24, 24) && (Af && (vb = Vf(vb + 1, 0, A(Jc[e][rb].length / 3) - 1)), k = 10027008);
        Xf(c + 216 - 12, d + 92 - 12, 24, 24, 16777215);
        U(c + 216 - 8, d + 92 - 8, 16, 2, k);
        U(c + 216 - 7, d + 92 - 6,
            14, 2, k);
        U(c + 216 - 6, d + 92 - 4, 12, 2, k);
        U(c + 216 - 5, d + 92 - 2, 10, 2, k);
        U(c + 216 - 4, d + 92 + 0, 8, 2, k);
        U(c + 216 - 3, d + 92 + 2, 6, 2, k);
        U(c + 216 - 2, d + 92 + 4, 4, 2, k);
        U(c + 216 - 1, d + 92 + 6, 2, 2, k);
        L(c + 0, d + 136 - 1, c + 235, d + 136 - 1, 16777215);
        L(c + 120, d + 136 - 1, c + 120, d + 160, 16777215);
        Sf(c + 0 + 1, d + 136, 120, 24) && 0 != s[Ec] ? (g = A(x(s[Ec], Mc) / 8), Af && (Je(), le.add(40, 200, 1, g, 0), s[Ec] = 0, Bc[Ec] = 0, Cc[Ec] = 0, pe()), U(c + 0 + 1, d + 136, 119, 24, 10027008), uf(F, c + 60, d + 148, "SELL $" + g + "", 16777215, 0)) : Sf(c + 0 + 1, d + 136, 120, 24) && 0 == s[Ec] && 0 == Jb ? (Af && (Jb = 1), U(c + 0 + 1, d + 136, 119, 24, 10027008),
            uf(F, c + 60, d + 148, "CLICK TO SELL", 16777215, 0)) : Sf(c + 0 + 1, d + 136, 120, 24) && 0 == s[Ec] && 1 == Jb ? (Af && (Jb = 0), U(c + 0 + 1, d + 136, 119, 24, 10027008), uf(F, c + 60, d + 148, "CANCEL", 16777215, 0)) : 1 == Jb ? uf(F, c + 60, d + 148, "CANCEL", 16777215, 0) : uf(F, c + 60, d + 148, "DRAG TO SELL", 16777215, 0);
        Sf(c + 120 + 1, d + 136, 114, 24) && (Af && (Jb = 0, h = 52), U(c + 120 + 1, d + 136, 114, 24, 10027008));
        uf(F, c + 176, d + 148, "EXIT", 16777215, 0);
        Ff(1)
    } else if (54 == h) {
        Pf(0);
        ob = 0;
        k = 10;
        c = 80;
        d = 28;
        Tf = 1;
        70 == l ? U(c - 4, d - 4, 328, 168, 3422552064) : U(c - 4, d - 4, 328, 168, 2147483648);
        Tf = 0;
        Xf(c + 0, d + 0, 321,
            161, 16777215);
        L(c + 160, d + 0, c + 160, d + 160, 16777215);
        e = "WORLD MAP " + (100 > rb ? " " : "");
        e += "" + A(rb / k + 1) + "/" + A((eg.length - 1) / k + 1);
        F.b(c + 20, d + 4, e, -1, 32768);
        Sf(c + 8, d + 16, 144, 12 * k) && (a = A((ag - (d + 16)) / 12), Af && (vb = a), U(c + 8, d + 16 + 12 * a, 144, 12, 10027008));
        for (a = 0; a < k; a++) e = eg[rb + a], 0 != e && (0 < (we[e] & xe) ? F.b(c + 8, d + 16 + 12 * a, Qf[e], 16777215, 0) : F.b(c + 8, d + 16 + 12 * a, "???", 16777215, 0));
        e = eg[rb + vb];
        0 != e && (0 < (we[e] & xe) ? F.b(c + 8, d + 16 + 12 * vb, Qf[e], 16711680, 0) : F.b(c + 8, d + 16 + 12 * vb, "???", 16711680, 0));
        L(c + 0, d + 140, c + 160, d + 140, 16777215);
        Sf(c + 8,
            d + 144 - 2, 48, 17) && (Af && (rb = Vf(A(rb / k) - 1, 0, A((eg.length - 1) / k)) * k), U(c + 8, d + 144 - 2, 48, 17, 10027008));
        F.b(c + 16, d + 144 + 1, "Prev", 16777215, 0);
        Sf(c + 56, d + 144 - 2, 48, 17) && (Af && (rb = Vf(A(rb / k) + 1, 0, A((eg.length - 1) / k)) * k), U(c + 56, d + 144 - 2, 48, 17, 10027008));
        F.b(c + 64, d + 144 + 1, "Next", 16777215, 0);
        Sf(c + 104, d + 144 - 2, 48, 17) && (Af && (h = 52), U(c + 104, d + 144 - 2, 48, 17, 10027008));
        F.b(c + 112, d + 144 + 1, "EXIT", 16777215, 0);
        if (0 != e)
            if (0 < (we[e] & fg)) {
                k = Le[e + 1] - Le[e];
                for (a = k - 1; 0 <= a; a--) 1 == C[Le[e] + a][Ne] && k--;
                g = c + 80 - 16 * k;
                Sf(g + 160, d + 0, 32 * k, 52) && (b = A((Yf -
                    (g + 160)) / 32), Af && (wb = b), U(g + 160 + 32 * b + 2, d + 0 + 2, 28, 52, 10027008));
                U(g + 160 + 32 * wb + 2, d + 48 + 2, 28, 4, 10027008);
                wb = V(wb, 0, k - 1);
                for (a = 0; a < k; a++) gg(Oa[Ie[e][0][0]], g + 164 + 32 * a, d + 44, 24, 8, 0, 0, 24, 8);
                k = Le[e + 1] - Le[e];
                for (b = a = 0; a < k; a++, b++) I.M(Le[e] + a, g + 164 + 12 + 32 * b, d + 44 - 1, 0), 1 == C[Le[e] + a][Ne] && a++;
                e = Le[e] + wb;
                F.b(c + 164, d + 56, "Lv   " + C[e][Me], 16777215, 0);
                F.b(c + 164, d + 68, "LP   " + C[e][hg], 16777215, 0);
                F.b(c + 164, d + 80, "GOLD " + C[e][ig], 16777215, 0);
                F.b(c + 164, d + 92, "EXP  " + C[e][jg], 16777215, 0);
                F.b(c + 164, d + 108, "Drop Item", 16777215,
                    0);
                for (b = a = 0; 6 > a; a += 2) k = C[e][kg + a], 0 != k && (Zf = 2, $f(Qa, c + 164, d + 4 * (30 + 3 * b), 12, 12, 12 * x(k, Nc), 0, 12, 12, x(k, Qc)), Zf = 0, cg(c + 164, d + 4 * (30 + 3 * b), "  " + v[k][Kc] + " " + (v[k][Lc] ? v[k][Lc] : ""), 16777215, 0, -1), b++);
                F.b(c + 256, d + 56, "strong", 16777215, 0);
                0 < C[e][lg] && df.b(c + 256, d + 68 + 2, "Ph          ", 8421504, 0);
                0 < C[e][mg] && df.b(c + 256, d + 68 + 2, "  Fi        ", 16711680, 0);
                0 < C[e][ng] && df.b(c + 256, d + 68 + 2, "    Ic      ", 2105599, 0);
                0 < C[e][og] && df.b(c + 256, d + 68 + 2, "      Th    ", 16777024, 0);
                0 < C[e][pg] && df.b(c + 256, d + 68 + 2, "        Po  ",
                    65280, 0);
                0 < C[e][qg] && df.b(c + 256, d + 68 + 2, "          Fr", 12632319, 0);
                F.b(c + 256, d + 80, "weak", 16777215, 0);
                0 > C[e][lg] && df.b(c + 256, d + 92 + 2, "Ph          ", 8421504, 0);
                0 > C[e][mg] && df.b(c + 256, d + 92 + 2, "  Fi        ", 16711680, 0);
                0 > C[e][ng] && df.b(c + 256, d + 92 + 2, "    Ic      ", 2105599, 0);
                0 > C[e][og] && df.b(c + 256, d + 92 + 2, "      Th    ", 16777024, 0);
                0 > C[e][pg] && df.b(c + 256, d + 92 + 2, "        Po  ", 65280, 0);
                0 > C[e][qg] && df.b(c + 256, d + 92 + 2, "          Fr", 12632319, 0)
            } else 0 < (we[e] & xe) ? (uf(F, c + 240, d + 40, "Information fee", 16777215, 0),
                g = 1E3 * (rb + vb + 1), zf(c + 240, d + 80, 160, 160) && (g <= Qb && Af && (Je(), we[e] |= fg, Qb -= g, pe()), Df(c + 240, d + 80, 120, 32, 10027008)), uf(F, c + 240, d + 80, "" + g + "$ BUY", 16777215, 0)) : (uf(F, c + 240, d + 40, "?????", 16777215, 0), uf(F, c + 240, d + 80, "???", 16777215, 0));
        Ff(1)
    } else if (55 == h) {
        Pf(0);
        ob = 0;
        c = 80;
        d = 28;
        Tf = 1;
        U(c - 4, d - 4, 328, 168, 3422552064);
        Tf = 0;
        Xf(c + 0, d + 0, 321, 161, 16777215);
        L(c + 160, d + 0, c + 160, d + 160, 16777215);
        c = 100;
        d = 60;
        for (a = 0; 4 > a; a++) Sf(c + 32 * a - 4, d + 0 - 4, 32, 32) ? (U(c + 32 * a, d + 0, 24, 24, 10027008), Af && (rb = a)) : U(c + 32 * a, d + 0, 24, 24, 0), $f(Pa, c + 32 * a, d,
            24, 24, 24 * x(s[t + a], Pc), 0, 24, 24, 16777215), Uf(c + 32 * a, d, 24 * x(s[t + a], Pc), x(s[t + a], Qc));
        Xf(c + 32 * rb - 1, d - 1, 26, 26, 16711680);
        F.b(c, d - 16, Hc[x(s[t + rb], Pc)], 16777215, 0);
        c = 100;
        d = 74;
        F.b(c, d + 16, "LP  " + ec[rb], 16777215, 0);
        F.b(c, d + 28, "STR " + fc[rb], 16777215, 0);
        F.b(c, d + 40, "DEX " + gc[rb], 16777215, 0);
        F.b(c, d + 52, "MAG " + hc[rb], 16777215, 0);
        F.b(c, d + 68, "LV  " + Kb[0], 16777215, 0);
        F.b(c, d + 68, "        SP " + Nb[rb], 16777215, 0);
        c = 80;
        d = 28;
        L(c + 0, d + 140, c + 160, d + 140, 16777215);
        Sf(c + 56, d + 144 - 2, 48, 17) && (Af && (h = 52), U(c + 56, d + 144 - 2, 48, 17, 10027008));
        F.b(c + 64, d + 144 + 1, "EXIT", 16777215, 0);
        g = 1E3 * (ec[rb] + fc[rb] + gc[rb] + hc[rb]);
        zf(c + 240, d + 80, 120, 32) && 0 < g && (g <= Qb && Af && (Je(), Nb[rb] += ec[rb] + fc[rb] + gc[rb] + hc[rb], ec[rb] = 0, fc[rb] = 0, gc[rb] = 0, hc[rb] = 0, Qb -= g, pe()), Df(c + 240, d + 80, 120, 32, 10027008));
        uf(F, c + 240, d + 72, "Forget", 16777215, 0);
        uf(F, c + 240, d + 88, "" + g + "$ BUY", 16777215, 0);
        Ff(1)
    } else 59 == h && (Pf(0), Ff(0), Rf(A(255 * mb / 30)), mb++, 30 == mb && (mb = nb = ob = 0, h = 6, Je(), we[l] |= xe, 0 < ze[l][3] && (we[ze[l][3]] |= ye), 0 < ze[l][4] && (we[ze[l][4]] |= ye), pe(), de = oe(0), be = 1))
}
ea.fff = tf;

function tf() {
    var a, b, c;
    if (70 == h) l = 0, nb = 1, J.j(l) && (w.set(0, 26, J.o[0]), w.set(1, 30, J.o[1]), w.set(2, 34, J.o[2]), w.set(3, 38, J.o[3]), I.j(1), ke.index = 0, je.index = 0, le.index = 0, mb = ob = Ib = Hb = Gb = Fb = le.J = 0, h++);
    else if (71 == h || 72 == h || 73 == h || 74 == h)
        if (J.b(), w.move(), le.move(), je.move(), ke.move(), le.b(), w.b(), ke.b(), je.b(), Ff(0), 71 == h) 0 == sa ? Ka ? rg(xa, "\u30b3\u30e1\u30f3\u30c8\u3092\u8a18\u5165\u3057\u3066\uff2f\uff2b\u3092\u62bc\u3057\u3066\u4e0b\u3055\u3044") : rg(xa, "Enter comments and click OK.") : Ka ? 100 == sa ? rg(xa,
                "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f") : 1 == sa ? rg(xa, "\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u304c\u5fc5\u8981\u3067\u3059") : 2 == sa ? rg(xa, "1\u65e5\u306b1\u56de\u306e\u307f\u3067\u3059") : 3 == sa ? rg(xa, "10\u4ef6\u4ee5\u4e0a\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51fa\u6765\u307e\u305b\u3093") : rg(xa, "\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u51fa\u6765\u307e\u305b\u3093") : 100 == sa ? rg(xa, "The upload has been completed.") : 1 == sa ? rg(xa, "User registration is required.") : 2 == sa ?
            rg(xa, "1 time in 1 day only.") : 3 == sa ? rg(xa, "Cannot upload more than 10 posts.") : rg(xa, "Cannot upload."), h++;
        else if (72 == h) {
        if (Df(256, 100, 300, 100, 8421504), uf(F, 256, 70, "UPLOAD", 16752800, 0), K(xa, 256, 90, xa.u, 16, 0, 0, xa.u, 16, 0), 0 == sa) {
            b = sg;
            U(136, 108, 240, 16, 16777215);
            Xf(135, 107, 242, 18, 0);
            if (Sf(136, 108, 240, 16) && (Xf(135, 107, 242, 18, 16711680), tg)) {
                c = null;
                try {
                    c = prompt("UPLOAD", b)
                } catch (d) {}
                null != c && (b = c)
            }
            rg(ug, b);
            $f(ug, 137, 108, 238, 16, 0, 0, 238, 16, 0);
            sg = b;
            b = zf(256, 140, 16, 12);
            uf(F, 256, 140, "OK", b ? 16711680 : 16777215,
                0);
            if (b && tg)
                if (2 > sg.length) Ka ? rg(xa, "\u30b3\u30e1\u30f3\u30c8\u3092\uff12\u6587\u5b57\u4ee5\u4e0a\u8a18\u5165\u3057\u3066\u4e0b\u3055\u3044") : rg(xa, "The comment must be longer than 2 characters.");
                else {
                    b = sg;
                    c = 0;
                    a = b.length;
                    for (var e = 0; e < a; e++) {
                        var g = b.charCodeAt(e);
                        c = 0 <= g && 128 >= g || 65377 <= g && 65439 >= g ? c + 1 : c + 2
                    }
                    20 < c ? Ka ? rg(xa, "\u30b3\u30e1\u30f3\u30c8\u3092\uff11\uff10\u6587\u5b57\u4ee5\u4e0b\u3067\u8a18\u5165\u3057\u3066\u4e0b\u3055\u3044") : rg(xa, "The comment must be shorter than 10 characters.") : h++
                }
        }
    } else 73 ==
        h ? (b = encodeURIComponent(sg), 0 == b.length ? (Ka ? rg(xa, "\u30a8\u30e9\u30fc") : rg(xa, "Error"), h = 72) : 0 == s[t + 0] || 0 == s[t + 1] || 0 == s[t + 2] || 0 == s[t + 3] ? (Ka ? rg(xa, "\u6b66\u5668\u3092\u88c5\u5099\u3057\u3066\u4e0b\u3055\u3044") : rg(xa, "Equip a weapon."), h = 72) : (Je(), de = oe(1), c = vg(47, 115, 99, 111, 114, 101, 47, 114, 97, 110, 103, 101, 114, 95, 101, 110, 116, 114, 121, 46, 112, 104, 112, 63, 97, 61), c += ka, c += wg + (Ka ? "0" : "1"), c += xg + b, c += yg + de, Qe(c), zg(c), h++)) : 74 == h && 0 != Ag && (sa = "ok" == Bg[0] ? 100 : "err1" == Bg[0] ? 1 : "err2" == Bg[0] ? 2 : "err3" == Bg[0] ? 3 : "err4" ==
            Bg[0] ? 4 : "err5" == Bg[0] ? 5 : 6, h = 71);
    else if (60 == h) {
        if (l = 0, nb = 1, J.j(l)) {
            w.set(0, 10, J.o[0]);
            w.set(1, 11, J.o[1]);
            w.set(2, 12, J.o[2]);
            w.set(3, 13, J.o[3]);
            w.set(4, 53, J.o[0]);
            w.set(5, 52, J.o[1]);
            w.set(6, 51, J.o[2]);
            w.set(7, 50, J.o[3]);
            yf();
            Je();
            for (a = 0; 8 > a; a++) q[a] = ic[a];
            for (a = 0; 8 > a; a++) dc[a] = 0;
            Qb = 9999999;
            pe();
            I.j(1);
            ke.index = 0;
            je.index = 0;
            le.index = 0;
            mb = ob = Ib = Hb = Gb = Fb = le.J = 0;
            h++
        }
    } else if (61 == h || 62 == h || 63 == h || 64 == h)
        for (J.b(), 61 == h && (w.fb = 1), w.move(), je.move(), ke.move(), w.fb = 0, w.b(), ke.b(), je.b(), yf(), 61 == h ? (mb = V(mb +
                1, 0, 30), a = A(255 * mb / 30), L(0, 110, A(512 * mb / 30), 110, 8421504), L(512 - A(512 * mb / 30), 143, 512, 143, 8421504), zf(256, 127, 512, 32) && 30 == mb ? (Af && (h++, mb = 0), Df(256, 127, 512, 32, 8388608), Cf(F, 256, 128, "FIGHT", 255, 255, 255, 255, 0, 0, 0, 255, 16, 24)) : Cf(F, 256, 128, "READY", 255, 255, 255, a, 0, 0, 0, a, 16, 24), Tf = 1, b = 110, c = 120, rg(xa, ma), K(xa, b, c + 0 - 2, xa.u, 16, 0, 0, xa.u, 16, a << 24 | 16777215), rg(za, na), K(za, b, c + 16 - 2, za.u, 16, 0, 0, za.u, 16, a << 24 | 16777215), b = 402, rg(Aa, pa), K(Aa, b, c + 0 - 2, Aa.u, 16, 0, 0, Aa.u, 16, a << 24 | 16777215), rg(Ba, qa), K(Ba, b, c + 16 - 2, Ba.u,
                16, 0, 0, Ba.u, 16, a << 24 | 16777215), Tf = 0) : 62 == h ? 0 == q[0] + q[1] + q[2] + q[3] ? (ra = 2, h++) : 0 == q[4] + q[5] + q[6] + q[7] && (ra = 1, h++) : 63 == h ? (0 == sa && (sa = 1, c = vg(47, 115, 99, 111, 114, 101, 47, 114, 97, 110, 103, 101, 114, 95, 118, 115, 46, 112, 104, 112, 63, 97, 61), c += ka, c += wg + (Ka ? "0" : "1"), c += xg + la, c += yg + oa, 0 != s[t + 0] && 0 != s[t + 1] && 0 != s[t + 2] && 0 != s[t + 3] && (c += Cg + Ae(ra)), Qe(c), zg(c)), h++) : 64 == h && (mb = V(mb + 1, 0, 50), a = A(255 * mb / 50), zf(256, 128, 96, 32) && 50 == mb && (Af && (h = 60), Df(256, 128, 96, 32, 8388608)), Ef(256, 128, 96, 32, 0 | A(a / 2) << 16), Cf(F, 256, 129, "RETRY", 255,
                255, 255, a, 0, 0, 0, a, 16, 24), b = 60, c = 72, Tf = 1, $f(xa, b, c + 0 - 2, xa.u, 16, 0, 0, xa.u, 16, a << 24 | 16777215), Tf = 0, Cf(F, b + 60, c + 40, 1 == ra ? "WIN" : "LOSE", 255, 255, 255, a, 1 == ra ? 255 : 0, 0, 1 == ra ? 0 : 255, a, 32, 48), 0 != Ag && ("ok" == Bg[0] ? (F.M(b, c + 64, "" + Bg[1] + " win " + Bg[2] + " lose", 255, 255, 255, a, 0, 0, 0, a, 8, 12), F.M(b, c + 80, "Winning per " + Bg[3] + "%", 255, 255, 255, a, 0, 0, 0, a, 8, 12)) : F.M(b, c + 64, " RANKING ERROR", 255, 255, 255, a, 0, 0, 0, a, 8, 12)), b = 332, Tf = 1, $f(Aa, b, c + 0 - 2, Aa.u, 16, 0, 0, Aa.u, 16, a << 24 | 16777215), Tf = 0, Cf(F, b + 60, c + 40, 2 == ra ? "WIN" : "LOSE", 255, 255, 255,
                a, 2 == ra ? 255 : 0, 0, 2 == ra ? 0 : 255, a, 32, 48), 0 != Ag && ("ok" == Bg[0] ? (F.M(b, c + 64, "" + Bg[4] + " win " + Bg[5] + " lose", 255, 255, 255, a, 0, 0, 0, a, 8, 12), F.M(b, c + 80, "Winning per " + Bg[6] + "%", 255, 255, 255, a, 0, 0, 0, a, 8, 12)) : F.M(b, c + 64, " RANKING ERROR", 255, 255, 255, a, 0, 0, 0, a, 8, 12))), U(0, 257, 512, 126, [13407305, 9480368, 7241784, 10993609, 11302740, 24586, 7297069, 7297069, 10053120][Ie[l][nb][0]]), df.M(10, 374, Dg, 0, 0, 0, 0, 0, 0, 0, 128, 5, 7), Cf(F, 256, 328, "VS", 255, 255, 255, 255, 0, 0, 0, 255, 16, 24), b = 40, c = 268, $f(xa, b, c + 0 - 2, xa.u, 16, 0, 0, xa.u, 16, 0), F.b(b,
                c + 16, "LV " + Kb[0], 16777215, 0), F.b(b, c + 16, "        FP " + Lb[0], 16777215, 0), rg(Fa, "\u300c " + na + " \u300d"), K(Fa, b + 60, c + 88, Fa.u, 16, 0, 0, Fa.u, 16, 0), b = 206, Cf(F, b, c + 20 + 2, "Rank", 0, 0, 0, 0, 0, 0, 0, 128, 8, 12), Cf(F, b, c + 60, "" + Ic[Mb[0]], 0, 0, 0, 0, 0, 0, 0, 80, 32, 48), b = 352, $f(Aa, b, c + 0 - 2, Aa.u, 16, 0, 0, Aa.u, 16, 0), F.b(b, c + 16, "LV " + Kb[1], 16777215, 0), F.b(b, c + 16, "        FP " + Lb[1], 16777215, 0), rg(Ga, "\u300c " + qa + " \u300d"), K(Ga, b + 60, c + 88, Ga.u, 16, 0, 0, Ga.u, 16, 0), b = 306, Cf(F, b, c + 20 + 2, "Rank", 0, 0, 0, 0, 0, 0, 0, 128, 8, 12), Cf(F, b, c + 60, "" + Ic[Mb[1]],
                0, 0, 0, 0, 0, 0, 0, 80, 32, 48), b = 40, c = 316, a = 0; 8 > a; a++) 4 <= a && (b = 224), U(b + 32 * a, c - 12, A(24 * q[a] / ic[a]), 4, 8388608), e = dg(x(s[t + a], $c), 1), g = x(s[t + a], Pc), 4 != g && 5 != g && 6 != g && U(b + 32 * a, c - 6, A(23 * dc[a] / e) + 1, 2, 128), U(b + 32 * a, c + 0, 24, 24, 0), $f(Pa, b + 32 * a, c, 24, 24, 24 * x(s[t + a], Pc), 0, 24, 24, 16777215), Uf(b + 32 * a, c, 24 * x(s[t + a], Pc), x(s[t + a], Qc))
}

function Bf() {
    U(0, 0, 0, 0, 0);
    uf(F, 0, 0, Re, 0, 0000000000)

}

ea.fff = Pf;

function Pf(a) {
    var b;
    J.b();
    if (0 == l && 1 == nb || 20 == l && 1 == nb || 47 == l && 1 == nb || 77 == l && 1 == nb) K(db, 400, 183, 117, 84, 0, 0, 78, 56, 16777215), K(db, 40, 170, 156, 112, 0, 0, 78, 56, 16777215), uf(F, 400, 168, "INN", 16777215, 13800762), 0 == l ? uf(F, 40, 152, "SHOP", 16777215, 13800762) : 20 == l ? uf(F, 40, 152, " COMPO SHOP", 16777215, 13800762) : 47 == l ? uf(F, 40, 152, " JUNK SHOP", 16777215, 13800762) : 77 == l && uf(F, 40, 152, " COMPO SHOP", 16777215, 13800762), uf(F, 40, 184, "BOOK", 16777215, 13800762);
    70 == l && 1 == nb && ($f(gb, 0, -288, 512, 512, 0, 0, 64, 64, 16777215), 52 == h && (uf(F,
        256, 128, "FORGET", 16777215, 1054740), uf(F, 256, 160, "INN", 16777215, 1054740), uf(F, 256, 184, "BOOK", 16777215, 1054740)));
    0 == a && (w.move(), I.move(), le.move(), je.move(), ke.move());
    b = J;
    if (55 != b.w && nb != Ie[b.w].length - 1 || 0 == I.index) {
        var c;
        c = 7 == Ie[l][nb][1] ? 8 * b.o[63] - 16 : 8 * b.I[63] - 16;
        gg(Va, 480, c, 32, 24, 0, 0, 32, 24);
        nb == Ie[b.w].length - 1 ? uf(df, 496, c + 8, "MAP", 0, -1) : nb == Ie[b.w].length - 2 ? uf(df, 496, c + 8, "BOSS", 0, -1) : uf(df, 496, c + 8, "NEXT", 0, -1)
    }
    I.b();
    le.b();
    w.b();
    ke.b();
    var d = J,
        e, g, k;
    k = D;
    switch (d.w) {
        case 15:
        case 16:
        case 30:
        case 31:
        case 32:
        case 33:
        case 66:
        case 67:
        case 68:
        case 69:
            Tf =
                1;
            Zf = 3;
            D = Ma.f;
            b = M(1.7, 3.69);
            b *= b * b * b;
            K(Wa, M(0, 512), 256 - b, 256, 32, 96, 0, 16, 16, 150994943);
            e = 256 * fa;
            if (3 > B(100))
                for (b = 64 * fa; b < e; b++) D[b] = 250 * D[b] >> 8;
            D = k;
            for (b = 64 * fa; b < e; b++) d = Ma.f[b] & 255, c = D[b] >> 16 & 255, k = ((255 - c) * d >> 8) + c, c = D[b] >> 8 & 255, g = ((255 - c) * d >> 8) + c, c = D[b] & 255, c = ((255 - c) * d >> 8) + c, D[b] = k << 16 | g << 8 | c;
            Tf = Zf = 0;
            break;
        case 17:
        case 18:
        case 19:
        case 48:
        case 49:
        case 50:
        case 83:
        case 84:
            D = Ma.f;
            e = 256 * fa;
            for (b = 0; b < e; b++) D[b] = 255;
            Tf = Zf = 3;
            for (b = 0; 4 > b; b++) K(Wa, w.a[b][0].x, w.a[b][0].y, 80, 80, 33, 1, 14, 14, 3238002687);
            for (b =
                0; b < ke.index; b++) 1 != ke.F[b] && K(Wa, ke.a[b].x, ke.a[b].y, 32, 32, 33, 1, 14, 14, 2164260863);
            for (b = 0; 4 > b; b++)
                if (8 == w.step[b])
                    for (c = 0; 6 > c; c++) 0 != w.O[b][c] && K(Wa, w.a[b][15 + c].x, w.a[b][15 + c].y, 32, 32, 33, 1, 14, 14, 2164260863);
            for (b = 0; b < le.index; b++) K(Wa, le.a[b].x, le.a[b].y - 6, 32, 32, 33, 1, 14, 14, 4294967295);
            K(Wa, Yf, ag, 80, 80, 33, 1, 14, 14, 3238002687);
            D = k;
            Tf = 1;
            for (b = 0; b < e; b++) d = Ma.f[b], 255 == d ? D[b] = 251658240 : (c = D[b] >> 16 & 255, k = (-c * d >> 8) + c, c = D[b] >> 8 & 255, g = (-c * d >> 8) + c, c = D[b] & 255, c = (-c * d >> 8) + c, D[b] = k << 16 | g << 8 | c);
            Tf = Zf = 0;
            break;
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 40:
        case 41:
        case 43:
            b = 1 * Eg & 511;
            for (g = 0; 256 > g; g++) {
                c = 512 * g;
                k = ~~(4 * Te[b][1] + 0.5);
                for (e = 0; 512 > e; e++) Ma.f[c + e] = D[c + V(e + k, 0, 511)];
                b = b + 6 & 511
            }
            e = 256 * fa;
            for (c = 0; c < e; c++) D[c] = Ma.f[c];
            break;
        case 51:
        case 52:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
            e = 1;
            57 == d.w ? e = 2 : 58 == d.w ? e = 2 : 59 == d.w ? e = 2 : 60 == d.w ? e = 3 : 61 == d.w && (e = 3);
            for (b = 0; b < e; b++) Ma.f[A(B(24576))] = 1;
            for (b = 224 * fa - 1; 0 <= b; b--) 1 == Ma.f[b] && ((g = J.e[b >> 12][(b & 511) >> 3], -1 == g || 0 == g && 3 > (b & 7) && 3 > (b >> 9 & 7) || 2 == g && 4 < (b & 7) &&
                3 > (b >> 9 & 7)) ? !(50 > B(100)) && (c = 57 == d.w || 58 == d.w || 61 == d.w ? b + fa + A(B(4)) - 2 : b + fa + A(B(3)) - 1, 1 != Ma.f[c] && (g = J.e[c >> 12][(c & 511) >> 3], -1 == g || 0 == g && 3 > (c & 7) && 3 > (c >> 9 & 7) || 2 == g && 4 < (c & 7) && 3 > (c >> 9 & 7))) && (Ma.f[c] = Ma.f[b], Ma.f[b] = 0) : Ma.f[b] = 0);
            D = Ma.f;
            for (b = 0; 4 > b; b++) 0 != q[b] && (Df(w.a[b][0].x, w.a[b][0].y, 3, 3, 0), Df(w.a[b][9].x, w.a[b][9].y, 1, 1, 0), Df(w.a[b][10].x, w.a[b][10].y, 1, 1, 0));
            for (b = 0; b < ke.index; b++) 1 == ke.U[b] && Df(ke.a[b].x, ke.a[b].y, 3, 3, 0);
            D = k;
            for (b = 224 * fa - 1; 0 <= b; b--) 1 == Ma.f[b] && (D[b] = 15266040)
    }
    je.b();
    Tf = 1;
    U(4, 4,
        8 * (Qf[l].length + 6) + 8, 20, 2151694400);
    Tf = 0;
    0 == l && 1 == nb || 20 == l && 1 == nb || 47 == l && 1 == nb || 70 == l && 1 == nb || 77 == l && 1 == nb ? F.b(8, 8, Qf[l], 16777215, 0) : nb + 1 == Ie[l].length ? F.b(8, 8, Qf[l] + ": BOSS", 16777215, 0) : F.b(8, 8, Qf[l] + ": " + (nb + 1), 16777215, 0);
    Tf = 1;
    U(364, 4, 56, 20, 2151694400);
    Tf = 0;
    F.b(368, 8, "Option", 16777215, 0);
    Tf = 1;
    U(428, 4, 80, 20, 2151694400);
    Tf = 0;
    F.b(432, 8, "World Map", 16777215, 0);
    if (0 < Hb && (0 == a && Hb--, U(196, 10, 120, 12, 3158064), U(196, 10, A(120 * Fb / Gb), 12, 6291456), 0 < (we[l] & fg))) {
        uf(df, 256, 16, "" + Fb + "/" + Gb, 16777215, 0);
        I.M(Ib,
            206, 33, 1);
        df.b(216, 25, "DROP", 16777215, 0);
        for (b = a = 0; 6 > a; a += 2) c = C[Ib][kg + a], 0 != c && (Zf = 2, $f(Qa, 236 + 12 * b, 23, 12, 12, 12 * x(c, Nc), 0, 12, 12, x(c, Qc)), Zf = 0, b++);
        a = Fg(I, Ib, 1);
        df.b(276, 25, "EXP " + a, 16777215, 0)
    }
}
ea.fff = yf;

function yf() {
    var a, b;
    Je();
    Lb[0] = Kb[0];
    Lb[1] = Kb[1];
    for (a = 0; 4 > a; a++) Lb[0] += 2 * x(s[t + a], Lc) + x(Bc[t + a], Lc) + x(Cc[t + a], Lc);
    for (a = 4; 8 > a; a++) Lb[1] += 2 * x(s[t + a], Lc) + x(Bc[t + a], Lc) + x(Cc[t + a], Lc);
    Mb[0] = 9 > A((Lb[0] - 1) / 20) ? A((Lb[0] - 1) / 20) : 9;
    Mb[1] = 9 > A((Lb[1] - 1) / 20) ? A((Lb[1] - 1) / 20) : 9;
    var c = 1 != f ? 4 : 8;
    for (a = 0; a < c; a++) {
        jc[a] = 0 + fc[a];
        kc[a] = 0 + gc[a];
        lc[a] = 0 + hc[a];
        y(t + a, kd) && (jc[a] += z(t + a, u));
        y(t + a, ld) && (kc[a] += z(t + a, u));
        y(t + a, md) && (lc[a] += z(t + a, u));
        y(t + a, nd) && (jc[a] += z(t + a, u), kc[a] += z(t + a, u), lc[a] += z(t + a, u));
        b = x(s[t + a], Rc);
        var d = x(s[t + a], Sc),
            e = x(s[t + a], Uc),
            g = x(s[t + a], Vc),
            k = x(s[t + a], Wc);
        1 == cc[a] ? (mc[a] = b + A(jc[a] / 2), nc[a] = d + A(jc[a] / 2), oc[a] = e < dg(e - kc[a], 5) ? e : dg(e - kc[a], 5), pc[a] = g < dg(g - kc[a], 10) ? g : dg(g - kc[a], 10), qc[a] = k, ic[a] = 50 + 10 * ec[a] + 4 * jc[a] + 3 * kc[a] + 2 * lc[a]) : 2 == cc[a] ? (nc[a] = d + jc[a], mc[a] = b + kc[a] < nc[a] ? b + kc[a] : nc[a], oc[a] = e, pc[a] = g, qc[a] = k, y(t + a, Fd) && (qc[a] += z(t + a, u)), y(t + a, Zd) && (qc[a] += z(t + a, gd)), ic[a] = 50 + 10 * ec[a] + 4 * jc[a] + 4 * kc[a] + 2 * lc[a]) : 3 == cc[a] ? (mc[a] = b + A(kc[a] / 4), nc[a] = d + A(kc[a] / 3), oc[a] = e, pc[a] = g, qc[a] = k + 2 * jc[a],
            y(t + a, Gd) && (qc[a] += z(t + a, u)), ic[a] = 50 + 8 * ec[a] + 2 * jc[a] + 3 * kc[a] + 2 * lc[a]) : 4 == cc[a] ? (mc[a] = b + A(lc[a] / 4), nc[a] = d + A(lc[a] / 3), oc[a] = dg(e - kc[a], 50), pc[a] = dg(g - kc[a], 60), qc[a] = k + 2 * jc[a], y(t + a, Gd) && (qc[a] += z(t + a, u)), ic[a] = 50 + 8 * ec[a] + 2 * jc[a] + 2 * kc[a] + 2 * lc[a]) : 5 == cc[a] ? (mc[a] = b, nc[a] = d, oc[a] = e, pc[a] = g, qc[a] = k + 2 * lc[a], y(t + a, Gd) && (qc[a] += z(t + a, u)), ic[a] = 50 + 8 * ec[a] + 2 * jc[a] + 2 * kc[a] + 2 * lc[a]) : 6 == cc[a] ? (mc[a] = b + A(b * jc[a] / 50), nc[a] = d + A(d * jc[a] / 50), oc[a] = dg(A(50 * e / (kc[a] + 50)), 5), pc[a] = dg(A(50 * g / (kc[a] + 50)), 10), qc[a] = k,
            y(t + a, Gd) && (qc[a] += z(t + a, u)), ic[a] = 50 + 8 * ec[a] + 2 * jc[a] + 2 * kc[a] + 2 * lc[a]) : 7 == cc[a] ? (mc[a] = b + A(jc[a] / 2), nc[a] = d + A(jc[a] / 2), oc[a] = e, pc[a] = g, qc[a] = k, ic[a] = 50 + 10 * ec[a] + 3 * jc[a] + 3 * kc[a] + 2 * lc[a]) : 8 == cc[a] && (mc[a] = b + A(jc[a] / 4), nc[a] = d + A(jc[a] / 3), oc[a] = e, pc[a] = g, qc[a] = k, y(t + a, Gd) && (qc[a] += z(t + a, u)), ic[a] = 50 + 10 * ec[a] + 4 * jc[a] + 2 * kc[a] + 2 * lc[a]);
        y(t + a, jd) && (ic[a] += z(t + a, u));
        y(t + a, Nd) && (ic[a] += A(z(t + a, u) * ic[a] / 100));
        y(t + a, ae) && (ic[a] += z(t + a, gd));
        1 == x(s[t + a], Pc) || 2 == x(s[t + a], Pc) || 3 == x(s[t + a], Pc) || 7 == x(s[t + a], Pc) || 8 ==
            x(s[t + a], Pc) ? (y(t + a, od) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, pd) && (mc[a] += A(z(t + a, u) * mc[a] / 100), nc[a] += A(z(t + a, u) * nc[a] / 100)), y(t + a, Zd) && (mc[a] += A(z(t + a, u) * mc[a] / 100), nc[a] += A(z(t + a, u) * nc[a] / 100))) : 4 == x(s[t + a], Pc) || 5 == x(s[t + a], Pc) ? (y(t + a, wd) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, yd) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, Ad) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, Bd) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd))) : 6 == x(s[t + a], Pc) && (y(t + a, od) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, pd) && (mc[a] +=
                A(z(t + a, u) * mc[a] / 100), nc[a] += A(z(t + a, u) * nc[a] / 100)), 0 == x(s[t + a], ad) && (y(t + a, wd) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, yd) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, Ad) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd)), y(t + a, Bd) && (mc[a] += z(t + a, u), nc[a] += z(t + a, gd))));
        y(t + a, Ed) && (b = z(t + a, u), oc[a] -= A(oc[a] * b / 100), pc[a] -= A(pc[a] * b / 100));
        mc[a] += A(mc[a] * yc[a] / 100);
        nc[a] += A(nc[a] * yc[a] / 100);
        1 == f && (ic[a] *= [1, 5, 5, 5, 5, 3, 4, 5, 5][cc[a]], ic[a] *= Mb[1] + 1);
        q[a] = V(q[a], 0, ic[a])
    }
    for (a = 0; a < c; a++) yc[a] = 0, zc[a] = 0, Ac[a] = 0;
    for (a = 0; a <
        c; a++)
        if (5 == cc[a] && 5 == x(s[t + a], Pc) && 0 != q[a])
            for (d = A(A(w.a[a][9].x + w.a[a][10].x) / 2), e = A(A(w.a[a][9].y + w.a[a][10].y) / 2), b = a >> 2 << 2; b < (a >> 2 << 2) + 4; b++) 0 != q[b] && (g = A(A(w.a[b][9].y + w.a[b][10].y) / 2), Gg(d - A(A(w.a[b][9].x + w.a[b][10].x) / 2)) < qc[a] && Gg(e - g) < qc[a] && (yc[b] += jc[a], zc[b] += kc[a], Ac[b] += lc[a]));
    for (a = 0; a < c; a++) 0 != q[a] && y(t + a, Ld) && (yc[a] += z(t + a, u));
    pe()
}
ea.fff = Ff;

function Ff(a) { /* SCREEN DISPLAY SIZE */
    var b, c, d, e, g;
    Hg && 256 <= ag ? qb = !0 : Hg && 256 > ag && (qb = !1);
    U(0, 257, 512, 186, [13407305, 9480368, 7241784, 7630870, 11302740, 13599032, 10993609, 6322320, 1921195, 10053120, 6714227, 6313296][Ie[l][nb][0]]);
    df.M(10, 432, Dg, 0, 0, 0, 0, 0, 0, 0, 128, 5, 7);
    e = 10;
    g = 261;
    var k = 4753E3;
    c = 9999999;
    if (98 > Kb[0]) {
        k = 0;
        for (b = 1; b < Kb[0]; b++) k += 1E3 * b;
        c = k + 1E3 * b
    }
    yf();
    if (2 == a) {
        Je();
        for (b = 0; 4 > b; b++) yc[b] = 0, zc[b] = 0, Ac[b] = 0;
        pe()
    }
    if (4 > p) {
        b = "LP  " + q[p] + "/" + ic[p];
        d = "STR " + jc[p];
        var r = "DEX " + kc[p],
            m = "MAG " + lc[p];
        F.b(e, g + 0, Hc[x(s[t + p], Pc)],
            16777215, 0);
        F.b(e, g + 16, b, 16777215, 0);
        if (w.step[p] != Ig)
            if (F.b(e, g + 28, d, 16777215, 0), F.b(e, g + 40, r, 16777215, 0), F.b(e, g + 52, m, 16777215, 0), df.b(e, g + 28 + 2, "              AT ", -1, 0), df.b(e, g + 40 + 2, "              AGI ", -1, 0), df.b(e, g + 52 + 2, "              RANGE ", -1, 0), df.b(e, g + 28 + 2, "                 " + mc[p] + "-" + nc[p], 0, -1), df.b(e, g + 40 + 2, "                  " + oc[p] + "-" + pc[p], 0, -1), df.b(e, g + 52 + 2, "                    " + qc[p], 0, -1), 5 == cc[p]) df.b(e, g + 64 + 2, "AURA          AURA", -1, 0), df.b(e, g + 64 + 2, "     (AT)" + jc[p] + "%",
                0, -1), df.b(e, g + 64 + 2, "                   (DF)" + kc[p] / 5, 0, -1);
            else if (7 == cc[p]) df.b(e, g + 64 + 2, "              BULLET", -1, 0), df.b(e, g + 64 + 2, "                     +" + kc[p] / 5, 0, -1);
        else if (8 == cc[p]) {
            var n = 0,
                n = 10 > kc[p] ? 0 + (kc[p] - 0) / 10 : 30 > kc[p] ? 1 + (kc[p] - 10) / 20 : 60 > kc[p] ? 2 + (kc[p] - 30) / 30 : 100 > kc[p] ? 3 + (kc[p] - 60) / 40 : 4;
            df.b(e, g + 64 + 2, "              RING", -1, 0);
            df.b(e, g + 64 + 2, "                   +" + ("" + n).substring(0, 5 > ("" + n).length ? ("" + n).length : 5), 0, -1)
        }
        F.b(e, g + 76, "LV  " + Kb[0], 16777215, 0);
        F.b(e, g + 88, "SP " + Nb[p],
            16777215, 0);
        F.b(e, g + 100, "EXP " + Ob + "(" + A(100 * (Ob - k) / (c - k)) + "%)", 16777215, 0);
        F.b(e, g + 124, "$ " + Qb, 16777215, 0);
        df.b(e + 105, g + 100 + 2, "FP " + Lb[0], -1, 0);
        w.step[p] == Ig ? (k = dg(A(Qb / 10), 10 * Kb[0]), b = "Revival $ " + k, F.b(e, g + 40, b, 8421504, 0), Sf(e, g + 40, 8 * b.length, 12) && qb && (k <= Qb && Af && 0 != q[0] + q[1] + q[2] + q[3] && (Je(), q[p] += A(ic[p] / 4), Qb -= k, w.set(p, A(w.a[p][0].x / 8), A(w.a[p][0].y / 8)), pe()), F.b(e, g + 40, b, 16711680, 0))) : 0 < Nb[p] && (k = Af, Je(), Sf(e, g + 16, 8 * b.length + 16, 12) && qb ? (k && (ec[p]++, Nb[p]--), F.b(e, g + 16, b, 16711680, 0)) : Sf(e,
            g + 28, 8 * d.length + 16, 12) && qb ? (k && (fc[p]++, Nb[p]--), F.b(e, g + 28, d, 16711680, 0)) : Sf(e, g + 40, 8 * r.length + 16, 12) && qb ? (k && (gc[p]++, Nb[p]--), F.b(e, g + 40, r, 16711680, 0)) : Sf(e, g + 52, 8 * m.length + 16, 12) && qb && (k && (hc[p]++, Nb[p]--), F.b(e, g + 52, m, 16711680, 0)), pe(), F.b(e + 8 * b.length, g + 16, " +", 16711680, 0), F.b(e + 8 * d.length, g + 28, " +", 16711680, 0), F.b(e + 8 * r.length, g + 40, " +", 16711680, 0), F.b(e + 8 * m.length, g + 52, " +", 16711680, 0))
    } else if (m = s[p], 8 <= p && 11 >= p && (m = Bc[t + p - 8]), 12 <= p && 15 >= p && (m = Cc[t + p - 12]), cg(e, g + 0, v[m][Kc] + " " + (v[m][Lc] ?
            v[m][Lc] : ""), 16777215, 0, -1), 0 != m && m != Gc)
        if (b = x(m, Pc), 9 == b) F.b(e, g + 16, "Compo Item", -1, 0), cg(e, g + 32, v[m][hd], 16777215, 0, -1), cg(e, g + 44, v[m][id], 16777215, 0, -1);
        else {
            F.b(e, g + 16, "AT " + v[m][Rc] + "-" + v[m][Sc], 16777215, 0);
            F.b(e, g + 28, "AGI " + v[m][Uc] + "-" + v[m][Vc], 16777215, 0);
            F.b(e, g + 40, "RANGE " + v[m][Wc], 16777215, 0);
            c = x(m, Yc);
            d = x(m, Zc);
            k = dg(x(m, $c), 0);
            r = x(m, cd);
            m = x(m, dd);
            if (1 == c || 2 == c || 3 == c || 4 == c || 5 == c) y(p, wd) && (r += z(p, u), m += z(p, gd)), y(p, yd) && (r += z(p, u), m += z(p, gd)), y(p, Ad) && (r += z(p, u), m += z(p, gd)), y(p, Bd) && (r +=
                z(p, u), m += z(p, gd)), y(p, zd) && (d += z(p, u)), y(p, Cd) && (d += z(p, u)), y(p, Dd) && (d += z(p, u));
            F.b(e, g + 56, "TYPE " + "Physical Fire Ice Thunder Poison Freeze".split(" ")[c], 16777215, 0);
            F.b(e, g + 68, "AT " + r + "-" + m, 16777215, 0);
            6 == b ? F.b(e, g + 80, "$ " + k, 16777215, 0) : F.b(e, g + 80, "MP " + k, 16777215, 0);
            2 == c ? F.b(e, g + 92, "SLOW " + d + "%", 16777215, 0) : 4 == c ? F.b(e, g + 80, "TIME " + d / 50 + "s", 16777215, 0) : 5 == c && F.b(e, g + 80, "TIME " + d / 50 + "s", 16777215, 0);
            U(e + 0, g + 108, 12, 12, 0);
            U(e + 75, g + 108, 12, 12, 0);
            Zf = 2;
            $f(Qa, e + 0, g + 108, 12, 12, 12 * x(Bc[p],
                Nc), 0, 12, 12, x(Bc[p], Qc));
            $f(Qa, e + 75, g + 108, 12, 12, 12 * x(Cc[p], Nc), 0, 12, 12, x(Cc[p], Qc));
            Zf = 0;
            df.b(e + 16, g + 108 + 3, v[Bc[p]][Kc].substring(0, 8 < v[Bc[p]][Kc].length ? 8 : v[Bc[p]][Kc].length) + " " + v[Bc[p]][Lc], -1, 0);
            df.b(e + 75 + 16, g + 108 + 3, v[Cc[p]][Kc].substring(0, 8 < v[Cc[p]][Kc].length ? 8 : v[Cc[p]][Kc].length) + " " + v[Cc[p]][Lc], -1, 0)
        }
    e = 186;
    g = 276;
    Cf(df, e - 15, g + 0 + 8, "PLA  ", 0, 0, 0, 0, 0, 0, 0, 128, 5, 7);
    Cf(df, e - 15, g + 0 + 16, "  YER", 0, 0, 0, 0, 0, 0, 0, 128, 5, 7);
    Cf(df, e - 15, g + 28 + 8, "WEA  ", 0, 0, 0, 0, 0, 0, 0, 128, 5, 7);
    Cf(df, e - 15, g + 28 + 16, "  PON", 0, 0, 0,
        0, 0, 0, 0, 128, 5, 7);
    Cf(df, e - 15, g + 56 + 12, "COMPO", 0, 0, 0, 0, 0, 0, 0, 128, 5, 7);
    Cf(df, e - 15, g + 84 + 12, "COMPO", 0, 0, 0, 0, 0, 0, 0, 128, 5, 7);
    for (b = 0; 4 > b; b++) U(e + 28 * b, g - 12, 24, 4, 0), U(e + 28 * b, g - 12, A(24 * q[b] / ic[b]), 4, 10027008), k = dg(x(s[t + b], $c), 1), c = x(s[t + b], Pc), 4 != c && 5 != c && 6 != c && U(e + 28 * b, g - 6, A(23 * dc[b] / k) + 1, 2, 128), U(e + 28 * b, g + 0, 24, 24, 0), U(e + 28 * b, g + 28, 24, 24, 0), Jg(b, 0) && U(e + 28 * b, g + 56, 24, 24, 0), Jg(b, 1) && U(e + 28 * b, g + 84, 24, 24, 0), $f(Pa, e + 28 * b, g, 24, 24, 24 * x(s[t + b], Pc), 0, 24, 24, 16777215), Uf(e + 28 * b, g, 24 * x(s[t + b], Pc), x(s[t + b], Qc)), Zf = 2, $f(Sa,
        e + 28 * b, g + 28, 24, 24, 24 * x(s[t + b], Oc), 0, 24, 24, x(s[t + b], Qc)), Jg(b, 0) && $f(Sa, e + 28 * b, g + 56, 24, 24, 24 * x(Bc[t + b], Oc), 0, 24, 24, x(Bc[t + b], Qc)), Jg(b, 1) && $f(Sa, e + 28 * b, g + 84, 24, 24, 24 * x(Cc[t + b], Oc), 0, 24, 24, x(Cc[t + b], Qc)), Zf = 0, v[s[t + b]][Lc] && df.b(e + 28 * b + 19, g + 28 + 17, "" + v[s[t + b]][Lc], 16777215, -1), v[Bc[t + b]][Lc] && Jg(b, 0) && df.b(e + 28 * b + 19, g + 56 + 17, "" + v[Bc[t + b]][Lc], 16777215, -1), v[Cc[t + b]][Lc] && Jg(b, 1) && df.b(e + 28 * b + 19, g + 84 + 17, "" + v[Cc[t + b]][Lc], 16777215, -1);
    Xf(e + 28 * pb - 1, g - 1, 26, 26, 16711680);
    e = 310;
    g = 276;
    F.b(e, g + -15, "Inventory", 16777215,
        0);
    for (b = 0; 24 > b; b++) U(e + b % 7 * 28, g + 28 * A(b / 7), 24, 24, 0), Zf = 2, $f(Sa, e + b % 7 * 28, g + 28 * A(b / 7), 24, 24, 24 * x(s[Dc + b], Oc), 0, 24, 24, x(s[Dc + b], Qc)), Zf = 0, v[s[Dc + b]][Lc] && df.b(e + b % 7 * 28 + 19, g + 28 * A(b / 7) + 17, "" + v[s[Dc + b]][Lc], 16777215, -1);
    b = -1;
    e = 186;
    g = 276;
    Sf(e - 4, g - 4, 128, 112) && qb && (c = A((Yf - e + 4) / 28), d = A((ag - g + 4) / 28), b = 4 * d + c, Kg(e + 28 * c, g + 28 * d, 24, 24, 8388608));
    e = 310;
    g = 276;
    Sf(e - 4, g - 4, 168, 112) && qb && (c = A((Yf - e + 4) / 28), d = A((ag - g + 4) / 28), b = Dc + 6 * d + c, Kg(e + 28 * c, g + 28 * d, 24, 24, 8388608));
    Je();
    if (0 <= b && 3 >= b && 0 == s[Ec] && Af) pb = b;
    else if (t <= b && b <
        t + 4 && Af) {
        if (0 == s[Ec] || x(s[Ec], Pc) == cc[b - 4]) a = s[b], s[b] = s[Ec], s[Ec] = a, a = Bc[b], Bc[b] = Bc[Ec], Bc[Ec] = a, a = Cc[b], Cc[b] = Cc[Ec], Cc[Ec] = a, dc[b - 4] = 0, w.pa[b - 4] = 0
    } else 8 <= b && 11 >= b && Af ? 9 == x(s[Ec], Pc) && Jg(b - 8, 0) && (Bc[t + b - 8] = s[Ec], s[Ec] = 0, Bc[Ec] = 0, Cc[Ec] = 0, dc[b - 8] = 0) : 12 <= b && 15 >= b && Af ? 9 == x(s[Ec], Pc) && Jg(b - 12, 1) && (Cc[t + b - 12] = s[Ec], s[Ec] = 0, Bc[Ec] = 0, Cc[Ec] = 0, dc[b - 12] = 0) : Dc <= b && b < Ec && Af ? 1 == Jb && 0 != s[b] ? (k = A(x(s[b], Mc) / 8), Af && (le.add(40, 200, 1, k, 0), s[b] = 0, Bc[b] = 0, Cc[b] = 0)) : (a = s[b], s[b] = s[Ec], s[Ec] = a, a = Bc[b], Bc[b] = Bc[Ec],
        Bc[Ec] = a, a = Cc[b], Cc[b] = Cc[Ec], Cc[Ec] = a) : -1 == b && 0 != s[Ec] && Af && 256 > ag && 0 == a && (le.add(w.a[pb][0].x, w.a[pb][0].y, s[Ec], Bc[Ec], Cc[Ec]), s[Ec] = 0, Bc[Ec] = 0, Cc[Ec] = 0);
    pe();
    p = -1 == b ? pb : b;
    0 != s[Ec] && (Zf = 2, K(Sa, Yf, ag, 24, 24, 24 * x(s[Ec], Oc), 0, 24, 24, x(s[Ec], Qc)), Zf = 0);
    1 == Jb && (c = V(Yf, 56, fa - 56), d = V(ag - 8, 10, ha - 10), Dc <= b && b < Ec ? (k = A(x(s[b], Mc) / 8), uf(F, c, d, "SELL $" + k + "", 16777215, 0)) : uf(F, c, d, "CLICK TO SELL", 16777215, 0))
}

function Jg(a, b) {
    if (0 == s[Ec] || 9 != x(s[Ec], Pc)) return !0;
    if (0 == s[t + a] || 0 == b && Bc[t + a] == Gc || 1 == b && Cc[t + a] == Gc) return !1;
    var c = x(s[Ec], fd);
    return 0 == b && c == x(Cc[t + a], fd) || 1 == b && c == x(Bc[t + a], fd) ? !1 : Ke(c, x(s[t + a], Pc), x(s[t + a], Yc), x(s[t + a], Tc))
}

function Ke(a, b, c, d) {
    if (a == jd || a == kd || a == ld || a == md || a == nd) return !0;
    if (a == od) {
        if (1 == b || 2 == b || 3 == b || 6 == b || 7 == b || 8 == b) return !0
    } else if (a == pd) {
        if (1 == b || 2 == b || 3 == b || 6 == b || 7 == b || 8 == b) return !0
    } else {
        if (a == qd || a == rd || a == sd) return !0;
        if (a == td) {
            if (1 == b || 2 == b || 7 == b) return !0
        } else if (a == ud) {
            if (1 == b || 2 == b || 7 == b) return !0
        } else if (a == vd) {
            if (1 == b || 2 == b || 7 == b) return !0
        } else if (a == wd) {
            if (1 == c) return !0
        } else if (a == xd) {
            if (1 == c) return !0
        } else if (a == yd) {
            if (2 == c) return !0
        } else if (a == zd) {
            if (2 == c) return !0
        } else if (a == Ad) {
            if (3 == c) return !0
        } else if (a ==
            Bd) {
            if (4 == c) return !0
        } else if (a == Cd) {
            if (4 == c) return !0
        } else if (a == Dd) {
            if (5 == c) return !0
        } else {
            if (a == Ed) return !0;
            if (a == Fd) {
                if (2 == b) return !0
            } else if (a == Gd) {
                if (3 == b || 4 == b || 5 == b || 6 == b || 8 == b) return !0
            } else if (a == Hd) {
                if (3 == b || 4 == b || 6 == b) return !0
            } else if (a == Id) {
                if (3 == b || 4 == b || 6 == b) return !0
            } else if (a == Jd) {
                if (2 <= d) return !0
            } else if (a == Kd) {
                if (1 == b || 3 == b || 6 == b || 8 == b) return !0
            } else if (a == Xd) {
                if (1 == b || 3 == b || 4 == b || 6 == b || 7 == b) return !0
            } else if (a == Md) {
                if (1 == b || 2 == b || 3 == b || 6 == b || 7 == b || 8 == b) return !0
            } else if (a == Ld) {
                if (1 == b ||
                    2 == b || 7 == b) return !0
            } else if (a == Yd) {
                if (3 == b || 4 == b || 6 == b || 7 == b || 8 == b) return !0
            } else {
                if (a == Nd || a == Od || a == Pd || a == Qd || a == Rd || a == Sd || a == Td || a == Ud || a == Vd) return !0;
                if (a == Wd) {
                    if (1 == b || 7 == b) return !0
                } else if (a == Zd) {
                    if (2 == b) return !0
                } else if (a == $d || a == ae && 8 == b) return !0
            }
        }
    }
    return !1
}
var Ig = 9,
    w = new Lg;

function Lg() {
    var a, b;
    this.a = Array(8);
    for (a = 0; 8 > a; a++) this.a[a] = Array(21);
    this.c = Array(8);
    for (a = 0; 8 > a; a++) this.c[a] = Array(21);
    this.step = new Int32Array(8);
    this.count = new Int32Array(8);
    this.h = new Int32Array(8);
    this.g = new Int32Array(8);
    this.l = new Int32Array(8);
    this.qa = new Int32Array(8);
    this.pa = new Int32Array(8);
    this.Za = new Int32Array(8);
    this.v = -1;
    this.T = 0;
    this.search = new Int32Array(8);
    this.L = this.fb = 0;
    this.C = new Int32Array(8);
    this.X = new Int32Array(8);
    this.D = new Int32Array(8);
    this.H = new Int32Array(8);
    this.B = new Int32Array(8);
    this.O = Array(8);
    for (a = 0; 8 > a; a++) this.O[a] = new Int32Array(6);
    this.aa = Array(8);
    for (a = 0; 8 > a; a++) this.aa[a] = new Int32Array(6);
    this.ba = Array(8);
    for (a = 0; 8 > a; a++) this.ba[a] = new Int32Array(6);
    for (a = 0; 8 > a; a++)
        for (b = 0; 21 > b; b++) this.a[a][b] = new Mg;
    for (a = 0; 8 > a; a++)
        for (b = 0; 21 > b; b++) this.c[a][b] = new Mg
}
Lg.prototype.j = function() {
    this.v = -1;
    this.T = 0
};
Lg.prototype.set = function(a, b, c) {
    b *= 8;
    c *= 8;
    for (var d = 0; 21 > d; d++) Ng(this.a[a][d], b + B(4), c + B(4)), this.c[a][d].set(this.a[a][d]);
    this.step[a] = cc[a];
    this.count[a] = 0;
    this.h[a] = 0;
    this.g[a] = -1;
    this.l[a] = 0;
    this.qa[a] = 0;
    this.pa[a] = 0;
    this.Za[a] = 0;
    this.search[a] = 0;
    this.C[a] = 0;
    this.X[a] = 0;
    this.D[a] = 0;
    this.H[a] = 0;
    for (d = this.B[a] = 0; 6 > d; d++) this.O[a][d] = 0, this.aa[a][d] = 0, this.ba[a][d] = 0
};
ea.fff = Lg.prototype.kb;
Lg.prototype.kb = function(a, b) {
    var c = this.a[a][b],
        d = new Mg;
    d.p(c, this.c[a][b]);
    c.set(this.c[a][b]);
    var e = (Og(d) >> 2) + 1;
    Pg(d, 1 / e);
    var g, k, r;
    k = V(c.x, 0, 511) >> 3;
    r = V(c.y, 0, 383) >> 3;
    k = J.e[r][k];
    9 == k && (Pg(d, 0.95), this.h[a] |= 2);
    var m = 0.5;
    62 == J.w && (m = 1);
    for (var n = 0; n < e; n++) g = c.y + d.y, k = V(c.x, 0, 511) >> 3, r = V(g, 0, 383) >> 3, k = J.e[r][k], 384 <= g || (0 <= k && 8 >= k ? (d.x *= m, d.y = -d.y, this.h[a] |= 1) : c.y = g), g = c.x + d.x, k = V(g, 0, 511) >> 3, r = V(c.y, 0, 383) >> 3, k = J.e[r][k], 0 > g || 512 <= g || (0 <= k && 8 >= k ? (d.y *= m, d.x = -d.x, this.h[a] |= 1) : c.x = g)
};
Lg.prototype.m = function(a, b, c, d, e) {
    var g = 0.5 * (a + c),
        k = 1E3,
        r = -1;
    if (1 == this.fb) return r;
    for (var m = e + 4; e < m; e++) {
        this.search[e] = 0;
        var n = this.a[e][2];
        this.step[e] == Ig || n.x - 5 > c || n.x + 5 < a || n.y - 10 > d || n.y + 10 < b || (this.search[e] = 1, Gg(n.x - g) < k && (k = Gg(n.x - g), r = e))
    }
    return r
};
Lg.prototype.K = function(a, b, c, d, e, g, k, r, m, n) {
    var G = -1;
    this.L = 0;
    r *= 0.5;
    m *= 0.5;
    for (var H = n + 4; n < H; n++)
        if (this.step[n] != Ig && !(this.a[n][2].x - 5 > g + r || this.a[n][2].x + 5 < g - r || this.a[n][2].y - 10 > k + m || this.a[n][2].y + 10 < k - m)) {
            var G = -1,
                N = d + A(B(e - d + 1));
            this.qa[n] = 2;
            var E = 16711680;
            4 <= n && (G = 1, E = 12632256);
            y(t + n, Ld) && (N += A(N * z(t + n, gd) / 100));
            var ja = 0;
            1 == b && y(t + n, Nd) && (N += A(N * z(t + n, gd) / 100));
            if (2 == b) y(t + n, Sd) && B(100) < z(t + n, u) && (ja = 1), 0 == ja && (this.C[n] = 500, this.X[n] = c, y(t + n, rd) && (this.C[n] -= A(this.C[n] * z(t + n, u) / 100)));
            else if (4 == b) {
                y(t + n, Td) && B(100) < z(t + n, u) && (ja = 1);
                0 == ja && (this.D[n] = c, this.H[n] = N, y(t + n, rd) && (this.D[n] -= A(this.D[n] * z(t + n, u) / 100), this.H[n] -= A(this.H[n] * z(t + n, u) / 100)));
                G = n;
                continue
            } else 5 == b && (y(t + n, Ud) && B(100) < z(t + n, u) && (ja = 1), 0 == ja && (this.B[n] = A(c / 10), y(t + n, rd) && (this.B[n] -= A(this.B[n] * z(t + n, u) / 100))));
            0 == b && (N = dg(1, N - A(zc[n] / 5)));
            y(t + n, qd) && 0 == b && (N = dg(1, N - z(t + n, u)));
            y(t + n, rd) && 0 != b && (N -= A(N * z(t + n, u) / 100));
            y(t + n, sd) && B(100) < z(t + n, u) && (N = 0, this.qa[n] = 0, E = 16744576);
            Je();
            q[n] = V(q[n] - N, 0, ic[n]);
            pe();
            2 > tc && je.add(this.a[n][0].x, this.a[n][0].y, G, N, E);
            this.L += N;
            G = n;
            if (0 == a) break
        }
    return G
};
ea.fff = Lg.prototype.jb;
Lg.prototype.jb = function() {
    var a = new Mg,
        b, c;
    if (-1 == this.v && 1 != f) {
        if (Af) {
            b = 20;
            a.x = Yf - this.c[pb][0].x;
            a.y = ag - (this.c[pb][0].y - 8);
            c = Og(a);
            20 > c && c < b && (0 != q[pb] || 0 != xc) && (b = c, this.v = pb, this.T = 0);
            for (var d = 0; 4 > d; d++)
                if (0 != q[d] || 0 != xc)
                    for (var e = 0; 10 > e; e++) a.x = Yf - this.c[d][e].x, a.y = ag - this.c[d][e].y, c = Og(a), 20 > c && c < b && (b = c, this.v = d, this.T = e, pb = d)
        }
    } else Qg || (this.v = -1, this.T = 0)
};

Lg.prototype.q = function(a, b, c, d) {
    var e = new Mg,
        g = a;
    8 > a && (g = s[t + a]);
    var k = x(g, 8) % 100,
        r = A(x(g, 8) / 100),
        m = x(g, 17),
        n = x(g, 18),
        G = x(g, Xc),
        H = x(g, 20),
        N = x(g, 21),
        E = x(g, 22),
        ja = x(g, 23),
        La = x(g, 24),
        Ea = x(g, 25),
        Da = x(g, 26),
        Y = x(g, 27),
        W = x(g, 28),
        aa = x(g, 29),
        sb = x(g, 30),
        tb = x(g, 31),
        Za = x(g, 32),
        ua = x(g, 33),
        ya = 0,
        xb = x(g, 9),
        ga = 8 > a ? mc[a] : x(g, Rc),
        ia = 8 > a ? nc[a] : x(g, Sc),
        Ca = x(g, Tc),
        $a = x(g, 13),
        bb = x(g, Yc),
        va = x(g, Zc),
        ib = x(g, ad),
        Db = x(g, 42),
        Eb = x(g, 43),
        Xa = x(g, ed),
        Ua = x(g, 45),
        Rb = x(g, 46),
        Sb = x(g, 47),
        Tb = x(g, 48),
        Ub = x(g, 49),
        Vb = x(g, 50),
        Wb = x(g, 51),
        ub =
        x(g, 52),
        Xb = x(g, 53),
        Yb = x(g, 54),
        Zb = x(g, 55),
        $b = x(g, 56),
        ac = x(g, 57),
        bc = x(g, 38),
        da = x(g, cd),
        Z = x(g, dd),
        wc = x(g, 41),
        bd = bb,
        Ra = va;
    if (8 > a) {
        var Ab = x(s[t + a], Pc);
        1 == Ab || 2 == Ab || 7 == Ab ? (ga = x(s[t + a], cd), ia = x(s[t + a], dd), y(t + a, wd) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, xd) && (Y += z(t + a, u)), y(t + a, yd) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, zd) && (va += z(t + a, u)), y(t + a, Ad) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, Bd) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, Cd) && (va += z(t + a, u)), y(t + a, Dd) && (va += z(t + a, u)), ga += A(ga * yc[a] / 100), ia += A(ia * yc[a] / 100),
            7 == Ab && (Ca += A(kc[a] / 5))) : 3 == Ab ? (402 != g && (va = bb = 0), Je(), g = x(s[t + a], $c), dc[a] = dc[a] + lc[a] < g ? dc[a] + lc[a] : g, dc[a] == g && 0 < g ? dc[a] = 0 : ib = 0, pe(), y(t + a, wd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, xd) && (ub += z(t + a, u)), y(t + a, yd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, zd) && (Ra += z(t + a, u)), y(t + a, Ad) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Bd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Cd) && (Ra += z(t + a, u)), y(t + a, Dd) && (Ra += z(t + a, u)), da += A(da * yc[a] / 100), Z += A(Z * yc[a] / 100), y(t + a, Hd) && B(100) < z(t + a, u) && (tb = 1), y(t + a, Id) && (ua += z(t + a, u)), y(t + a,
            Kd) && B(100) < z(t + a, u) && (xb = 1), y(t + a, Md) && B(100) < z(t + a, u) && (ga += A(z(t + a, gd) * ga / 100), ia += A(z(t + a, gd) * ia / 100))) : 4 == Ab || 5 == Ab ? (y(t + a, wd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, xd) && (Y += z(t + a, u), ub += z(t + a, u)), y(t + a, yd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, zd) && (va += z(t + a, u), Ra += z(t + a, u)), y(t + a, Ad) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Bd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Cd) && (va += z(t + a, u), Ra += z(t + a, u)), y(t + a, Dd) && (va += z(t + a, u), Ra += z(t + a, u)), da += A(da * yc[a] / 100), Z += A(Z * yc[a] / 100), y(t + a, Hd) && B(100) < z(t + a, u) && (tb =
            1), y(t + a, Id) && (ua += z(t + a, u))) : 6 == Ab ? (0 != ib && (va = bb = 0), y(t + a, wd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, xd) && (ub += z(t + a, u)), y(t + a, yd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, zd) && (Ra += z(t + a, u)), y(t + a, Ad) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Bd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Cd) && (Ra += z(t + a, u)), y(t + a, Dd) && (Ra += z(t + a, u)), da += A(da * yc[a] / 100), Z += A(Z * yc[a] / 100), y(t + a, Hd) && B(100) < z(t + a, u) && (tb = 1), y(t + a, Id) && (ua += z(t + a, u)), y(t + a, Kd) && B(100) < z(t + a, u) && (xb = 1), y(t + a, Md) && B(100) < z(t + a, u) && (ga += A(z(t + a, gd) * ga / 100),
            ia += A(z(t + a, gd) * ia / 100))) : 8 == Ab && (ga = x(s[t + a], cd), ia = x(s[t + a], dd), y(t + a, wd) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, wd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, xd) && (Y += z(t + a, u), ub += z(t + a, u)), y(t + a, yd) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, yd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, zd) && (va += z(t + a, u), Ra += z(t + a, u)), y(t + a, Ad) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, Ad) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Bd) && (ga += z(t + a, u), ia += z(t + a, gd)), y(t + a, Bd) && (da += z(t + a, u), Z += z(t + a, gd)), y(t + a, Cd) && (va += z(t + a, u), Ra += z(t + a, u)), y(t +
            a, Dd) && (va += z(t + a, u), Ra += z(t + a, u)), ga += A(ga * yc[a] / 100), ia += A(ia * yc[a] / 100), da += A(da * yc[a] / 100), Z += A(Z * yc[a] / 100));
        y(t + a, Jd) && (Ca += z(t + a, u) + A(Ca * z(t + a, gd) / 100));
        (3 == Ab || 4 == Ab || 6 == Ab) && y(t + a, Xd) && B(100) < z(t + a, u) && (ya = z(t + a, gd));
        y(t + a, Yd) && B(100) < z(t + a, u) && (Za = 2)
    }
    Ab = 0;
    1 != f ? 6 == k ? (g = I.a[d][0].x, d = I.a[d][0].y) : (g = I.a[d][I.n].x, d = I.a[d][I.n].y) : (Ab = 1 - (d >> 2), g = this.a[d][2].x, d = this.a[d][2].y);
    if (0 != k)
        if (1 == k) k = b + 10 * e.x, a = c + 10 * e.y, ke.add(Ab, k, a, 0, 0, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb,
            va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra);
        else if (2 == k) {
        e = g - b;
        e /= Gg(e);
        k = b + 10 * e;
        a = c;
        for (var Pb = e * $a * 0.1, cb = 0; cb < Ca; cb++) ke.add(Ab, k, a, Pb, 0, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra)
    } else if (3 == k) {
        Ng(e, g - b, d - c);
        for (var ue = 0 < r ? r : 16, r = A(512 * Rg(e) / Sg), r = r - A((Ca - 1) * ue / 2), cb = 0; cb < Ca; cb++) {
            e.x = Te[r & 511][0];
            e.y = -Te[r & 511][1];
            k = b + 10 * e.x;
            a = c + 10 * e.y;
            var Pb = e.x * $a * 0.1,
                ff = e.y * $a * 0.1;
            ke.add(Ab, k,
                a, Pb, ff, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra);
            r += ue
        }
    } else if (4 == k)
        for (cb = 0; cb < Ca; cb++) {
            Ng(e, g - b, d - c);
            ue = 0 < r ? r : Ca + 4;
            if (1 < Ca) {
                var Pb = A(B(512)),
                    gf = B(4) * ue;
                e.x += Te[Pb][0] * gf;
                e.y += Te[Pb][1] * gf
            }
            k = b;
            a = c;
            Pb = e.x / $a;
            ff = (e.y - 0.5 * $a * $a * aa * 0.01) / $a;
            ke.add(Ab, k, a, Pb, ff, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra)
        } else if (5 == k)
            for (cb = 0; cb <
                Ca; cb++) 0 == r ? (k = b + M(-40, 40), a = c + M(-60, 0)) : (k = b + M(-10 * (r - 1), 10 * (r - 1)), a = c + M(-60, -50)), Ng(e, g - k, d - a), Tg(e), Pg(e, $a), ke.add(Ab, k, a, e.x, e.y, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra);
        else if (6 == k)
        for (cb = 0; cb < Ca; cb++) k = g + M(-$a, $a), a = d + M(-$a, $a), ke.add(Ab, k, a, 0, 0, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra);
    else if (7 == k || 10 == k)
        for (e.x =
            b - this.a[a][5].x, e.y = c - this.a[a][5].y, 10 == k && 0 < e.y && (e.y = -e.y), k = this.a[a][5].x + 0.5 * e.x, a = this.a[a][5].y + 0.5 * e.y, Tg(e), Pg(e, 0.1 * $a), cb = 0; cb < Ca; cb++) ke.add(Ab, k, a, e.x, e.y, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra);
    else if (12 == k)
        for (e = b - this.a[a][0].x, e /= Gg(e), k = this.a[a][0].x, a = this.a[a][0].y, Pb = e * $a * 0.1, cb = 0; cb < Ca; cb++) ke.add(Ab, k, a, Pb, 0, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua,
            Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra);
    else if (8 == k)
        for (cb = 0; cb < Ca; cb++) k = 0 == r ? g + M(-40, 40) : g + M(-10 * (r - 1), 10 * (r - 1)), a = d + M(-30, -60), ke.add(Ab, k, a, 0, 0, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra);
    else if (9 == k)
        for (0 == r ? (k = g, a = d) : (k = b, a = c), b = A(512 / Ca), Pb = A(B(b)), cb = 0; cb < Ca; cb++) e.x = Te[Pb][0] * $a, e.y = Te[Pb][1] * $a, ke.add(Ab, k, a, e.x, e.y, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa,
            Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra), Pb += b;
    else if (11 == k)
        for (Ng(e, g - b, d - c), gf = Tg(e), ue = 0 < r ? r : 0, cb = 0; cb < Ca; cb++) Pb = M(-ue, ue), k = b + e.x * gf / 2 + e.y * Pb, a = c + e.y * gf / 2 - e.x * Pb, Pb = $a * (cb + 1) / Ca * e.x, ff = $a * (cb + 1) / Ca * e.y, ke.add(Ab, k, a, Pb, ff, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, Z, wc, bd, Ra)
};

function Ug(a, b) {
    if (0 != rc[b] || 1 == f)
        if (0 < a.Za[b]) a.Za[b]--;
        else if (!(20 > A(100 * q[b] / ic[b]) && 1 != f && 0 == sc)) {
        var c = 0.5 * (a.a[b][9].x + a.a[b][10].x),
            d = 0.5 * (a.a[b][9].y + a.a[b][10].y),
            e = qc[b],
            g;
        g = 1 != f ? I.m(c - 200 - e, d - 20 - e, c + 200 + e, d + 100 + e) : w.m(c - 600, d - 300, c + 600, d + 300, 1 - (b >> 2) << 2); - 1 != g && (a.Za[b] = 15, e = 0.6, c < (1 != f ? I.a[g][I.n].x : a.a[g][2].x) ? (c = A(V(c + 14, 0, 511) / 8), d = A(V(d - 6, 8, 383) / 8), 0 <= J.e[d][c] && 8 >= J.e[d][c] && (e = 2), 0 <= J.e[d - 1][c] && 8 >= J.e[d - 1][c] && (e = 4), a.a[b][9].x < a.a[b][10].x ? (a.a[b][7].x += 4, a.a[b][7].y -= 3 * e) :
            (a.a[b][8].x += 4, a.a[b][8].y -= 3 * e)) : (c = A(V(c - 14, 0, 511) / 8), d = A(V(d - 6, 8, 383) / 8), 0 <= J.e[d][c] && 8 >= J.e[d][c] && (e = 2), 0 <= J.e[d - 1][c] && 8 >= J.e[d - 1][c] && (e = 4), a.a[b][9].x > a.a[b][10].x ? (a.a[b][7].x -= 4, a.a[b][7].y -= 3 * e) : (a.a[b][8].x -= 4, a.a[b][8].y -= 3 * e)))
    }
}

function Vg(a, b) {
    if (0 != rc[b] && !(20 > A(100 * q[b] / ic[b]) && 0 == sc)) {
        var c = 0.5 * (a.a[b][9].x + a.a[b][10].x),
            d = 0.5 * (a.a[b][9].y + a.a[b][10].y),
            e = qc[b],
            e = 1 != f ? I.m(c - 200 - e, d - 100 - e, c + 200 + e, d + 100 + e) : w.m(c - 600, d - 300, c + 600, d + 300, 1 - (b >> 2) << 2); - 1 != e && 9 == J.e[A(V(d, 8, 383) / 8)][A(V(c, 0, 511) / 8)] && (c < (1 != f ? I.a[e][I.n].x : a.a[e][2].x) ? (a.a[b][0].x += 0.25, a.a[b][1].x += 0.25) : (a.a[b][0].x -= 0.25, a.a[b][1].x -= 0.25), d < (1 != f ? I.a[e][I.n].y : a.a[e][2].y) ? (a.a[b][0].y += 0.25, a.a[b][1].y += 0.25) : (a.a[b][0].y -= 0.25, a.a[b][1].y -= 0.25), a.a[b][0].x +=
            M(-0.25, 0.25), a.a[b][0].y += M(-0.25, 0.25), a.a[b][1].x += M(-0.25, 0.25), a.a[b][1].y += M(-0.25, 0.25))
    }
}
ea.fff = Lg.prototype.move;
Lg.prototype.move = function() {
    var a, b, c;
    this.jb();
    var d = 1 != f ? 4 : 8;
    for (a = 0; a < d; a++)
        if (0 < this.D[a] && 0 < q[a] && (this.D[a]--, Je(), q[a] = dg(q[a] - this.H[a], 0), pe()), 0 < this.B[a] && 0 < q[a]) this.B[a]--;
        else {
            if (0 < this.C[a] && 0 < q[a] && (this.C[a]--, B(100) < this.X[a])) continue;
            0 != q[a] && (this.step[a] = 0 == s[t + a] ? 0 : cc[a]);
            if ((55 != l && nb != Ie[l].length - 1 || 0 == I.index) && 0 < (this.h[a] & 1) && 0 != q[a]) {
                b = (this.a[a][9].x + this.a[a][10].x) / 2;
                c = (this.a[a][9].y + this.a[a][10].y) / 2;
                var e = J.I[63];
                7 == Ie[l][nb][1] && (e = J.o[63]);
                500 < b && 10 > Gg(8 * e -
                    c) && (ob = nb != Ie[l].length - 1 ? 1 : 2)
            }
            this.count[a]++;
            if (0 == q[a])
                for (b = 0; 11 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
            else if (2 == this.h[a])
                for (b = 0; 11 > b; b++) X(this.a[a][b], this.c[a][b], 0.01, 0.99);
            else if (10 > this.count[a]) X(this.a[a][0], this.c[a][0], -0.2, 0.99), X(this.a[a][1], this.c[a][1], 0, 0.99), X(this.a[a][2], this.c[a][2], -0.1, 0.99), X(this.a[a][3], this.c[a][3], 0, 0.99), X(this.a[a][4], this.c[a][4], 0, 0.99), X(this.a[a][5], this.c[a][5], 0, 0.99), X(this.a[a][6], this.c[a][6], 0, 0.99), X(this.a[a][7], this.c[a][7],
                0, 0.99), X(this.a[a][8], this.c[a][8], 0, 0.99), X(this.a[a][9], this.c[a][9], 0.3, 0.99), X(this.a[a][10], this.c[a][10], 0.3, 0.99);
            else
                for (b = 0; 11 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
            if (0 == q[a] && this.step[a] != Ig) {
                this.step[a] = Ig;
                for (b = 0; 11 > b; b++) this.a[a][b].x += M(-2, 2), this.a[a][b].y += M(-1, -3);
                if (1 == f)
                    for (e = 1 - (a >> 2) << 2, b = 0; 4 > b; b++) y(t + e + b, Vd) && B(100) < z(t + e + b, u) && (c = w.m(this.a[a][0].x - 600, this.a[a][0].y - 300, this.a[a][0].x + 600, this.a[a][0].y + 300, a >> 2 << 2), -1 != c && w.q(z(t + e + b, gd), this.a[a][0].x, this.a[a][0].y,
                        c))
            }
            this.v == a && 1 != f && (this.a[this.v][this.T].x += (Yf - this.a[this.v][this.T].x) * (0 == q[a] ? 0.04 : 0.2), this.a[this.v][this.T].y += (ag - this.a[this.v][this.T].y) * (0 == q[a] ? 0.04 : 0.2));
            0 == this.step[a] || 1 == this.step[a] ? this.sa(a) : 2 == this.step[a] ? this.ta(a) : 3 == this.step[a] ? this.ua(a) : 4 == this.step[a] ? this.ma(a) : 5 == this.step[a] ? this.na(a) : 6 == this.step[a] ? this.va(a) : 7 == this.step[a] ? this.wa(a) : 8 == this.step[a] ? this.xa(a) : this.step[a] == Ig && ($(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5), $(this.a[a][3], this.a[a][5], 4.8, 0.5,
                0.5), $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5), $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5), $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5));
            0 < (this.h[a] & 1) && (this.count[a] = 0);
            for (b = this.h[a] = 0; 11 > b; b++) this.kb(a, b)
        }
};
ea.fff = Lg.prototype.sa;
Lg.prototype.sa = function(a) {
    var b, c, d = new Mg,
        e = 1 - (a >> 2) << 2;
    b = mc[a];
    var g = nc[a],
        k = oc[a] + Wg(pc[a] - oc[a] + 1);
    c = qc[a];
    if (0 != this.h[a] && 0 != this.step[a] && this.v != a) {
        0 < this.l[a] && this.l[a]--;
        var r = 0.5 * (this.a[a][9].x + this.a[a][10].x),
            m = 0.5 * (this.a[a][9].y + this.a[a][10].y);
        c = 1 != f ? I.m(r - c, m - c, r + c, m) : w.m(r - c, m - c, r + c, m, e);
        if (0 == this.l[a] && -1 != c) {
            this.l[a] = k;
            r < (1 != f ? I.a[c][I.n].x : this.a[c][2].x) ? this.a[a][5].x < this.a[a][6].x ? (this.a[a][5].x += 4, this.a[a][4].x -= 4, this.a[a][2].y += 1, this.g[a] = 5) : (this.a[a][6].x +=
                4, this.a[a][3].x -= 4, this.a[a][2].y += 1, this.g[a] = 6) : this.a[a][5].x > this.a[a][6].x ? (this.a[a][5].x -= 4, this.a[a][4].x += 4, this.a[a][2].y += 1, this.g[a] = 5) : (this.a[a][6].x -= 4, this.a[a][3].x += 4, this.a[a][2].y += 1, this.g[a] = 6);
            Je();
            k = x(s[t + a], $c);
            dc[a] = dc[a] + lc[a] < k ? dc[a] + lc[a] : k;
            if (dc[a] == k && 0 < k || -1 == k) dc[a] = 0, this.q(a, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, c);
            y(t + a, $d) && (k = z(t + a, u), q[a] = V(q[a] + k, 0, ic[a]), je.add(this.a[a][0].x, this.a[a][0].y, 0, k, 65280));
            pe()
        } - 1 == c && Ug(this, a);
        Vg(this, a)
    }
    if (-1 != this.g[a] &&
        0 != this.step[a] && this.v != a && (c = x(s[t + a], 9), y(t + a, Kd) && B(100) < z(t + a, u) && (c = 1), y(t + a, Md) && B(100) < z(t + a, u) && (b += A(z(t + a, gd) * b / 100), g += A(z(t + a, gd) * g / 100)), k = 12, r = 8, y(t + a, Wd) && (k += A(12 * z(t + a, u) / 100), r += A(8 * z(t + a, u) / 100)), e = 1 != f ? I.K(c, 0, 0, b, g, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, k, r) : w.K(c, 0, 0, b, g, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, k, r, e), -1 != e)) {
        this.g[a] = -1;
        y(t + a, td) && (k = dg(1, A(this.L * z(t + a, u) / 100)), Je(), q[a] = V(q[a] + k, 0, ic[a]), pe(), je.add(this.a[a][0].x, this.a[a][0].y, 0, k, 65280));
        y(t + a, ud) && 0 == f && B(100) < z(t + a, u) && le.add(this.a[a][0].x, this.a[a][0].y, 2, 0, 0);
        if (y(t + a, vd) && 0 == f && B(100) < z(t + a, u)) {
            g = 100;
            for (b = 0; 4 > b; b++) y(t + b, Qd) && (g += z(t + b, u));
            le.add(this.a[a][0].x, this.a[a][0].y, 1, A(this.L * g / 100), 0)
        }
        y(t + a, Xd) && B(100) < z(t + a, u) && (b = z(t + a, gd), 1 != f ? d.p(I.a[e][0], this.a[a][1]) : d.p(w.a[e][1], this.a[a][1]), Tg(d), Pg(d, 0.2 * b), 1 != f ? Pg(d, Xg[C[I.id[e]][Yg]] / C[I.id[e]][Zg]) : Pg(d, 0.1), 1 != f ? I.c[e][0].sub(d) : w.c[e][0].sub(d))
    }
    $(this.a[a][0], this.a[a][1], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2],
        3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5], 4.8, 0.5, 0.5);
    $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8], 6, 0.1, 0.1)
};
ea.fff = Lg.prototype.ta;
Lg.prototype.ta = function(a) {
    var b, c, d = new Mg,
        e = 1 - (a >> 2) << 2;
    b = mc[a];
    var g = nc[a],
        k = oc[a] + Wg(pc[a] - oc[a] + 1),
        r = qc[a];
    if (0 != this.h[a] && this.v != a) {
        0 < this.l[a] && this.l[a]--;
        var m = 0.5 * (this.a[a][9].x + this.a[a][10].x),
            n = 0.5 * (this.a[a][9].y + this.a[a][10].y);
        c = 1 != f ? I.m(m - r, n - r, m + r, n) : w.m(m - r, n - r, m + r, n, e);
        0 == this.l[a] && -1 != c && (this.l[a] = k, m < (1 != f ? I.a[c][I.n].x : this.a[c][2].x) ? (this.a[a][5].x += 3, this.a[a][5].y += 0.2 * (n - 2 - this.a[a][5].y), this.a[a][6].x = this.a[a][5].x - 2, this.a[a][6].y = this.a[a][5].y, this.a[a][1].x -=
            3) : (this.a[a][5].x -= 3, this.a[a][5].y += 0.2 * (n - 2 - this.a[a][5].y), this.a[a][6].x = this.a[a][5].x + 2, this.a[a][6].y = this.a[a][5].y, this.a[a][1].x += 3), this.g[a] = 5, Je(), k = x(s[t + a], $c), dc[a] = dc[a] + lc[a] < k ? dc[a] + lc[a] : k, dc[a] == k && 0 < k && (dc[a] = 0, this.pa[a] = x(s[t + a], 41)), y(t + a, $d) && (k = z(t + a, u), q[a] = V(q[a] + k, 0, ic[a]), je.add(this.a[a][0].x, this.a[a][0].y, 0, k, 65280)), pe()); - 1 == c && Ug(this, a);
        Vg(this, a)
    }
    if (-1 != this.g[a] && (y(t + a, Md) && B(100) < z(t + a, u) && (b += A(z(t + a, gd) * b / 100), g += A(z(t + a, gd) * g / 100)), d.p(this.a[a][5], this.a[a][6]),
            Tg(d), Pg(d, r), c = this.a[a][6].x + d.x / 2, k = this.a[a][6].y + d.y / 2, -1 != (1 != f ? I.K(1, 0, 0, b, g, c, k, Gg(d.x), Gg(d.y)) : w.K(1, 0, 0, b, g, c, k, Gg(d.x), Gg(d.y), e)) && (this.g[a] = -1, y(t + a, td) && (k = dg(1, A(this.L * z(t + a, u) / 100)), Je(), q[a] = V(q[a] + k, 0, ic[a]), pe(), je.add(this.a[a][0].x, this.a[a][0].y, 0, k, 65280)), y(t + a, ud) && 0 == f && B(100) < z(t + a, u) && le.add(this.a[a][0].x, this.a[a][0].y, 2, 0, 0), y(t + a, vd) && 0 == f && B(100) < z(t + a, u)))) {
        g = 100;
        for (b = 0; 4 > b; b++) y(t + b, Qd) && (g += z(t + b, u));
        le.add(this.a[a][0].x, this.a[a][0].y, 1, A(this.L * g / 100), 0)
    }
    $(this.a[a][0],
        this.a[a][1], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5], 4.8, 0.5, 0.5);
    $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][4], 4.8, 0.01, 0.01);
    $(this.a[a][5], this.a[a][6], 2.4, 0.5, 0.5);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8],
        6, 0.1, 0.1);
    0 < this.pa[a] && (this.pa[a]--, d.p(this.a[a][5], this.a[a][6]), Tg(d), Pg(d, r), d.add(this.a[a][6]), 1 != f ? this.q(a, d.x, d.y, 0) : this.q(a, d.x, d.y, e))
};
ea.fff = Lg.prototype.ua;
Lg.prototype.ua = function(a) {
    var b;
    b = 1 - (a >> 2) << 2;
    var c = oc[a] + Wg(pc[a] - oc[a] + 1),
        d = qc[a],
        e = 0.5 * (this.a[a][9].x + this.a[a][10].x),
        g = 0.5 * (this.a[a][9].y + this.a[a][10].y);
    b = 1 != f ? I.m(e - d, g - d, e + d, g + d) : w.m(e - d, g - d, e + d, g + d, b); - 1 != b && (e < (1 != f ? I.a[b][I.n].x : this.a[b][2].x) ? (this.a[a][6].x += 0.2, this.a[a][6].y -= 0.2, this.a[a][5].x -= 0.2) : (this.a[a][6].x -= 0.2, this.a[a][6].y -= 0.2, this.a[a][5].x += 0.2), this.a[a][5].y += 0.2);
    0 != this.h[a] && this.v != a && (0 < this.l[a] && this.l[a]--, 0 == this.l[a] && (-1 != b && (this.l[a] = c, $(this.a[a][5],
        this.a[a][6], 2, 0.2, 0.2), this.g[a] = 6), -1 != this.g[a] && (this.q(a, this.a[a][6].x, this.a[a][6].y, b), this.g[a] = -1, y(t + a, $d) && (c = z(t + a, u), Je(), q[a] = V(q[a] + c, 0, ic[a]), pe(), je.add(this.a[a][0].x, this.a[a][0].y, 0, c, 65280)))), -1 == b && (Ug(this, a), Vg(this, a)));
    $(this.a[a][0], this.a[a][1], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5], 4.8, 0.5, 0.5);
    $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][5],
        this.a[a][6], 9.6, 0.02, 0.02);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8], 6, 0.1, 0.1)
};
ea.fff = Lg.prototype.ma;
Lg.prototype.ma = function(a) {
    var b;
    b = 1 - (a >> 2) << 2;
    var c = oc[a] + Wg(pc[a] - oc[a] + 1),
        d = qc[a],
        e = 0.5 * (this.a[a][9].x + this.a[a][10].x),
        g = 0.5 * (this.a[a][9].y + this.a[a][10].y);
    b = 1 != f ? I.m(e - d, g - d, e + d, g + d) : w.m(e - d, g - d, e + d, g + d, b); - 1 != b && (e < (1 != f ? I.a[b][I.n].x : this.a[b][2].x) ? (this.a[a][5].x += 0.1, this.a[a][6].x += 0.1, this.a[a][1].x -= 0.2) : (this.a[a][5].x -= 0.1, this.a[a][6].x -= 0.1, this.a[a][1].x += 0.2));
    0 != this.h[a] && this.v != a && (0 < this.l[a] && this.l[a]--, 0 == this.l[a] && (-1 != b && (this.l[a] = c, e < (1 != f ? I.a[b][I.n].x : this.a[b][2].x) ?
        ($(this.a[a][5], this.a[a][6], 0, 0.1, 0.1), this.g[a] = 6) : ($(this.a[a][5], this.a[a][6], 0, 0.1, 0.1), this.g[a] = 5)), -1 != this.g[a] && (this.q(a, this.a[a][6].x, this.a[a][6].y, b), this.g[a] = -1, y(t + a, $d) && (c = z(t + a, u), Je(), q[a] = V(q[a] + c, 0, ic[a]), pe(), je.add(this.a[a][0].x, this.a[a][0].y, 0, c, 65280)))), -1 == b && (Ug(this, a), Vg(this, a)));
    $(this.a[a][0], this.a[a][1], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5],
        4.8, 0.5, 0.5);
    $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][5], this.a[a][6], 10.8, 0.01, 0.01);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8], 6, 0.1, 0.1)
};
ea.fff = Lg.prototype.na;
Lg.prototype.na = function(a) {
    var b, c, d = 1 - (a >> 2) << 2;
    b = oc[a] + Wg(pc[a] - oc[a] + 1);
    c = qc[a];
    var e = 0.5 * (this.a[a][9].x + this.a[a][10].x),
        g = 0.5 * (this.a[a][9].y + this.a[a][10].y);
    c = 1 != f ? I.m(e - c, g - c / 2, e + c, g + c / 2) : w.m(e - c, g - c / 2, e + c, g + c / 2, d);
    if (0 != this.h[a] && this.v != a) {
        0 < this.l[a] && this.l[a]--;
        if (0 == this.l[a] && -1 != c) {
            this.l[a] = b;
            this.a[a][6].y -= 2;
            this.a[a][5].y += 2;
            if (1 != f)
                for (b = 0; b < I.index; b++) 0 != I.search[b] && this.q(a, this.a[a][6].x, this.a[a][6].y, b);
            else
                for (b = d; b < d + 4; b++) 0 != w.search[b] && this.q(a, this.a[a][6].x,
                    this.a[a][6].y, b);
            if (y(t + a, $d)) {
                d = z(t + a, u);
                Je();
                for (b = a >> 2 << 2; b < (a >> 2 << 2) + 4; b++) a != b && 0 != q[b] && (q[b] = V(q[b] + d, 0, ic[b]), je.add(this.a[b][0].x, this.a[b][0].y, 0, d, 65280));
                pe()
            }
        } - 1 == c && (Ug(this, a), Vg(this, a))
    }
    $(this.a[a][0], this.a[a][1], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5], 4.8, 0.5, 0.5);
    $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2],
        this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8], 6, 0.1, 0.1)
};
ea.fff = Lg.prototype.va;
Lg.prototype.va = function(a) {
    var b, c, d = new Mg;
    c = 1 - (a >> 2) << 2;
    b = oc[a] + Wg(pc[a] - oc[a] + 1);
    var e = qc[a],
        g = 0.5 * (this.a[a][9].x + this.a[a][10].x),
        k = 0.5 * (this.a[a][9].y + this.a[a][10].y);
    c = 1 != f ? I.m(g - e, k - e, g + e, k + e) : w.m(g - e, k - e, g + e, k + e, c); - 1 != c && this.v != a && (1 != f ? d.p(I.a[c][I.n], this.a[a][6]) : d.p(this.a[c][2], this.a[a][6]), Tg(d), this.a[a][5].x += 0.2 * d.x, this.a[a][5].y += 0.2 * d.y, this.a[a][6].x += 0.2 * d.x, this.a[a][6].y += 0.2 * d.y, this.a[a][1].x -= 0.4 * d.x, this.a[a][1].y -= 0.4 * d.y);
    if (0 != this.h[a] && this.v != a) {
        0 < this.l[a] &&
            this.l[a]--;
        if (0 == this.l[a] && (-1 != c && (this.l[a] = b, this.a[a][5].y -= 1.5, this.a[a][6].y -= 1.5, this.a[a][3].y += 1.6, this.a[a][4].y += 1.6, this.g[a] = 6), -1 != this.g[a])) {
            e = x(s[t + a], $c);
            g = 1;
            258 == s[t + a] && (g = x(s[t + a], Tc), y(t + a, Jd) && (g += z(t + a, u) + A(g * z(t + a, gd) / 100)));
            Je();
            if (0 < e && (e = dg(e - lc[a], 1), e * g <= Qb)) {
                Qb = V(Qb - e * g, 0, 9999999);
                for (b = 0; b < g; b++) je.add(this.a[a][6].x, this.a[a][6].y, 0 > d.x ? 0.5 : -0.5, e, 16776960);
                e = 0
            }
            0 == e && (this.q(a, this.a[a][6].x, this.a[a][6].y, c), y(t + a, $d) && (d = z(t + a, u), q[a] = V(q[a] + d, 0, ic[a]), je.add(this.a[a][0].x,
                this.a[a][0].y, 0, d, 65280)));
            pe();
            this.g[a] = -1
        } - 1 == c && (Ug(this, a), Vg(this, a))
    }
    $(this.a[a][0], this.a[a][1], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5], 4.8, 0.5, 0.5);
    $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][5], this.a[a][6], 1.2, 0.5, 0.5);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8],
        this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8], 6, 0.1, 0.1)
};
ea.fff = Lg.prototype.wa;
Lg.prototype.wa = function(a) {
    var b, c = new Mg,
        d = 1 - (a >> 2) << 2,
        e = mc[a],
        g = nc[a],
        k = oc[a] + Wg(pc[a] - oc[a] + 1),
        r = qc[a];
    for (b = 11; 14 >= b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.95);
    if (0 != this.h[a] && this.v != a) {
        0 < this.l[a] && this.l[a]--;
        b = 0.5 * (this.a[a][9].x + this.a[a][10].x);
        var m = 0.5 * (this.a[a][9].y + this.a[a][10].y);
        b = 1 != f ? I.m(b - r, m - r - 20, b + r, m + 20) : w.m(b - r, m - r - 20, b + r, m + 20, d);
        0 == this.l[a] && -1 != b && (this.l[a] = k, this.a[a][5].x < this.a[a][6].x ? (this.a[a][5].x += 4, this.a[a][4].x -= 4) : (this.a[a][6].x += 4, this.a[a][3].x -= 4), this.a[a][2].y +=
            1, this.g[a] = 14, Je(), k = x(s[t + a], $c), dc[a] = dc[a] + lc[a] < k ? dc[a] + lc[a] : k, y(t + a, $d) && (k = z(t + a, u), q[a] = V(q[a] + k, 0, ic[a]), je.add(this.a[a][0].x, this.a[a][0].y, 0, k, 65280)), pe()); - 1 == b && Ug(this, a);
        Vg(this, a)
    }
    if (-1 != this.g[a] && (y(t + a, Md) && B(100) < z(t + a, u) && (e += A(z(t + a, gd) * e / 100), g += A(z(t + a, gd) * g / 100)), k = 20, y(t + a, Wd) && (k += A(20 * z(t + a, u) / 100)), d = 1 != f ? I.K(1, 0, 0, e, g, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, k, k) : w.K(1, 0, 0, e, g, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, k, k, d), -1 != d)) {
        Je();
        k = x(s[t + a], $c);
        if (dc[a] ==
            k && 0 < k || -1 == k) dc[a] = 0, e = this.a[a][this.g[a]].y, g = A(V(this.a[a][this.g[a]].x, 0, 511) / 8), k = A(V(this.a[a][this.g[a]].y, 0, 255) / 8), 0 <= k - J.o[g] ? e = 8 * J.o[g] + 7 : 3 >= Gg(k - J.I[g]) && (e = 8 * J.I[g] + 7), this.q(a, this.a[a][this.g[a]].x, e, d);
        pe();
        this.g[a] = -1;
        y(t + a, td) && (k = dg(1, A(this.L * z(t + a, u) / 100)), Je(), q[a] = V(q[a] + k, 0, ic[a]), pe(), je.add(this.a[a][0].x, this.a[a][0].y, 0, k, 65280));
        y(t + a, ud) && 0 == f && B(100) < z(t + a, u) && le.add(this.a[a][0].x, this.a[a][0].y, 2, 0, 0);
        if (y(t + a, vd) && 0 == f && B(100) < z(t + a, u)) {
            e = 100;
            for (b = 0; 4 > b; b++) y(t +
                b, Qd) && (e += z(t + b, u));
            le.add(this.a[a][0].x, this.a[a][0].y, 1, A(this.L * e / 100), 0)
        }
        y(t + a, Xd) && B(100) < z(t + a, u) && (e = z(t + a, gd), 1 != f ? c.p(I.a[d][0], this.a[a][1]) : c.p(w.a[d][1], this.a[a][1]), Tg(c), Pg(c, 0.2 * e), 1 != f ? Pg(c, Xg[C[I.id[d]][Yg]] / C[I.id[d]][Zg]) : Pg(c, 0.1), 1 != f ? I.c[d][0].sub(c) : w.c[d][0].sub(c))
    }
    $(this.a[a][0], this.a[a][1], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5], 4.8, 0.5, 0.5);
    $(this.a[a][4],
        this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][5], this.a[a][6], 14.4, 0.02, 0.02);
    $(this.a[a][5], this.a[a][11], 4.8, 0, 0.3);
    $(this.a[a][11], this.a[a][12], 4.8, 0, 0.3);
    $(this.a[a][12], this.a[a][13], 4.8, 0, 0.3);
    $(this.a[a][13], this.a[a][14], 4.8, 0, 0.3);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8], 6, 0.1, 0.1)
};
ea.fff = Lg.prototype.xa;
Lg.prototype.xa = function(a) {
    var b, c, d = new Mg,
        e = 1 - (a >> 2) << 2,
        g = mc[a],
        k = nc[a],
        r = oc[a] + Wg(pc[a] - oc[a] + 1),
        m = qc[a],
        n;
    n = 10 > kc[a] ? 1 : 30 > kc[a] ? 2 : 60 > kc[a] ? 3 : 100 > kc[a] ? 4 : 5;
    y(t + a, ae) && (n += 1);
    for (b = 11; 14 >= b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.95);
    for (b = 15; 20 >= b; b++) X(this.a[a][b], this.c[a][b], 0, 1);
    this.a[a][11].x -= 0.1;
    this.a[a][11].y -= 0.1;
    this.a[a][12].x -= 0.1;
    this.a[a][12].y += 0.1;
    this.a[a][13].x += 0.1;
    this.a[a][13].y -= 0.1;
    this.a[a][14].x += 0.1;
    this.a[a][14].y += 0.1;
    if (0 != this.h[a] && this.v != a) {
        0 < this.l[a] && this.l[a]--;
        b = 0.5 * (this.a[a][9].x + this.a[a][10].x);
        c = 0.5 * (this.a[a][9].y + this.a[a][10].y);
        c = 1 != f ? I.m(b - m, c - m, b + m, c + m) : w.m(b - m, c - m, b + m, c + m, e);
        for (b = 0; b < n && 0 != this.O[a][b]; b++);
        0 == this.l[a] && -1 != c && b != n && (this.l[a] = r, this.O[a][b] = 1, this.aa[a][b] = A(m / 2) + 20, this.ba[a][b] = 0, this.a[a][12].x -= 2, this.a[a][14].x += 2, this.g[a] = 15 + b, this.a[a][this.g[a]].set(this.a[a][0]), this.a[a][this.g[a]].y -= 5, this.c[a][this.g[a]].set(this.a[a][this.g[a]]), 1 != f ? d.p(I.a[c][I.n], this.a[a][this.g[a]]) : d.p(this.a[c][1], this.a[a][this.g[a]]),
            Tg(d), Pg(d, 2), this.a[a][this.g[a]].add(d)); - 1 == c && (Ug(this, a), Vg(this, a))
    }
    for (b = 0; b < n; b++)
        if (0 != this.O[a][b] && (this.g[a] = 15 + b, this.aa[a][b]--, 0 >= this.aa[a][b] && (1 == this.O[a][b] ? (this.O[a][b]++, d.set(this.a[a][0]), d.y -= 5, this.c[a][this.g[a]].set(this.a[a][this.g[a]]), d.p(d, this.a[a][this.g[a]]), r = Tg(d), Pg(d, 2), this.a[a][this.g[a]].add(d), this.aa[a][b] = A(r / 2)) : (this.O[a][b] = 0, this.aa[a][b] = 0, this.ba[a][b] = 0)), this.ba[a][b]--, !(0 < this.ba[a][b]) && (r = 0, y(t + a, Kd) && B(100) < z(t + a, u) && (r = 1), y(t + a, Md) && B(100) <
                z(t + a, u) && (g += A(z(t + a, gd) * g / 100), k += A(z(t + a, gd) * k / 100)), r = 1 != f ? I.K(r, 0, 0, g, k, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, 10, 10) : w.K(r, 0, 0, g, k, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, 10, 10, e), -1 != r))) {
            Je();
            m = x(s[t + a], $c);
            dc[a] = dc[a] + lc[a] < m ? dc[a] + lc[a] : m;
            if (dc[a] == m && 0 < m || -1 == m) dc[a] = 0, this.q(a, this.a[a][this.g[a]].x, this.a[a][this.g[a]].y, r);
            y(t + a, $d) && (r = z(t + a, u), q[a] = V(q[a] + r, 0, ic[a]), je.add(this.a[a][0].x, this.a[a][0].y, 0, r, 65280));
            pe();
            this.ba[a][b] = x(s[t + a], 7)
        }
    $(this.a[a][0], this.a[a][1],
        3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][2], 3.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][3], 4.8, 0.5, 0.5);
    $(this.a[a][1], this.a[a][4], 4.8, 0.5, 0.5);
    $(this.a[a][3], this.a[a][5], 4.8, 0.5, 0.5);
    $(this.a[a][4], this.a[a][6], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][7], 4.8, 0.5, 0.5);
    $(this.a[a][2], this.a[a][8], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][9], 4.8, 0.5, 0.5);
    $(this.a[a][8], this.a[a][10], 4.8, 0.5, 0.5);
    $(this.a[a][7], this.a[a][8], 6, 0.1, 0.1);
    $(this.a[a][1], this.a[a][11], 3.6, 0, 0.1);
    $(this.a[a][1], this.a[a][12], 12, 0, 0.1);
    $(this.a[a][11], this.a[a][12], 9.6, 0.5, 0.5);
    $(this.a[a][1], this.a[a][13], 3.6, 0, 0.1);
    $(this.a[a][1], this.a[a][14], 12, 0, 0.1);
    $(this.a[a][13], this.a[a][14], 9.6, 0.5, 0.5)
};
ea.fff = Lg.prototype.b;
Lg.prototype.b = function() {
    var a, b, c, d = new Mg,
        e = new Mg,
        g = 1 != f ? 4 : 8;
    for (a = 0; a < g; a++) {
        b = x(s[t + a], Wc);
        var k = x(s[t + a], Qc),
            r = 15908203,
            m = 16777215;
        y(t + a, Nd) && (r = 13421772, m = 3342438);
        0 < this.B[a] ? (r = 1989840, m = 5934817) : 0 < this.C[a] ? (r = 9840, m = 1989840) : 0 < this.D[a] && (r = 3381504, m = 3407616);
        0 < this.qa[a] && (this.qa[a]--, m = 16711680);
        Zf = Tf = 1;
        if (a == pb && 0 == f && 2 == vc)
            for (c = 0; 11 > c; c++) K(ab, A(this.a[a][c].x), A(this.a[a][c].y), 12, 12, 0, 0, 12, 12, 1358888960);
        else
            for (c = 0; 11 > c; c++) K(ab, A(this.a[a][c].x), A(this.a[a][c].y), 12, 12, 0, 0,
                12, 12, 1073741824);
        Tf = Zf = 0;
        8 == this.step[a] && (c = (k & 16711680) >> 17 << 16 | (k & 65280) >> 9 << 8 | (k & 255) >> 1, L(this.a[a][1].x, this.a[a][1].y, this.a[a][11].x, this.a[a][11].y, c), L(this.a[a][1].x, this.a[a][1].y, this.a[a][12].x, this.a[a][12].y, c), L(this.a[a][11].x, this.a[a][11].y, this.a[a][12].x, this.a[a][12].y, c), L(this.a[a][1].x, this.a[a][1].y, this.a[a][13].x, this.a[a][13].y, c), L(this.a[a][1].x, this.a[a][1].y, this.a[a][14].x, this.a[a][14].y, c), L(this.a[a][13].x, this.a[a][13].y, this.a[a][14].x, this.a[a][14].y, c));
        L(this.a[a][1].x, this.a[a][1].y, this.a[a][2].x, this.a[a][2].y, m);
        this.step[a] != Ig && (L(this.a[a][1].x, this.a[a][1].y, this.a[a][3].x, this.a[a][3].y, m), L(this.a[a][1].x, this.a[a][1].y, this.a[a][4].x, this.a[a][4].y, m));
        L(this.a[a][3].x, this.a[a][3].y, this.a[a][5].x, this.a[a][5].y, m);
        L(this.a[a][4].x, this.a[a][4].y, this.a[a][6].x, this.a[a][6].y, m);
        this.step[a] != Ig && (L(this.a[a][2].x, this.a[a][2].y, this.a[a][7].x, this.a[a][7].y, m), L(this.a[a][2].x, this.a[a][2].y, this.a[a][8].x, this.a[a][8].y, m));
        L(this.a[a][7].x,
            this.a[a][7].y, this.a[a][9].x, this.a[a][9].y, m);
        L(this.a[a][8].x, this.a[a][8].y, this.a[a][10].x, this.a[a][10].y, m);
        Xf(A(this.a[a][0].x) - 2, A(this.a[a][0].y) - 2, 5, 5, r);
        if (1 == this.step[a]) b = 3, y(t + a, Wd) && (b = 5), U(A(this.a[a][5].x) - 1, A(this.a[a][5].y) - 1, b, b, k), U(A(this.a[a][6].x) - 1, A(this.a[a][6].y) - 1, b, b, k);
        else if (2 == this.step[a]) y(t + a, Fd) && (b += z(t + a, u)), y(t + a, Zd) && (b += z(t + a, gd)), d.p(this.a[a][5], this.a[a][6]), Tg(d), Pg(d, b), d.add(this.a[a][6]), L(this.a[a][6].x, this.a[a][6].y, d.x, d.y, k);
        else if (3 == this.step[a]) d.p(this.a[a][6],
            this.a[a][5]), Tg(d), e.set(d), $g(e), Pg(d, 18), d.add(this.a[a][5]), L(this.a[a][5].x, this.a[a][5].y, d.x, d.y, k), Pg(e, 8), ah(d, this.a[a][6], e), L(this.a[a][5].x, this.a[a][5].y, d.x, d.y, 8421504), e.p(this.a[a][6], e), L(this.a[a][5].x, this.a[a][5].y, e.x, e.y, 8421504), L(d.x, d.y, e.x, e.y, 12632256);
        else if (4 == this.step[a]) ah(d, this.a[a][5], this.a[a][6]), Pg(d, 0.5), U(A(d.x) - 1, A(d.y) - 1, 3, 3, k);
        else if (5 == this.step[a]) d.x = this.a[a][0].x + M(-10, 10), d.y = this.a[a][0].y + M(-10, 0), d.p(this.a[a][6], this.a[a][4]), Tg(d), $g(d), Pg(d,
            8), L(this.a[a][6].x - d.x, this.a[a][6].y - d.y, this.a[a][6].x + d.x, this.a[a][6].y + d.y, 8421504), U(A(this.a[a][6].x + d.x) - 1, A(this.a[a][6].y + d.y) - 1, 3, 3, k);
        else if (6 == this.step[a]) b = A(V(A(this.a[a][6].x) - A(this.a[a][1].x), -8, 8) / 2), -4 == b ? U(A(this.a[a][6].x) - 5, A(this.a[a][6].y) - 2, 7, 2, k) : -3 == b ? U(A(this.a[a][6].x) - 4, A(this.a[a][6].y) - 2, 6, 2, k) : -2 == b ? U(A(this.a[a][6].x) - 3, A(this.a[a][6].y) - 2, 5, 2, k) : -1 == b ? U(A(this.a[a][6].x) - 2, A(this.a[a][6].y) - 2, 3, 2, k) : 0 == b ? U(A(this.a[a][6].x) - 1, A(this.a[a][6].y) - 3, 2, 2, k) : 1 == b ?
            U(A(this.a[a][6].x) - 1, A(this.a[a][6].y) - 2, 3, 2, k) : 2 == b ? U(A(this.a[a][6].x) - 2, A(this.a[a][6].y) - 2, 5, 2, k) : 3 == b ? U(A(this.a[a][6].x) - 2, A(this.a[a][6].y) - 2, 6, 2, k) : 4 == b && U(A(this.a[a][6].x) - 2, A(this.a[a][6].y) - 2, 7, 2, k), U(A(this.a[a][6].x) - 1, A(this.a[a][6].y) - 2, 2, 4, k);
        else if (7 == this.step[a]) b = 3, y(t + a, Wd) && (b = 5), c = (k & 16711680) >> 17 << 16 | (k & 65280) >> 9 << 8 | (k & 255) >> 1, L(this.a[a][5].x, this.a[a][5].y, this.a[a][11].x, this.a[a][11].y, c), L(this.a[a][11].x, this.a[a][11].y, this.a[a][12].x, this.a[a][12].y, c), L(this.a[a][12].x,
            this.a[a][12].y, this.a[a][13].x, this.a[a][13].y, c), L(this.a[a][13].x, this.a[a][13].y, this.a[a][14].x, this.a[a][14].y, c), U(A(this.a[a][14].x) - 1, A(this.a[a][14].y) - 1, b, b, k);
        else if (8 == this.step[a]) {
            r = 10 > kc[a] ? 1 : 30 > kc[a] ? 2 : 60 > kc[a] ? 3 : 100 > kc[a] ? 4 : 5;
            y(t + a, ae) && (r += 1);
            for (b = 0; b < r && 0 != this.O[a][b]; b++);
            b != r && K(ab, A(this.a[a][0].x), A(this.a[a][0].y) - 5, 7, 3, 33, 0, 7, 3, k);
            for (b = 0; b < r; b++) 0 != this.O[a][b] && K(ab, A(this.a[a][15 + b].x), A(this.a[a][15 + b].y), 7, 3, 33, 0, 7, 3, k)
        }
        0 < yc[a] + zc[a] && (Tf = 2, Zf = 1, k = yc[a], k < zc[a] &&
            (k = zc[a]), k < Ac[a] && (k = Ac[a]), k = 4278190080 | 255 * yc[a] / k << 16 | 255 * zc[a] / k << 8 | 255 * Ac[a] / k, K(ab, A(A(this.a[a][9].x + this.a[a][10].x) / 2), A(A(this.a[a][9].y + this.a[a][10].y) / 2), 20, 12, 12, 0, 20, 12, k), Tf = Zf = 0);
        0 < (uc & 1) && 0 < q[a] && (U(A(this.a[a][0].x) - 6, A(this.a[a][0].y) - 6, 13, 2, 10027008), U(A(this.a[a][0].x) - 6, A(this.a[a][0].y) - 6, A(13 * q[a] / ic[a]), 2, 52224));
        a == pb && 0 == f && (0 == vc ? U(A(this.a[a][0].x) - 1, A(this.a[a][0].y) - 8, 3, 3, 16776960) : 1 == vc && (L(A(this.a[a][0].x) - 3, A(this.a[a][0].y) - 14, A(this.a[a][0].x) + 3, A(this.a[a][0].y) -
            14, 16776960), L(A(this.a[a][0].x) - 3, A(this.a[a][0].y) - 14, A(this.a[a][0].x) + 0.5, A(this.a[a][0].y) - 7, 16776960), L(A(this.a[a][0].x) + 3.5, A(this.a[a][0].y) - 14, A(this.a[a][0].x) + 0.5, A(this.a[a][0].y) - 7, 16776960)))
    }
};

var Le = [0, 0, 5, 9, 14, 19, 23, 27, 31, 35, 39, 41, 45, 49, 53, 57, 61, 65, 70, 75, 80, 80, 85, 90, 94, 98, 102, 106, 110, 114, 116, 120, 124, 128, 130, 134, 138, 142, 146, 150, 154, 158, 162, 164, 168, 172, 176, 180, 180, 185, 190, 195, 199, 203, 207, 211, 215, 219, 223, 227, 231, 235, 239, 243, 245, 249, 253, 257, 260, 264, 268, 268, 270, 274, 278, 282, 286, 290, 290, 294, 298, 302, 306, 310, 315, 320, 324, 328, 332, 0, 332],
    Me = 0,
    Yg = 1,
    Zg = 3,
    hg = 6,
    lg = 35,
    mg = 36,
    ng = 37,
    og = 38,
    pg = 39,
    qg = 40,
    Ne = 60,
    jg = 61,
    ig = 62,
    kg = 63,
    C = [
        [1, 0, 1, 1, 3394611, 10053171, 10, 2, 1, 1, 4294967091, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0,
            0, 0, 1, 3, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 1, 7, 40, 189, 40, 19, 80
        ],
        [2, 0, 1, 1, 3394815, 10053171, 20, 2, 1, 1, 4294967091, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 2, 3, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 3, 8, 15, 290, 15, 20, 40],
        [3, 0, 2, 1, 13369344, 10053171, 50, 2, 1, 1, 4294967091, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 3, 5, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 10, 9, 60, 60, 40, 21, 70],
        [4, 0, 3, 1, 255,
            10053171, 40, 4, 0, 2, 4286611584, 1, 16, 16, 8, 8, 0, 0, 100, 10, 5, 100, 0, 0, 0, 0, 4, 5, 1, 100, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 15, 10, 15, 77, 15, 22, 40
        ],
        [5, 0, 2, 2, 8421504, 10053171, 500, 3, 0, 2, 4286611584, 1, 8, 8, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 1, 3, 10, 10, 10, 15, 120, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 100, 9, 3, 7, 5, 48, 10],
        [5, 1, 4, 1, 3394611, 3381555, 50, 3, 1, 4, 4294967295, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0, 0, 3, 4, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 10, 13, 40, 0, 0, 23, 80
        ],
        [6, 1, 2, 1, 8421504, 10053171, 80, 3, 1, 4, 4294967295, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0, 0, 4, 6, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 20, 14, 20, 0, 0, 24, 60],
        [7, 1, 4, 1, 13382451, 10027008, 90, 3, 1, 4, 4294967295, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0, 0, 6, 8, 3, 20, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 30, 12, 15, 78, 15, 25, 30],
        [8, 1, 4, 2, 3394611, 3381555, 200, 3, 1, 4, 4294967295, 1, 24, 24, 12, 12, 0, 0, 20, 40,
            0, 100, 0, 0, 0, 0, 8, 12, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 30, 11, 15, 0, 0, 39, 50
        ],
        [8, 2, 4, 1, 16764057, 13408563, 60, 3, 1, 9, 4294967295, 1, 16, 16, 8, 8, 0, 0, 50, 30, 0, 100, 0, 0, 0, 0, 3, 4, 1, 10, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 30, 15, 30, 0, 0, 26, 70],
        [9, 0, 2, 1, 13395456, 10053171, 120, 2, 1, 1, 4294967091, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 8, 12, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 30, 17, 30, 79, 40, 28,
            80
        ],
        [10, 0, 3, 1, 6684825, 13408563, 110, 4, 0, 2, 4286611584, 1, 16, 16, 8, 8, 0, 0, 150, 10, 4, 100, 0, 0, 0, 0, 6, 8, 1, 120, 50, 20, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 40, 18, 20, 0, 0, 19, 40],
        [11, 2, 4, 1, 16737792, 13408563, 110, 3, 1, 9, 4294967295, 1, 16, 16, 8, 8, 0, 0, 50, 30, 0, 100, 0, 0, 0, 0, 6, 8, 3, 10, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 50, 16, 20, 0, 0, 23, 40],
        [12, 2, 4, 2, 8421504, 10053171, 500, 3, 1, 9, 4286611584, 1, 16, 16, 8, 8, 0, 0, 150, 30, 0, 100, 0, 0, 0, 0, 5, 6, 12, 20, 50, 15, 100, 0, 0, 0,
            0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 200, 16, 5, 0, 0, 40, 10
        ],
        [10, 3, 4, 1, 10079232, 6710886, 90, 1, 1, 2, 4288269312, 1, 8, 8, 8, 8, 0, 0, 100, 20, 5, 100, 0, 0, 0, 0, 1, 4, 1, 0, 20, 50, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 40, 61, 20, 0, 0, 31, 80],
        [10, 1, 2, 1, 6723840, 6710784, 200, 3, 1, 4, 4294967295, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0, 0, 8, 12, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 40, 0, 0, 0, 0, 33, 80],
        [11, 2, 4, 1, 6723840, 6710784, 140, 3, 1, 9, 4294967295,
            1, 16, 16, 8, 8, 0, 0, 50, 30, 0, 100, 0, 0, 0, 0, 6, 8, 2, 10, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 50, 291, 20, 0, 0, 35, 80
        ],
        [12, 3, 4, 2, 10027008, 3342336, 160, 1, 1, 2, 4288217088, 1, 8, 8, 8, 8, 0, 0, 100, 20, 5, 100, 0, 0, 0, 0, 1, 8, 1, 0, 20, 100, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 60, 190, 10, 0, 0, 36, 30],
        [14, 3, 4, 3, 13395456, 10027008, 800, 3, 1, 2, 4291585536, 1, 16, 16, 8, 8, 0, 0, 150, 30, 3, 100, 0, 0, 0, 0, 4, 8, 1, 20, 20, 200, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 1E3, 300, 41, 10, 0, 0, 459, 10
        ],
        [10, 1, 5, 1, 3381759, 3368652, 180, 3, 1, 11, 4288269567, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0, 0, 4, 5, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 40, 0, 0, 0, 0, 37, 100],
        [10, 0, 3, 1, 8421504, 10053171, 140, 4, 0, 12, 4294967295, 1, 8, 8, 8, 8, 0, 0, 150, 10, 5, 100, 0, 0, 0, 0, 3, 6, 2, 100, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 62, 10, 191, 10, 34, 40],
        [12, 1, 5, 1, 13382451, 10027008, 220, 3, 1, 11, 4294927974, 1, 16, 16, 8, 8, 0, 0, 200, 40, 0, 100, 0, 0, 0,
            0, 3, 4, 1, 5, 20, 100, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 60, 0, 0, 0, 0, 32, 30
        ],
        [14, 1, 5, 2, 3381759, 3368652, 330, 3, 1, 11, 4288269567, 1, 32, 32, 16, 16, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 9, 15, 1, 10, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 200, 0, 0, 0, 0, 42, 50],
        [11, 5, 2, 1, 3385907, 10053171, 200, 4, 0, 13, 4281571635, 1, 16, 16, 8, 8, 0, 0, 150, 10, 5, 100, 0, 0, 0, 0, 1, 2, 2, 100, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 54, 40, 80, 40, 0, 0],
        [11,
            1, 4, 1, 13369548, 10053171, 180, 3, 1, 4, 4294954239, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0, 0, 8, 12, 1, 5, 20, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 55, 30, 0, 0, 27, 50
        ],
        [13, 5, 2, 1, 15636787, 10053171, 250, 3, 1, 5, 4294926352, 1, 16, 32, 16, 16, 0, 0, 40, 20, -1, 99, 0, 0, 0, 0, 1, 2, 1, 15, 20, 200, 80, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 70, 56, 15, 0, 0, 0, 0],
        [15, 5, 2, 2, 10027008, 10053171, 1E3, 4, 0, 13, 4288230195, 1, 16, 16, 8, 8, 0, 0, 200, 10, 5, 100, 0, 0, 0, 0, 2, 4, 9, 150, 50, 20, 150, 0, 0, 0, 0, 0, 0,
            0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 300, 57, 15, 0, 0, 43, 30
        ],
        [12, 5, 2, 1, 8421504, 10053171, 220, 4, 0, 12, 4288243251, 1, 16, 16, 8, 8, 0, 0, 150, 10, 5, 100, 0, 0, 0, 0, 2, 5, 1, 100, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 293, 30, 0, 0, 0, 0],
        [12, 2, 5, 1, 3385907, 10053171, 160, 3, 1, 9, 4294967295, 1, 16, 16, 8, 8, 0, 0, 50, 30, 0, 100, 0, 0, 0, 0, 6, 8, 3, 10, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 192, 20, 0, 0, 0, 0],
        [14, 2, 5, 1, 15636787, 10053171, 210, 3, 1, 5,
            4294926352, 1, 16, 32, 16, 16, 0, 0, 40, 20, -1, 99, 0, 0, 0, 0, 1, 2, 1, 15, 20, 200, 60, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 80, 63, 20, 0, 0, 0, 0
        ],
        [16, 5, 2, 3, 6684825, 10053171, 1600, 4, 0, 12, 4284874905, 1, 16, 16, 8, 8, 0, 0, 200, 10, 5, 100, 0, 0, 0, 0, 10, 12, 3, 100, 50, 20, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 300, 0, 0, 0, 0, 44, 10],
        [13, 5, 2, 1, 8421504, 10053171, 240, 4, 0, 13, 4288243251, 1, 16, 16, 8, 8, 0, 0, 150, 10, 5, 100, 0, 0, 0, 0, 1, 2, 3, 100, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 64, 20, 0, 0, 0, 0
        ],
        [12, 6, 1, 1, 3385907, 10053171, 120, 2, 1, 1, 4294967295, 1, 16, 16, 8, 8, 0, 0, 10, 20, 0, 100, 0, 0, 0, 0, 8, 12, 1, 1, 100, 200, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 65, 20, 0, 0, 0, 0],
        [14, 6, 1, 1, 13421619, 10053171, 180, 1, 0, 14, 4294967142, 1, 32, 32, 32, 32, 0, 0, 10, 10, 0, 100, 0, 0, 0, 1, 8, 12, 1, 0, 100, 200, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 80, 66, 20, 67, 20, 0, 0],
        [16, 6, 2, 2, 15636787, 10053171, 1200, 1, 0, 5, 4294926352, 2, 32, 32, 32, 16, 0, 0,
            200, 20, 50, 100, 0, 1, 0, 1, 1, 2, 1, 0, 20, 200, 150, 1, 50, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 400, 81, 5, 0, 0, 45, 10
        ],
        [14, 4, 4, 1, 13421772, 10053171, 200, 2, 1, 1, 4294918208, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 6, 8, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 60, 68, 50, 0, 0, 38, 100],
        [15, 4, 4, 1, 13369344, 10053171, 240, 4, 0, 2, 4286611584, 1, 8, 8, 8, 8, 0, 0, 300, 10, 3, 100, 0, 0, 0, 0, 1, 3, 4, 150, 50, 15, 150, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 2164219920, 1, 16, 48, 12, 36, 50, 20, 0, 100, 0, 0, 0, 1, 2, 1, 0,
            200, 90, 70, 20, 82, 20, 0, 0
        ],
        [14, 6, 1, 1, 15636787, 10053171, 160, 1, 0, 5, 4294926352, 2, 32, 32, 32, 16, 0, 0, 100, 20, 50, 100, 0, 1, 0, 1, 1, 2, 1, 0, 100, 200, 150, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 60, 69, 20, 0, 0, 0, 0],
        [16, 4, 4, 2, 13421772, 10053171, 2E3, 5, 1, 1, 4294918208, 1, 40, 16, 40, 8, 0, 0, 100, 20, 5, 99, 0, 0, 0, 0, 10, 20, 1, 0, 50, 300, 40, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 500, 71, 3, 0, 0, 47, 10],
        [20, 4, 4, 3, 13421772, 10053171, 5E3, 5, 1, 1, 4294918208, 1, 48, 16, 48, 8, 0, 0, 100, 20, 5, 99, 0, 0, 0,
            0, 20, 40, 1, 0, 50, 300, 40, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1E3, 1E3, 29, 3, 0, 0, 30, 20
        ],
        [0, 0, 0, 0, 0, 0, 0, 4, 0, 2, 4286611584, 1, 8, 8, 8, 8, 0, 0, 300, 10, 3, 100, 0, 0, 0, 0, 3, 4, 12, 200, 50, 15, 200, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 5, 2164219920, 1, 16, 48, 12, 36, 50, 20, 0, 100, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [10, 0, 1, 2, 6723840, 10053171, 900, 2, 1, 1, 4294918208, 1, 32, 48, 48, 32, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 10, 20, 1, 1, 50, 30, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 30, 0, 0, 2, 1, 244, 20],
        [10, 0, 1, 1, 3368448,
            6697728, 90, 2, 1, 1, 4294967091, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 3, 4, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 30, 0, 0, 0, 0, 0, 0
        ],
        [11, 0, 3, 1, 10053120, 6697728, 120, 4, 0, 2, 4284900966, 1, 16, 16, 8, 8, 0, 0, 150, 10, 5, 100, 0, 0, 0, 0, 6, 8, 1, 100, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 40, 292, 20, 0, 0, 0, 0],
        [13, 0, 3, 2, 13421772, 6710886, 900, 4, 0, 2, 4288256409, 1, 32, 32, 16, 16, 0, 0, 150, 20, 5, 100, 0, 0, 0, 1, 10, 20, 1, 120, 10, 15, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 200, 285, 10, 0, 0, 341, 10
        ],
        [11, 2, 4, 2, 6710988, 13408563, 600, 3, 1, 11, 4281545625, 1, 32, 32, 16, 16, 0, 0, 100, 40, 0, 100, 0, 0, 0, 0, 8, 16, 1, 10, 50, 30, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 40, 0, 0, 2, 1, 243, 30],
        [11, 2, 4, 1, 6710988, 13408563, 90, 3, 1, 11, 4281545625, 1, 16, 16, 8, 8, 0, 0, 60, 40, 0, 100, 0, 0, 0, 0, 3, 4, 1, 10, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 40, 294, 20, 0, 0, 0, 0],
        [12, 5, 4, 1, 6723891, 10053171, 230, 3, 1, 9, 4291624908, 1, 16, 16, 8,
            8, 0, 0, 60, 30, 0, 100, 0, 0, 0, 0, 3, 4, 2, 10, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 40, 295, 20, 0, 0, 0, 0
        ],
        [14, 2, 4, 2, 16737792, 13408563, 900, 3, 1, 11, 4291585536, 1, 16, 16, 8, 8, 0, 0, 150, 40, 0, 100, 0, 0, 0, 0, 6, 8, 12, 10, 50, 15, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 200, 277, 10, 0, 0, 389, 10],
        [12, 1, 1, 2, 3394611, 10053171, 900, 3, 1, 1, 4294918208, 1, 16, 32, 16, 16, 0, 0, 40, 40, 0, 100, 0, 0, 0, 0, 15, 25, 1, 10, 50, 30, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            1E3, 50, 115, 10, 2, 1, 0, 0
        ],
        [12, 1, 5, 2, 3381555, 6697728, 900, 3, 1, 11, 4281584691, 1, 16, 16, 8, 8, 0, 0, 80, 40, 0, 100, 0, 0, 0, 0, 5, 9, 3, 10, 50, 30, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 50, 0, 0, 2, 1, 245, 15],
        [13, 5, 4, 1, 10027110, 10053171, 240, 4, 0, 13, 4288217190, 1, 16, 16, 8, 8, 0, 0, 120, 10, 5, 100, 0, 0, 0, 0, 3, 4, 2, 100, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 40, 193, 20, 0, 0, 0, 0],
        [15, 1, 2, 2, 13421772, 10053171, 1100, 3, 1, 4, 4294967295, 1, 32, 32, 16, 16, 0, 0, 150, 40, 0, 100, 0, 0, 0, 0, 5, 15,
            1, 30, 10, 15, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 200, 0, 0, 0, 0, 46, 10
        ],
        [15, 7, 4, 1, 13408563, 4465152, 150, 3, 1, 11, 4294967295, 1, 16, 16, 8, 8, 0, 0, 40, 10, 0, 100, 0, 0, 0, 0, 6, 8, 1, 10, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 60, 0, 0, 0, 0, 53, 200],
        [16, 5, 4, 1, 10027110, 10053171, 300, 3, 0, 12, 4291572633, 1, 16, 16, 8, 8, 0, 0, 120, 10, 0, 100, 0, 0, 0, 0, 5, 7, 1, 10, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 60, 0, 0, 0, 0, 52, 100],
        [17, 7, 2, 1, 3381555,
            13056, 300, 3, 1, 11, 4281597747, 1, 16, 16, 8, 8, 0, 0, 80, 10, 0, 100, 0, 0, 0, 0, 8, 12, 1, 10, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 80, 0, 0, 0, 0, 51, 100
        ],
        [18, 7, 2, 2, 13421772, 13421772, 3E3, 3, 1, 4, 4294967295, 1, 16, 16, 8, 8, 0, 0, 150, 40, 0, 100, 0, 0, 50, 0, 3, 5, 5, 20, 80, 100, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 700, 49, 10, 0, 0, 406, 10],
        [15, 1, 4, 1, 13408563, 4465152, 240, 3, 1, 4, 4291598643, 1, 16, 16, 8, 8, 0, 0, 40, 60, 0, 100, 0, 0, 0, 0, 8, 9, 1, 10, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 72, 20, 0, 0, 84, 60
        ],
        [16, 8, 6, 1, 3368448, 10066329, 260, 3, 0, 6, 4281558528, 1, 16, 16, 8, 8, 0, 0, 50, 20, 0, 95, 0, 0, 0, 0, 1, 1, 1, 5, 10, 1E3, 500, 4, 10, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 80, 75, 40, 0, 0, 86, 80],
        [17, 1, 4, 1, 13382451, 4465152, 120, 3, 1, 4, 4291572531, 1, 16, 16, 8, 8, 0, 0, 80, 60, 0, 100, 0, 0, 0, 0, 12, 15, 1, 10, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 50, 73, 20, 0, 0, 85, 60],
        [18, 8, 6, 2, 6723840, 10066329, 1E3, 4, 0, 12, 4284913920, 1, 16, 16, 8,
            8, 0, 0, 150, 20, 5, 100, 0, 0, 0, 0, 3, 5, 3, 100, 10, 1E3, 500, 0, 0, 0, 0, 0, 0, 100, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 300, 74, 15, 83, 15, 104, 30
        ],
        [16, 2, 4, 1, 13408563, 4465152, 180, 3, 1, 9, 4291598643, 1, 16, 16, 8, 8, 0, 0, 30, 30, 0, 100, 0, 0, 0, 0, 4, 5, 2, 10, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 50, 195, 20, 0, 0, 88, 60],
        [17, 8, 6, 1, 6684825, 10066329, 280, 3, 0, 6, 4284874905, 1, 16, 16, 8, 8, 0, 0, 50, 20, 0, 95, 0, 0, 0, 0, 1, 1, 1, 5, 10, 1E3, 500, 4, 15, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 150, 80, 141, 20, 0, 0, 87, 60
        ],
        [18, 2, 4, 1, 13382451, 4465152, 220, 3, 1, 9, 4291572531, 1, 16, 16, 8, 8, 0, 0, 50, 30, 0, 100, 0, 0, 0, 0, 3, 4, 4, 15, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 50, 126, 20, 296, 20, 0, 0],
        [19, 8, 6, 3, 10053324, 10066329, 3500, 4, 0, 12, 4278216192, 1, 16, 16, 8, 8, 0, 0, 150, 20, 5, 100, 0, 0, 0, 0, 1, 1, 1, 120, 25, 1E3, 500, 4, 100, 0, 0, 0, 0, 100, 80, 3, 0, 6, 4278216192, 1, 16, 16, 8, 8, 50, 20, 0, 96, 1, 1, 0, 1, 1, 5, 0, 1E3, 800, 128, 5, 105, 10, 460, 10],
        [17, 0, 2, 1, 13395456, 10066329, 300, 2, 1, 1, 4291585536, 1, 16, 16, 8, 8, 0, 0, 10,
            10, 0, 100, 0, 0, 0, 0, 10, 15, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 40, 119, 20, 0, 0, 93, 60
        ],
        [18, 1, 6, 1, 10092339, 10066329, 240, 3, 1, 4, 4288282419, 1, 16, 16, 8, 8, 0, 0, 40, 40, 0, 100, 0, 0, 0, 0, 9, 10, 1, 10, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 40, 118, 20, 0, 0, 102, 60],
        [19, 1, 6, 1, 16711680, 10066329, 300, 3, 1, 9, 4294901760, 1, 16, 16, 8, 8, 0, 0, 80, 40, 0, 100, 0, 0, 0, 0, 4, 5, 1, 15, 50, 30, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 90, 120, 15,
            0, 0, 89, 50
        ],
        [20, 0, 2, 2, 16777215, 10066329, 4400, 3, 0, 13, 4294967295, 1, 16, 16, 8, 8, 0, 0, 150, 10, 0, 100, 0, 1, 0, 0, 4, 5, 10, 10, 15, 15, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 700, 0, 0, 103, 10, 106, 10],
        [20, 7, 4, 1, 16776960, 13421568, 77, 1, 0, 14, 4294967040, 1, 32, 32, 32, 32, 0, 0, 10, 10, 0, 100, 0, 0, 0, 1, 1, 9, 1, 0, 100, 200, 20, 0, 0, 1E3, 100, 100, 100, 100, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 777, 0, 0, 100, 10, 112, 10],
        [18, 2, 4, 1, 6684927, 6710937, 240, 3, 1, 4, 4284875007, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0,
            0, 8, 10, 1, 5, 50, 30, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 50, 117, 20, 0, 0, 92, 60
        ],
        [19, 2, 4, 1, 13369599, 10053273, 240, 3, 1, 9, 4291559679, 1, 16, 16, 8, 8, 0, 0, 40, 10, 0, 100, 0, 0, 0, 0, 4, 5, 2, 10, 50, 30, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 50, 116, 20, 0, 0, 98, 60],
        [20, 2, 5, 1, 16711833, 13408665, 280, 3, 1, 11, 4294901913, 1, 16, 16, 8, 8, 0, 0, 80, 10, 0, 100, 0, 0, 0, 0, 2, 4, 1, 15, 50, 30, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 100, 0, 0, 90, 60, 99, 60],
        [21,
            2, 4, 2, 16777215, 10066329, 4E3, 3, 1, 9, 4294967295, 1, 16, 16, 8, 8, 20, 0, 150, 10, 0, 100, 0, 0, 0, 0, 4, 5, 10, 10, 15, 15, 90, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 700, 287, 10, 0, 0, 107, 10
        ],
        [20, 7, 2, 1, 16776960, 13421568, 77, 1, 0, 14, 4294967040, 1, 32, 32, 32, 32, 0, 0, 10, 10, 0, 100, 0, 0, 0, 1, 1, 9, 1, 0, 100, 200, 20, 0, 0, 1E3, 100, 100, 100, 100, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 777, 0, 0, 100, 10, 113, 10],
        [19, 4, 4, 1, 13408512, 13421721, 300, 2, 1, 1, 4294918208, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 10, 15, 1, 1, 50,
            20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 60, 127, 20, 0, 0, 91, 60
        ],
        [19, 2, 4, 1, 13395456, 13408614, 240, 3, 1, 9, 4291585536, 1, 16, 16, 8, 8, 0, 0, 40, 10, 0, 100, 0, 0, 0, 0, 3, 4, 3, 10, 50, 30, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 60, 194, 20, 0, 0, 97, 60],
        [21, 4, 4, 1, 13382400, 13408665, 300, 3, 1, 5, 4294926352, 1, 16, 32, 16, 16, 0, 0, 25, 20, -1, 99, 0, 1, 0, 0, 2, 3, 1, 10, 20, 200, 40, 1, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 100, 196, 20, 0, 0, 96, 60],
        [22, 4, 4, 2, 13382400,
            13408665, 1E3, 3, 1, 5, 4294926352, 1, 16, 32, 16, 16, 0, 0, 40, 20, -1, 99, 0, 1, 0, 0, 4, 5, 1, 15, 20, 200, 80, 1, 80, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 150, 297, 20, 279, 40, 108, 40
        ],
        [20, 7, 5, 1, 16776960, 13421568, 77, 1, 0, 14, 4294967040, 1, 32, 32, 32, 32, 0, 0, 10, 10, 0, 100, 0, 0, 0, 1, 1, 9, 1, 0, 100, 200, 20, 0, 0, 1E3, 100, 100, 100, 100, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 777, 0, 0, 100, 10, 114, 10],
        [21, 0, 7, 1, 3394611, 10053171, 300, 2, 1, 11, 4281584691, 1, 16, 16, 8, 8, 0, 0, 40, 10, 0, 100, 0, 0, 0, 0, 10, 15, 1, 1, 50, 20, 40, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 80, 0, 0, 0, 0, 101, 60
        ],
        [22, 0, 7, 1, 3394815, 10053171, 300, 2, 1, 11, 4281584895, 1, 16, 16, 8, 8, 0, 0, 40, 10, 0, 100, 0, 0, 0, 0, 10, 20, 1, 1, 50, 20, 40, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 80, 125, 20, 0, 0, 0, 0],
        [23, 0, 7, 1, 13369344, 10053171, 600, 4, 1, 12, 4294926352, 1, 16, 16, 8, 8, 0, 0, 150, 10, 5, 100, 0, 0, 0, 0, 5, 15, 1, 80, 50, 30, 120, 1, 0, 0, 50, 0, 0, 0, 0, 1, 0, 6, 2164219920, 1, 32, 32, 16, 16, 10, 20, 0, 100, 0, 0, 1, 5, 15, 1, 0, 400, 120, 197, 10, 0, 0, 0, 0],
        [22, 5, 7, 1, 255, 10053171,
            400, 3, 1, 13, 4284887808, 1, 16, 16, 8, 8, 0, 0, 80, 10, 0, 100, 0, 0, 0, 0, 8, 12, 1, 10, 50, 30, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 90, 129, 20, 0, 0, 0, 0
        ],
        [24, 0, 7, 3, 8421504, 10053171, 4800, 3, 1, 3, 4286611584, 1, 16, 32, 16, 16, 0, 0, 150, 20, 5, 100, 0, 0, 0, 0, 8, 15, 3, 100, 30, 200, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 900, 111, 10, 0, 0, 342, 10],
        [22, 1, 7, 1, 13421823, 10053171, 330, 3, 1, 4, 4294967295, 1, 16, 16, 8, 8, 0, 0, 20, 20, 0, 100, 0, 0, 0, 0, 10, 15, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 80, 121, 20, 0, 0, 0, 0
        ],
        [23, 1, 7, 1, 10027008, 10053171, 660, 3, 1, 4, 4288217088, 1, 16, 32, 16, 16, 0, 0, 20, 20, 0, 100, 0, 0, 0, 0, 20, 30, 1, 5, 50, 30, 40, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 120, 122, 10, 0, 0, 0, 0],
        [22, 2, 7, 1, 13421823, 10053171, 280, 3, 0, 12, 4294967295, 1, 16, 16, 8, 8, 0, 0, 60, 20, 0, 100, 0, 0, 0, 0, 8, 12, 1, 10, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 70, 123, 20, 0, 0, 0, 0],
        [23, 2, 7, 1, 10027008, 10053171, 440, 3, 0, 12, 4288217088, 1, 16, 16,
            8, 8, 0, 0, 60, 20, 0, 100, 0, 0, 0, 0, 4, 8, 5, 10, 50, 30, 40, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 110, 124, 10, 0, 0, 0, 0
        ],
        [25, 1, 7, 3, 8421504, 10053171, 5200, 3, 1, 4, 4286611584, 1, 16, 32, 16, 16, 0, 0, 150, 20, 10, 100, 0, 0, 0, 0, 8, 12, 5, 50, 30, 200, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 900, 110, 10, 0, 0, 390, 10],
        [23, 1, 8, 1, 65535, 26214, 340, 3, 1, 4, 4278255615, 1, 16, 16, 8, 8, 0, 0, 20, 20, 0, 100, 0, 0, 0, 0, 10, 15, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            200, 80, 298, 20, 0, 0, 0, 0
        ],
        [23, 3, 8, 1, 65535, 16777215, 220, 5, 0, 13, 4278255615, 1, 16, 16, 8, 8, 50, 0, 150, 10, 5, 100, 0, 0, 0, 0, 1, 5, 6, 0, 50, 30, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 80, 198, 20, 0, 0, 0, 0],
        [25, 5, 8, 1, 16711935, 13421772, 800, 3, 1, 5, 4294926352, 2, 16, 32, 16, 16, 0, 0, 150, 40, 0, 100, 1, 0, 0, 1, 4, 6, 3, 10, 50, 30, 150, 1, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 150, 131, 10, 132, 10, 133, 10],
        [26, 3, 8, 3, 65535, 16777215, 4800, 5, 0, 12, 4278255615, 1, 16, 16, 8, 8, 50, 0, 150, 10, 5, 100, 0, 0, 0, 0,
            1, 9, 12, 0, 30, 200, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 900, 246, 10, 0, 0, 109, 10
        ],
        [24, 0, 8, 1, 13434726, 6723840, 300, 4, 0, 13, 4291624806, 1, 16, 16, 8, 8, 0, 0, 150, 10, 5, 100, 0, 0, 0, 0, 1, 3, 1, 100, 50, 50, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 40, 26, 30, 134, 50, 0, 0],
        [24, 2, 7, 1, 13434726, 6723840, 200, 3, 1, 9, 4291624806, 1, 16, 16, 8, 8, 0, 0, 80, 10, 0, 100, 0, 0, 0, 0, 1, 3, 2, 10, 50, 25, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 40, 26, 30, 135, 50, 0, 0],
        [25,
            4, 9, 1, 16764006, 16777164, 400, 5, 1, 10, 3439316019, 2, 16, 16, 8, 8, 50, 0, 100, 10, 5, 100, 0, 0, 0, 0, 2, 3, 9, 0, 50, 30, 60, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 80, 91, 20, 136, 30, 0, 0
        ],
        [27, 4, 9, 2, 16764006, 16777164, 6E3, 5, 1, 10, 4294954035, 2, 32, 32, 16, 16, 0, 0, 100, 10, 30, 100, 0, 0, 0, 0, 30, 50, 1, 0, 20, 200, 40, 3, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 900, 130, 10, 0, 0, 407, 10],
        [26, 7, 7, 1, 13421823, 10066380, 400, 3, 1, 4, 4291611903, 1, 16, 16, 8, 8, 0, 0, 40, 10, 0, 100, 0, 0, 0, 0, 10, 18, 1, 5, 50, 20, 40, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 90, 199, 30, 0, 0, 146, 90
        ],
        [26, 9, 7, 1, 16764159, 10053273, 300, 3, 0, 12, 4294954239, 1, 16, 16, 8, 8, 0, 0, 80, 10, 0, 100, 0, 0, 0, 0, 10, 15, 1, 10, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 90, 137, 30, 0, 0, 143, 80],
        [28, 9, 8, 1, 16711884, 3342387, 450, 3, 0, 15, 4294901964, 1, 16, 16, 8, 8, 0, 0, 200, 10, 0, 98, 0, 1, 0, 0, 10, 15, 1, 5, 50, 50, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 130, 140, 10, 0, 0, 0, 0],
        [29, 9, 7, 2, 16764006, 16777164,
            7E3, 3, 0, 15, 4278190080, 1, 32, 32, 16, 16, 0, 10, 500, 10, 0, 90, 0, 1, 0, 0, 20, 40, 1, 100, 20, 50, 150, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 900, 138, 5, 0, 0, 172, 10
        ],
        [27, 5, 8, 1, 3368448, 13056, 400, 3, 1, 11, 4288269312, 1, 16, 16, 4, 4, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 6, 8, 1, 2, 100, 15, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 90, 139, 50, 0, 0, 145, 200],
        [27, 7, 7, 1, 16764159, 10053273, 420, 3, 1, 4, 4294954239, 1, 16, 16, 8, 8, 0, 0, 40, 10, 0, 100, 0, 0, 0, 0, 12, 18, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 100, 299, 10, 0, 0, 144, 50
        ],
        [29, 0, 8, 1, 16711884, 3342387, 480, 3, 1, 17, 4294901964, 1, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 10, 15, 1, 15, 50, 50, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 130, 142, 10, 0, 0, 147, 50],
        [30, 5, 8, 3, 10027008, 3342336, 8E3, 3, 1, 11, 4291585638, 1, 16, 16, 4, 4, 0, 10, 500, 10, 0, 100, 0, 0, 0, 0, 10, 22, 15, 3, 50, 15, 180, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 900, 174, 10, 0, 0, 461, 10],
        [28, 7, 7, 1, 21916, 21916, 400, 3, 1, 13, 1610612736,
            1, 16, 16, 4, 4, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 3, 4, 1, 3, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 90, 301, 30, 0, 0, 151, 80
        ],
        [28, 7, 2, 1, 8421504, 6697728, 500, 3, 1, 3, 4278190080, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 12, 18, 1, 15, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 100, 0, 0, 150, 40, 152, 40],
        [30, 9, 10, 1, 13382400, 0, 500, 3, 1, 5, 4294926352, 2, 16, 32, 16, 16, 0, 0, 150, 40, 0, 100, 1, 0, 0, 1, 6, 9, 1, 10, 50, 30, 150, 1, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 400, 150, 0, 0, 148, 30, 149, 30
        ],
        [31, 9, 7, 2, 21916, 21916, 2E3, 3, 1, 17, 1073741824, 1, 16, 16, 4, 4, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 10, 22, 2, 10, 50, 20, 180, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 300, 248, 20, 0, 0, 171, 50],
        [32, 7, 7, 1, 15658496, 13421568, 500, 1, 0, 14, 4293848576, 1, 16, 16, 16, 16, 0, 0, 50, 20, 0, 100, 0, 0, 0, 0, 1, 9, 1, 0, 25, 100, 20, 3, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 150, 182, 20, 0, 0, 186, 60],
        [32, 7, 10, 1, 8421504, 2105376, 600, 3, 1, 17, 4278190233, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0,
            100, 0, 0, 0, 0, 5, 10, 1, 15, 50, 20, 80, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 120, 178, 30, 201, 30, 184, 80
        ],
        [33, 7, 10, 2, 8421504, 2105376, 800, 3, 1, 17, 4278229248, 1, 32, 32, 16, 16, 0, 0, 150, 10, 0, 100, 1, 0, 0, 0, 10, 20, 1, 10, 50, 20, 150, 0, 0, 0, 0, 0, -100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 200, 179, 10, 0, 0, 185, 30],
        [36, 7, 10, 4, 8421504, 2105376, 12E3, 3, 1, 17, 4288217088, 1, 48, 48, 24, 24, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 20, 40, 1, 15, 50, 20, 180, 0, 0, 0, 0, 0, -100, 0, 80, 3, 0, 6, 2151677952, 1, 16, 16, 8, 8, 100, 10, 0,
            99, 0, 0, 0, 10, 20, 9, 0, 3E3, 999, 308, 10, 0, 0, 175, 10
        ],
        [40, 9, 7, 4, 13421772, 8388608, 4E4, 3, 0, 7, 4291611903, 1, 32, 32, 24, 24, 0, 20, 400, 10, 0, 95, 0, 1, 40, 0, 5, 5, 1, 40, 50, 300, 200, 5, 2500, 0, 0, 0, 0, 0, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4E3, 4E3, 94, 5, 0, 0, 95, 20],
        [0, 0, 0, 0, 0, 0, 0, 3, 1, 5, 4294926352, 2, 24, 48, 24, 24, 0, 0, 300, 40, 0, 100, 1, 0, 0, 1, 3, 5, 3, 10, 50, 300, 300, 1, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [29, 8, 7, 1, 16777164, 16764057, 800, 6, 0, 13, 4294954137, 1, 16, 16, 4, 4, 0, 10, 200, 10, 3, 99, 0,
            0, 0, 0, 6, 8, 6, 25, 200, 1E3, 500, 0, 0, 10, -100, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 120, 155, 20, 0, 0, 168, 80
        ],
        [29, 5, 7, 1, 16777164, 10053171, 800, 4, 1, 3, 4288243251, 1, 16, 16, 8, 8, 50, 0, 200, 10, 4, 100, 0, 0, 0, 0, 14, 18, 1, 160, 100, 20, 80, 0, 0, 0, -100, 50, 50, 50, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 120, 157, 30, 300, 30, 164, 80],
        [31, 2, 8, 1, 3394560, 3381504, 300, 3, 0, 6, 4281571584, 1, 16, 16, 8, 8, 0, 0, 250, 20, 0, 100, 0, 0, 0, 0, 1, 1, 1, 2, 300, 25, 80, 4, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 400, 90, 153, 10, 0, 0, 167, 50
        ],
        [33, 8, 7, 3, 16777164, 16764057, 11E3, 706, 0, 12, 4294954137, 1, 16, 16, 8, 8, 30, 0, 300, 10, 3, 99, 0, 0, 0, 0, 33, 33, 23, 40, 100, 1E3, 500, 0, 0, 30, -100, 50, 50, 100, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2500, 300, 170, 10, 0, 0, 343, 10],
        [30, 2, 7, 1, 16763955, 13382400, 400, 3, 1, 9, 4294954035, 1, 16, 16, 8, 8, 0, 0, 100, 20, 0, 100, 0, 0, 0, 0, 3, 4, 3, 10, 50, 30, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 50, 158, 30, 0, 0, 161, 100],
        [31, 3, 7, 1, 16763955, 13382400, 400, 3, 1, 9, 4291572480, 1, 16, 16, 8, 8,
            0, 0, 100, 20, 0, 100, 0, 0, 0, 0, 3, 4, 5, 10, 50, 30, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 50, 154, 30, 0, 0, 162, 100
        ],
        [31, 5, 7, 1, 13382400, 3355443, 800, 7, 0, 0, 4278190080, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, -2, 0, 1, 0, 300, 30, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 100, 156, 10, 200, 10, 0, 0],
        [34, 5, 7, 2, 13382400, 3355443, 8E3, 7, 0, 0, 4278190080, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, -2, 0, 5, 0, 100, 8, 500, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            2500, 300, 281, 10, 0, 0, 177, 10
        ],
        [31, 6, 8, 1, 39168, 13056, 80, 1, 0, 6, 4278216192, 1, 32, 32, 16, 16, 0, 0, 50, 20, 0, 100, 0, 0, 0, 0, 1, 1, 1, 0, 100, 200, 20, 4, 50, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 130, 180, 30, 0, 0, 166, 120],
        [32, 4, 7, 1, 10066176, 3355443, 180, 4, 0, 12, 4288217088, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 4, 100, 0, 0, 0, 0, 10, 10, 1, 150, 50, 30, 60, 0, 0, -10, 0, 0, 0, 0, 0, 4, 0, 5, 4294926352, 2, 16, 32, 16, 32, 100, 10, 4, 98, 0, 1, 0, 6, 9, 5, 0, 200, 140, 181, 20, 0, 0, 163, 80],
        [32, 8, 9, 1, 10066176, 3355443, 300, 8003, 1, 9, 4288230144, 1, 16, 16, 8, 8, 0, 20, 200,
            10, 0, 100, 1, 0, 20, 0, 8, 16, 2, 20, 200, 1E3, 500, 0, 0, -10, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 150, 183, 20, 0, 0, 165, 80
        ],
        [35, 5, 9, 3, 10066176, 3355443, 9E3, 4003, 1, 9, 4288230144, 1, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 50, 60, 7, 13, 100, 50, 200, 0, 0, -10, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2500, 400, 247, 10, 0, 0, 176, 10],
        [33, 10, 8, 1, 13369548, 13421772, 1E3, 3, 1, 4, 4291559628, 1, 16, 16, 8, 8, 0, 0, 10, 10, 1, 100, 0, 0, 0, 0, 1, 1, 1, 5, 10, 100, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 300, 10, 152, 50, 0, 0, 187, 200
        ],
        [36, 10, 8, 2, 13369548, 13421772, 1E4, 1003, 1, 9, 4291559628, 1, 16, 16, 8, 8, 20, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 1, 7, 20, 10, 100, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3E3, 10, 173, 10, 169, 10, 391, 10],
        [38, 10, 11, 1, 15449209, 4210752, 600, 3, 1, 4, 4293639289, 1, 16, 16, 8, 8, 0, 0, 10, 10, 1, 100, 0, 0, 0, 0, 1, 3, 1, 5, 10, 100, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 150, 202, 30, 208, 30, 302, 30],
        [39, 1, 11, 1, 15449209, 13599032, 600, 4, 1, 3, 4291789112, 1, 16, 16, 8,
            8, 0, 20, 200, 10, 5, 100, 0, 0, 0, 0, 1, 1, 5, 80, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 160, 205, 30, 206, 30, 0, 80
        ],
        [40, 0, 12, 1, 6710886, 3355443, 1E3, 3, 1, 18, 4294967040, 1, 16, 16, 4, 4, 0, 0, 500, 10, 0, 100, 1, 0, 0, 0, 20, 40, 1, 10, 200, 30, 200, 3, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 200, 203, 10, 207, 10, 0, 50],
        [42, 0, 12, 3, 6710886, 3355443, 15E3, 3, 1, 18, 4294967040, 1, 16, 16, 16, 16, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 1, 1, 1, 40, 5, 1E3, 250, 3, 0, 30, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 3E3, 1E3, 204, 5, 0, 0, 237, 10
        ],
        [38, 2, 11, 1, 15449209, 13599032, 400, 3, 1, 4, 4293639289, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 1, 3, 1, 5, 10, 100, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 150, 218, 40, 0, 0, 0, 80],
        [41, 3, 12, 1, 13382451, 16737894, 500, 3, 1, 18, 4294901760, 1, 16, 16, 4, 4, 0, 0, 500, 10, 0, 100, 1, 0, 0, 0, 6, 9, 9, 10, 200, 20, 120, 1, 100, 0, 100, -50, 0, 0, -50, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 160, 0, 10, 0, 0, 210, 50],
        [41, 6, 12, 1, 6710886, 11184810, 1E3, 1, 0, 14, 4294967295, 1, 32, 32, 32,
            32, 0, 0, 10, 10, 0, 100, 0, 0, 0, 1, 10, 10, 1, 0, 200, 20, 20, 0, 0, 30, 50, 80, -100, 50, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 200, 0, 20, 0, 0, 209, 80
        ],
        [43, 0, 12, 3, 6710886, 3355443, 15E3, 404, 1, 3, 2162932857, 1, 16, 16, 4, 4, 0, 0, 300, 10, 8, 100, 0, 0, 0, 0, 1, 7, 30, 120, 50, 30, 250, 0, 0, 30, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3E3, 1100, 250, 10, 0, 0, 238, 10],
        [39, 11, 13, 1, 10079232, 39168, 400, 3, 1, 9, 4288269312, 1, 16, 16, 4, 4, 0, 5, 200, 10, 0, 100, 0, 0, 0, 0, 1, 3, 9, 20, 50, 1E3, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 50, 303, 30, 0, 0, 211, 100
        ],
        [39, 11, 13, 1, 13395711, 13408563, 400, 103, 1, 9, 4291585791, 1, 16, 16, 4, 4, 30, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 3, 3, 20, 50, 1E3, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 50, 220, 30, 0, 0, 212, 100],
        [42, 11, 11, 1, 16737843, 10027008, 600, 3, 1, 18, 4294927923, 1, 16, 16, 4, 4, 0, 0, 500, 10, 0, 100, 1, 0, 0, 0, 10, 10, 1, 10, 50, 1E3, 500, 1, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 200, 0, 10, 0, 0, 213, 50],
        [44, 11, 13, 2, 15658496, 47872, 2500, 3, 1, 10, 4293848576,
            2, 16, 24, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 1, 9, 1, 80, 5, 1E3, 500, 3, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 800, 214, 20, 0, 0, 239, 50
        ],
        [40, 2, 11, 1, 16737843, 13599032, 500, 3, 1, 5, 4294926352, 2, 16, 32, 16, 16, 0, 0, 100, 40, 0, 100, 1, 0, 0, 0, 4, 6, 1, 10, 50, 30, 40, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 180, 217, 30, 0, 0, 0, 80],
        [40, 11, 13, 1, 13421772, 13408614, 450, 103, 1, 9, 4291611852, 1, 16, 16, 4, 4, 30, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 4, 3, 20, 50, 1E3, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 50, 216, 30, 0, 0, 0, 80
        ],
        [43, 10, 13, 1, 16737843, 6710886, 1E3, 4, 0, 12, 4288217088, 1, 16, 16, 8, 8, 0, 0, 200, 10, 5, 100, 0, 0, 0, 0, 1, 3, 1, 100, 50, 30, 150, 1, 50, 0, 0, 0, 0, 0, 0, 1, 0, 5, 2164219920, 1, 16, 32, 12, 32, 200, 20, 0, 100, 0, 0, 0, 1, 3, 1, 0, 500, 200, 215, 30, 0, 0, 0, 80],
        [45, 10, 13, 2, 16737843, 10027008, 16E3, 4, 1, 12, 4288217088, 1, 16, 16, 8, 8, 0, 0, 300, 10, 5, 100, 0, 0, 0, 0, 4, 6, 9, 100, 50, 100, 150, 1, 50, 0, 0, 0, 0, 0, 80, 1, 0, 5, 2164219920, 1, 16, 32, 12, 32, 200, 20, 0, 100, 0, 0, 0, 1, 3, 1, 0, 3E3, 1200, 219, 5, 0, 0, 240, 10],
        [44, 10, 13, 2, 16724736, 6697728, 8E3,
            3, 1, 16, 4294914816, 2, 16, 16, 8, 8, 0, 0, 500, 10, 0, 100, 1, 0, 0, 0, 10, 10, 3, 10, 250, 30, 200, 1, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3E3, 1500, 0, 30, 2, 1, 221, 40
        ],
        [44, 11, 13, 2, 13421568, 10053120, 9E3, 3, 1, 9, 4291611648, 1, 32, 32, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 20, 40, 1, 20, 100, 1E3, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3E3, 500, 0, 30, 2, 1, 222, 40],
        [41, 9, 11, 1, 3394815, 26265, 1E3, 4, 0, 12, 4281584895, 1, 16, 16, 8, 8, 0, 0, 200, 10, 5, 100, 0, 0, 0, 0, 1, 9, 1, 80, 50, 30, 80, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 100, 224, 20, 252, 20, 225, 20
        ],
        [46, 4, 11, 1, 16777164, 16764006, 1E3, 4, 0, 13, 3439329228, 2, 16, 16, 8, 8, 0, 20, 200, 10, 15, 100, 0, 0, 0, 0, 5, 5, 1, 40, 25, 100, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 200, 223, 99, 304, 99, 241, 450],
        [42, 9, 11, 1, 13421823, 10053375, 600, 3, 0, 7, 4291611903, 1, 16, 16, 8, 8, 0, 10, 100, 10, 0, 95, 0, 1, 0, 0, 5, 5, 1, 20, 50, 30, 80, 5, 250, 0, 0, 100, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 150, 227, 30, 0, 0, 233, 80],
        [43, 9, 13, 1, 10079283, 10053120, 700,
            3, 0, 6, 4288269363, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 1, 0, 0, 1, 1, 1, 5, 50, 20, 100, 4, 8, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 180, 0, 30, 0, 0, 234, 80
        ],
        [45, 9, 12, 1, 13382451, 16751001, 800, 3, 1, 6, 4294926352, 2, 16, 24, 8, 8, 0, 0, 50, 10, 0, 95, 1, 0, 0, 0, 2, 3, 1, 10, 10, 100, 50, 1, 50, 0, 100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 200, 0, 30, 0, 0, 235, 80],
        [47, 9, 12, 2, 16777062, 3355443, 18E3, 3, 0, 2, 4294967142, 2, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 20, 50, 1, 40, 50, 100, 250, 3, 0, 0, 0, 0, 100, 0, 80, 2, 0, 15, 4294967142,
            1, 16, 16, 8, 8, 50, 10, 0, 0, 0, 0, 0, 1, 9, 30, 0, 3E3, 200, 229, 3, 236, 10, 310, 10
        ],
        [44, 12, 7, 1, 16777215, 3342438, 1200, 2, 1, 15, 4294967295, 1, 16, 16, 8, 8, 0, 0, 40, 40, 0, 100, 0, 0, 0, 0, 11, 15, 1, 1, 50, 30, 20, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 66, 228, 30, 0, 0, 0, 80],
        [44, 2, 4, 1, 16777215, 3342438, 1E3, 3, 1, 9, 4294967295, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 9, 11, 1, 10, 50, 30, 40, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 66, 230, 30, 0, 0, 0, 80],
        [46, 12, 8, 1, 10027008, 13056, 666, 1, 0, 6, 4284874803,
            1, 16, 16, 4, 4, 0, 0, 200, 20, 0, 100, 0, 0, 0, 0, 1, 1, 1, 0, 10, 100, 500, 4, 66, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 666, 231, 10, 305, 10, 251, 20
        ],
        [48, 12, 4, 2, 16777215, 16777215, 18E3, 4, 1, 6, 4284874803, 1, 16, 20, 8, 8, 50, 0, 1E3, 20, 0, 100, 0, 0, 0, 0, 6, 6, 6, 1E3, 350, 1E3, 500, 4, 66, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3E3, 666, 226, 5, 232, 5, 242, 10],
        [44, 12, 11, 1, 16777215, 3342438, 1200, 3, 1, 18, 4294967295, 1, 8, 12, 8, 8, 0, 0, 40, 40, 0, 100, 0, 0, 0, 0, 11, 15, 1, 10, 50, 30, 40, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 66, 255, 40, 0, 0, 0, 80
        ],
        [45, 2, 13, 1, 10066431, 153, 800, 3, 1, 9, 4284901119, 1, 16, 16, 8, 8, 10, 0, 100, 10, 0, 100, 0, 0, 0, 0, 1, 1, 3, 10, 50, 30, 40, 5, 250, 0, 0, 100, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 200, 254, 30, 0, 0, 0, 80],
        [47, 1, 13, 1, 16736272, 13369344, 1200, 1, 0, 5, 4294926352, 2, 12, 32, 8, 16, 0, 0, 200, 20, 8, 100, 0, 1, 0, 0, 3, 4, 1, 0, 10, 100, 500, 1, 50, 0, 100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 300, 256, 20, 257, 20, 0, 20],
        [49, 1, 13, 2, 16760848, 13395456, 19E3, 1, 0, 6, 4294938640,
            2, 28, 28, 16, 16, 0, 0, 500, 20, 0, 100, 1, 0, 0, 0, 3, 4, 1, 0, 10, 100, 500, 1, 50, 0, 100, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3E3, 666, 283, 10, 0, 0, 249, 10
        ],
        [50, 12, 11, 3, 4340274, 4469538, 8E4, 104, 1, 6, 2164219920, 2, 16, 20, 12, 12, 50, 0, 100, 10, -1, 99, 0, 1, 0, 0, 6, 6, 50, 40, 300, 100, 60, 1, 50, 0, 0, 0, 0, 0, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 6E3, 3E3, 159, 5, 0, 0, 160, 20],
        [0, 0, 0, 0, 0, 0, 0, 4, 1, 3, 4284874803, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 8, 100, 0, 0, 0, 0, 1, 1, 1, 80, 150, 50, 500, 4, 66, 0, 0, 0, 0, 0, 0, 2, 0, 6, 4284874854, 2, 16, 16, 8, 8, 66, 20, 0,
            86, 0, 0, 0, 1, 1, 30, 0, 0, 0, 0, 20, 0, 0, 0, 100
        ],
        [45, 10, 7, 1, 16763955, 13382400, 1E3, 3, 1, 4, 4294954035, 1, 16, 16, 8, 8, 0, 0, 10, 10, 1, 100, 0, 0, 0, 0, 2, 3, 1, 5, 10, 100, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 150, 253, 30, 0, 0, 0, 100],
        [48, 10, 7, 2, 13382400, 3355443, 5E3, 7, 0, 0, 4278190080, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, -1, 0, 1, 0, 50, 30, 500, 0, 0, 50, 50, 50, 50, 50, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 300, 258, 20, 306, 20, 2, 1],
        [47, 5, 12, 1, 6710886, 13408614, 1200, 4, 0, 2, 4284900966, 1, 16, 16, 8, 8, 0, 0,
            200, 10, 8, 100, 0, 0, 0, 0, 40, 50, 1, 100, 50, 20, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 300, 259, 10, 0, 0, 0, 20
        ],
        [50, 5, 12, 2, 6684672, 13408614, 18E3, 4, 0, 2, 4284900966, 1, 16, 16, 8, 8, 0, 0, 200, 10, 8, 100, 0, 0, 0, 0, 40, 50, 1, 100, 50, 30, 500, 1, 0, 0, 0, 0, 0, 0, 80, 3, 0, 6, 2164219920, 2, 16, 16, 8, 8, 200, 40, 0, 90, 0, 2, 1, 8, 12, 10, 0, 3E3, 1500, 268, 10, 0, 0, 392, 10],
        [47, 10, 4, 1, 13382400, 4467234, 800, 3, 1, 9, 4291572480, 1, 16, 16, 8, 8, 0, 0, 60, 10, 0, 100, 0, 0, 0, 0, 5, 10, 1, 10, 50, 30, 60, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 350, 200, 0, 30, 0, 0, 260, 150
        ],
        [48, 3, 8, 1, 12303155, 13421772, 800, 1, 1, 17, 4290493235, 1, 16, 16, 8, 8, 0, 0, 100, 10, 5, 100, 0, 0, 0, 0, 5, 10, 1, 0, 50, 30, 200, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 300, 0, 20, 0, 0, 264, 80],
        [49, 7, 14, 2, 13421772, 2237064, 3E3, 1, 0, 14, 4291611852, 1, 32, 32, 24, 24, 0, 50, 60, 10, 0, 100, 1, 0, 0, 0, 80, 90, 1, 0, 50, 20, 40, 0, 0, 0, 0, 50, 0, 0, 50, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 500, 0, 10, 0, 0, 262, 20],
        [51, 7, 14, 3, 13421772, 2237064, 2E4, 4, 0, 14, 4291572531, 1, 64, 64, 56, 56, 0,
            100, 110, 10, 0, 95, 1, 0, 0, 1, 150, 200, 1, 20, 50, 30, 300, 0, 0, 0, 0, 50, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4E3, 1500, 269, 10, 0, 0, 462, 10
        ],
        [48, 2, 5, 1, 6737100, 13107, 900, 3, 1, 17, 4278242355, 1, 16, 16, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 0, 0, 10, 20, 1, 4, 50, 30, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 250, 0, 20, 0, 0, 265, 80],
        [49, 3, 5, 1, 10066431, 13421772, 900, 1, 1, 17, 4281545727, 1, 16, 16, 8, 8, 0, 0, 200, 10, 3, 100, 0, 0, 0, 0, 10, 20, 1, 0, 50, 30, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 350, 250, 0, 20, 0, 0, 263, 80
        ],
        [50, 13, 14, 1, 13421772, 3355443, 1E3, 3, 1, 17, 4294967295, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 1, 5, 1, 15, 20, 50, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 500, 0, 20, 0, 0, 267, 80],
        [52, 13, 14, 1, 13395456, 6697728, 3E3, 3, 1, 18, 4294914816, 1, 16, 16, 8, 8, 0, 0, 500, 10, 0, 100, 0, 0, 0, 0, 1, 5, 1, 6, 20, 50, 150, 1, 100, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1500, 1E3, 261, 40, 0, 0, 266, 40],
        [51, 1, 12, 9, 15449209, 13599032, 2E3, 0, 0, 0, 4278190080, 1, 16, 16, 8, 8, 0, 0, 100, 10,
            0, 100, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 200, 0, 0, 100, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 2E3, 0, 10, 0, 0, 322, 20
        ],
        [49, 7, 11, 1, 7914239, 35839, 1100, 3, 1, 16, 4294967295, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 10, 20, 1, 15, 50, 30, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 250, 0, 20, 0, 0, 0, 80],
        [50, 5, 14, 1, 39168, 3355443, 1400, 3, 1, 16, 4281584691, 1, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 1, 1, 15, 50, 20, 200, 4, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 250,
            0, 20, 0, 0, 0, 80
        ],
        [53, 13, 14, 1, 16763904, 13408512, 5E3, 3, 1, 10, 4294967142, 1, 16, 16, 8, 8, 0, 0, 500, 10, 0, 100, 0, 0, 0, 0, 1, 99, 1, 30, 50, 30, 300, 3, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4E3, 1500, 344, 10, 0, 0, 408, 10],
        [51, 2, 15, 1, 6710886, 3355443, 1200, 3, 1, 11, 4288256409, 1, 8, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 5, 10, 1, 10, 50, 30, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 300, 312, 90, 0, 0, 0, 100],
        [53, 2, 15, 1, 13382451, 6684672, 1400, 3, 1, 18, 4291572531, 1, 8, 16, 8, 8, 0, 0, 500, 10, 0, 100, 0, 2, 0, 0,
            10, 20, 1, 10, 100, 100, 80, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 300, 313, 10, 0, 0, 0, 30
        ],
        [53, 3, 15, 1, 6723891, 3355443, 1400, 3, 1, 11, 4284913971, 1, 8, 16, 8, 8, 0, 0, 500, 10, 0, 100, 0, 0, 0, 0, 1, 1, 1, 2, 300, 100, 200, 4, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 300, 314, 10, 0, 0, 0, 30],
        [55, 2, 15, 2, 13369344, 6710886, 22E3, 3, 1, 18, 4291559424, 1, 8, 16, 8, 8, 0, 0, 1500, 10, 0, 100, 0, 2, 0, 0, 10, 20, 3, 10, 100, 50, 80, 1, 50, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5E3, 1500, 315, 3,
            0, 0, 358, 10
        ],
        [52, 9, 15, 1, 6724044, 3368601, 1E3, 7203, 0, 15, 4281545523, 1, 16, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 2, 0, 0, 1, 9, 4, 15, 50, 30, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 300, 0, 10, 0, 0, 320, 20],
        [52, 2, 15, 1, 13421772, 6710886, 1400, 3, 1, 11, 4288256409, 1, 8, 16, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 5, 10, 1, 10, 50, 30, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 300, 316, 90, 0, 0, 0, 100],
        [53, 12, 15, 1, 13408767, 3342438, 3600, 2, 1, 15, 4291598847, 1, 16, 16, 8, 8, 0, 0, 40, 40, 0, 100, 0, 0, 0, 0, 10, 40, 1,
            1, 50, 20, 20, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 66, 317, 30, 0, 0, 0, 50
        ],
        [54, 12, 15, 1, 6723840, 13056, 3666, 3, 0, 6, 4284913920, 1, 16, 16, 4, 4, 0, 0, 1E3, 20, 0, 100, 0, 2, 0, 0, 1, 1, 1, 1, 10, 100, 500, 4, 6, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 666, 318, 10, 0, 0, 0, 30],
        [56, 12, 15, 2, 10027008, 6697779, 26E3, 3, 1, 18, 4291559424, 1, 8, 16, 8, 8, 0, 0, 1500, 10, 0, 100, 0, 2, 0, 0, 10, 20, 5, 10, 100, 50, 300, 1, 50, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5E3, 1500, 319, 5, 0, 0, 356,
            10
        ],
        [56, 9, 15, 3, 6724044, 3368601, 55E3, 7203, 0, 15, 4281545523, 1, 24, 24, 16, 16, 0, 0, 200, 10, 0, 100, 0, 2, 0, 0, 15, 45, 4, 15, 50, 50, 60, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5500, 5500, 321, 1, 0, 0, 0, 10],
        [54, 2, 15, 1, 6723840, 13056, 1600, 3, 0, 6, 4278216192, 1, 16, 16, 4, 4, 0, 0, 200, 20, 0, 100, 0, 0, 0, 0, 1, 1, 1, 2, 50, 30, 80, 4, 10, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 300, 0, 50, 0, 0, 325, 150],
        [54, 2, 15, 1, 16737792, 10040064, 1600, 3, 0, 13, 4294927872, 1, 16, 16, 4, 4, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 1, 1, 15,
            50, 20, 80, 1, 50, 0, 100, 0, 0, 0, 0, 1, 0, 5, 2164219920, 1, 16, 32, 12, 24, 100, 20, 5, 100, 0, 1, 0, 3, 4, 1, 0, 400, 300, 0, 50, 0, 0, 324, 150
        ],
        [54, 2, 15, 1, 16777062, 6710784, 1600, 3, 1, 10, 4294967193, 1, 16, 16, 4, 4, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 9, 1, 20, 50, 20, 40, 3, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 300, 0, 50, 0, 0, 326, 150],
        [57, 5, 15, 2, 10027008, 6697779, 28E3, 3, 1, 18, 4291559424, 1, 8, 16, 8, 8, 0, 0, 1500, 10, 0, 100, 0, 2, 0, 0, 10, 20, 7, 10, 100, 50, 300, 1, 50, 0, 0, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5E3, 1500, 0, 5,
            0, 0, 357, 10
        ],
        [53, 9, 15, 1, 16777062, 3355443, 1E3, 0, 0, 15, 4278190080, 1, 16, 16, 16, 16, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 0, 0, 0, 10, 50, 50, 80, 0, 0, 1E4, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 400, 9999, 0, 5, 0, 0, 0, 10],
        [55, 1, 7, 1, 16777215, 11059400, 2E3, 3, 1, 4, 4294967295, 1, 16, 16, 8, 8, 0, 0, 20, 40, 0, 100, 0, 0, 0, 0, 5, 5, 1, 5, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 300, 328, 90, 0, 0, 0, 100],
        [56, 0, 3, 1, 6710886, 3355443, 1600, 4, 0, 2, 4281545523, 1, 16, 16, 12, 12, 0, 10, 1E3, 10, 8, 100, 0, 0, 0, 0, 10,
            50, 1, 80, 50, 20, 150, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 500, 330, 15, 0, 0, 327, 30
        ],
        [57, 0, 3, 1, 11059400, 4931105, 1600, 4, 1, 16, 4289249480, 1, 16, 16, 8, 8, 0, 10, 1E3, 10, 5, 100, 0, 0, 0, 0, 5, 5, 1, 100, 50, 20, 150, 2, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 400, 332, 20, 0, 0, 323, 40],
        [59, 0, 3, 2, 16777215, 3355443, 3E4, 4, 0, 2, 4294967295, 1, 32, 32, 24, 24, 0, 10, 300, 10, 5, 100, 0, 1, 0, 1, 100, 500, 1, 120, 250, 50, 300, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 2E3, 329,
            3, 0, 0, 354, 10
        ],
        [56, 4, 16, 1, 16777215, 16777215, 1100, 4, 0, 13, 4294967295, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 5, 100, 0, 0, 0, 0, 5, 5, 1, 40, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 100, 333, 90, 0, 0, 0, 100],
        [57, 4, 16, 2, 10066329, 16777215, 2200, 4, 0, 2, 4288256409, 1, 16, 16, 12, 12, 0, 0, 1E3, 10, 2, 100, 0, 0, 0, 0, 15, 15, 1, 160, 50, 20, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 200, 334, 30, 0, 0, 0, 60],
        [58, 4, 16, 3, 14527231, 16777215, 3300, 4, 0, 2, 4292717311, 1, 16, 16, 12, 12, 0, 0, 500, 40, 2, 100, 0, 2, 0,
            0, 30, 30, 1, 160, 150, 20, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 300, 335, 20, 0, 0, 0, 40
        ],
        [60, 4, 16, 4, 16777215, 16777215, 33E3, 4, 0, 2, 4294967295, 1, 32, 32, 24, 24, 0, 0, 1200, 10, 1, 100, 0, 2, 0, 1, 300, 300, 1, 320, 250, 50, 320, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 500, 331, 5, 0, 0, 355, 10],
        [57, 5, 13, 1, 10035746, 3355443, 2E3, 4, 0, 12, 4288256409, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 2, 100, 0, 0, 0, 0, 1, 3, 1, 200, 10, 50, 80, 0, 0, 1E4, 0, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 500, 300, 0, 50, 0, 0, 336, 150
        ],
        [57, 5, 13, 1, 10066176, 3355443, 2E3, 6, 0, 13, 4284900966, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 1, 100, 0, 0, 0, 0, 1, 3, 5, 15, 50, 50, 80, 0, 0, 1E4, 100, 100, 0, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 300, 0, 50, 0, 0, 337, 150],
        [59, 6, 13, 1, 3355545, 3355443, 1E3, 1, 0, 6, 2164219920, 1, 16, 16, 12, 12, 0, 0, 20, 20, 0, 100, 0, 0, 0, 0, 2, 3, 1, 0, 5, 500, 200, 1, 50, 1E4, 100, 0, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 1E3, 0, 20, 0, 0, 339, 10],
        [61, 6, 16, 2, 10066329, 10066329, 35E3, 6, 0, 15, 4288256409, 1, 16, 16, 16,
            16, 0, 90, 100, 10, 5, 95, 0, 1, 0, 0, 50, 100, 10, 20, 250, 20, 80, 0, 0, 0, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 500, 338, 10, 0, 0, 340, 10
        ],
        [61, 14, 7, 1, 10035746, 6710886, 1500, 1, 0, 12, 4288256409, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 5, 100, 0, 0, 0, 0, 1, 1, 1, 0, 10, 50, 60, 1, 50, 0, 100, 100, 100, 100, 100, 1, 0, 5, 2164219920, 2, 16, 32, 16, 32, 300, 20, 0, 0, 0, 0, 0, 1, 1, 1, 0, 500, 500, 0, 50, 0, 0, 373, 200],
        [61, 4, 16, 1, 6710886, 10035746, 2500, 1, 0, 5, 2164219920, 2, 16, 32, 16, 32, 0, 0, 200, 20, 10, 100, 0, 1, 0, 0, 1, 1, 1, 0, 10, 200, 80, 1, 50, 0, 100, 100, 100, 100, 100,
            0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 500, 0, 50, 0, 0, 370, 200
        ],
        [63, 0, 3, 2, 6710886, 10035746, 35E3, 4, 0, 2, 4288256409, 1, 16, 16, 16, 16, 0, 0, 1E3, 10, 5, 100, 0, 0, 0, 0, 33, 33, 1, 120, 200, 20, 200, 1, 50, 0, 100, 100, 100, 100, 100, 6, 0, 5, 2164219920, 2, 16, 32, 16, 32, 50, 20, 20, 95, 0, 1, 0, 3, 6, 30, 0, 5E3, 5E3, 0, 20, 2, 1, 369, 20],
        [65, 14, 7, 2, 10035746, 6710886, 3E4, 1, 0, 2, 4288256409, 1, 16, 16, 16, 16, 0, 0, 1E3, 10, 5, 100, 0, 0, 0, 0, 66, 66, 1, 0, 50, 20, 80, 1, 50, 0, 100, 100, 100, 100, 100, 6, 0, 5, 2164219920, 2, 16, 32, 16, 32, 500, 20, 20, 95, 0, 1, 0, 3, 6, 30, 0, 6500, 5E3, 0, 5,
            0, 0, 375, 5
        ],
        [70, 13, 2, 2, 10040115, 3355443, 2E4, 104, 1, 6, 2164219920, 2, 16, 20, 12, 12, 30, 0, 100, 10, -1, 99, 0, 1, 0, 0, 3, 4, 30, 40, 300, 100, 60, 1, 50, 0, 100, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8E3, 9999, 403, 4, 0, 0, 0, 5],
        [70, 13, 5, 2, 3355545, 3355443, 2E4, 3, 0, 7, 4291611903, 1, 32, 32, 24, 24, 0, 20, 200, 10, 0, 95, 0, 1, 40, 0, 5, 5, 1, 40, 50, 100, 200, 5, 500, 0, 0, 100, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8E3, 9999, 383, 4, 0, 0, 0, 5],
        [70, 13, 9, 2, 10066227, 3355443, 2E4, 3, 0, 2, 4294967142, 2, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0,
            0, 0, 1, 50, 1, 40, 100, 100, 250, 3, 0, 0, 0, 0, 100, 0, 100, 2, 0, 15, 4294967142, 1, 16, 16, 8, 8, 50, 10, 0, 0, 0, 0, 0, 1, 9, 30, 0, 8E3, 9999, 402, 4, 0, 0, 0, 5
        ],
        [70, 13, 6, 2, 3381555, 3355443, 2E4, 4, 1, 3, 4284874803, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 8, 100, 0, 0, 0, 0, 1, 1, 1, 80, 200, 50, 500, 4, 66, 0, 0, 0, 0, 100, 100, 2, 0, 6, 4284874854, 2, 16, 16, 8, 8, 66, 20, 0, 86, 0, 0, 0, 1, 1, 30, 0, 8E3, 9999, 404, 4, 0, 0, 0, 5],
        [58, 2, 15, 1, 10066278, 16777164, 800, 3, 1, 9, 4294967244, 1, 16, 16, 8, 8, 0, 0, 50, 10, 0, 100, 0, 0, 0, 0, 5, 15, 1, 10, 50, 20, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250,
            100, 0, 50, 0, 0, 0, 100
        ],
        [58, 10, 15, 1, 6723993, 13434879, 800, 3, 1, 4, 4291624959, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 5, 15, 1, 5, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 100, 0, 50, 0, 0, 0, 100],
        [60, 5, 8, 1, 13369599, 10066380, 2400, 3, 1, 4, 4284901119, 1, 16, 16, 8, 8, 0, 0, 300, 40, 0, 100, 0, 0, 0, 0, 10, 30, 3, 10, 50, 30, 180, 2, 50, 0, 0, 100, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 1E3, 346, 10, 0, 0, 352, 10],
        [62, 3, 16, 2, 16777215, 10027008, 38E3, 4, 0, 2, 4286611584, 1, 16, 16, 16, 16, 0, 0, 300, 10, 3, 100, 0,
            0, 0, 0, 10, 10, 1, 200, 50, 15, 350, 1, 50, 0, 50, 0, 0, 0, 90, 1, 0, 5, 3439288336, 1, 16, 48, 16, 48, 1E3, 20, 0, 100, 0, 0, 0, 6, 9, 1, 0, 6E3, 1E3, 359, 10, 0, 0, 463, 10
        ],
        [59, 5, 13, 2, 16777011, 3355392, 25E3, 5, 1, 10, 4294967091, 2, 16, 32, 8, 32, 0, 0, 500, 10, 2, 100, 0, 0, 0, 0, 1, 29, 1, 0, 5, 100, 180, 3, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5E3, 999, 348, 20, 2, 1, 349, 20],
        [60, 8, 14, 2, 17408, 14548957, 25E3, 3, 0, 13, 4278255360, 1, 16, 16, 4, 4, 0, 0, 500, 10, 0, 100, 0, 2, 0, 0, 1, 1, 32, 5, 50, 1E3, 500, 4, 3, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 5E3, 2500, 345, 20, 2, 1, 0, 40
        ],
        [61, 10, 11, 2, 6710886, 13421772, 25E3, 104, 1, 6, 2164219920, 2, 16, 20, 12, 12, 50, 0, 100, 10, -1, 99, 0, 1, 0, 0, 2, 3, 50, 40, 250, 1, 60, 1, 50, 0, 100, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5E3, 5E3, 351, 20, 2, 1, 0, 40],
        [63, 4, 16, 1, 16777215, 10027008, 38E3, 3, 1, 1, 4288217088, 1, 8, 8, 8, 8, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 5, 5, 1, 10, 5, 1E3, 150, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6500, 2E3, 347, 3, 350, 3, 353, 10],
        [60, 3, 7, 1, 16764108, 10053222, 900, 3, 0, 12, 4294954188, 1, 16, 16, 8, 8, 0,
            0, 1E3, 10, 0, 100, 0, 0, 0, 0, 5, 15, 1, 2, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 150, 361, 50, 0, 0, 0, 100
        ],
        [61, 3, 13, 1, 16711782, 6684723, 900, 1, 1, 17, 4294901862, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 5, 100, 0, 0, 0, 0, 10, 10, 1, 0, 30, 200, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 400, 365, 50, 0, 0, 0, 100],
        [62, 0, 3, 2, 13421823, 6710886, 25E3, 4, 0, 7, 4291611903, 2, 16, 16, 12, 12, 0, 0, 1E3, 10, 5, 100, 0, 0, 0, 0, 5, 5, 9, 150, 250, 20, 300, 5, 1500, 0, 100, 0, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 5E3, 5E3, 360, 20, 2, 1, 363, 20
        ],
        [64, 5, 14, 2, 13421823, 16711782, 3E4, 3, 0, 2, 4291611903, 2, 16, 16, 8, 8, 0, 300, 300, 10, 0, 100, 0, 2, 0, 0, 0, 0, 1, 10, 50, 50, 300, 2, 20, 0, 0, 0, 0, 0, 90, 2, 1, 4, 4291611903, 2, 8, 16, 8, 8, 80, 10, 0, 100, 0, 0, 0, 5, 10, 30, 0, 6500, 3E3, 0, 5, 0, 0, 368, 10],
        [63, 0, 3, 1, 16751001, 6697779, 2500, 4, 0, 12, 4294914867, 1, 16, 16, 8, 8, 0, 10, 1E3, 10, 3, 100, 0, 0, 0, 0, 10, 30, 1, 200, 200, 1E3, 1E3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 150, 362, 90, 0, 0, 0, 100],
        [63, 0, 3, 1, 13395507, 6697728, 2500, 4, 0, 13, 4288243251, 1, 16,
            16, 8, 8, 0, 10, 1E3, 10, 3, 100, 0, 0, 0, 0, 1, 5, 7, 200, 200, 1E3, 1E3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 150, 367, 60, 0, 0, 0, 100
        ],
        [63, 5, 10, 1, 16763904, 10053120, 2500, 3, 1, 17, 4294953984, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 0, 100, 0, 0, 0, 0, 5, 15, 1, 5, 400, 1E3, 1E3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 500, 150, 366, 40, 0, 0, 0, 80],
        [66, 4, 16, 1, 13395507, 16763904, 6E3, 2, 1, 17, 4294914867, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 0, 100, 0, 0, 0, 0, 5, 15, 1, 15, 300, 1E3, 1E3, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 650, 1E3, 364, 30, 0, 0, 393, 100
        ],
        [64, 8, 13, 1, 3355647, 10066380, 1E3, 3, 1, 16, 4291611903, 1, 16, 16, 8, 8, 0, 0, 1E3, 10, 0, 100, 0, 0, 0, 0, 5, 5, 1, 5, 200, 1E3, 500, 5, 1E3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 100, 0, 50, 0, 0, 371, 100],
        [65, 1, 14, 9, 16777215, 3355494, 4E4, 4, 1, 17, 4288221457, 1, 32, 48, 32, 32, 0, 50, 500, 10, 3, 100, 0, 0, 0, 0, 10, 50, 1, 200, 150, 20, 300, 1, 50, 0, 0, 0, 0, 0, 0, 3, 0, 6, 3439288336, 2, 16, 16, 16, 16, 80, 20, 0, 90, 0, 2, 0, 6, 9, 50, 0, 5500, 550, 0, 20, 2, 1, 372, 20],
        [63, 1, 16, 1, 16750848, 10053120, 3E3, 3, 1, 4, 4281584691,
            1, 16, 16, 8, 8, 0, 0, 20, 20, 0, 100, 0, 0, 0, 0, 5, 20, 1, 5, 50, 50, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 200, 0, 50, 0, 0, 374, 200
        ],
        [67, 1, 16, 9, 16777164, 13408512, 6E4, 4, 1, 17, 4284901017, 1, 32, 48, 32, 32, 0, 50, 1E3, 10, 3, 100, 0, 0, 0, 0, 10, 50, 1, 200, 150, 20, 300, 5, 1800, 0, 0, 0, 0, 0, 90, 3, 1, 9, 4291624959, 2, 16, 16, 16, 16, 50, 20, 0, 90, 0, 2, 0, 5, 15, 50, 0, 7E3, 1E3, 0, 5, 0, 0, 376, 10],
        [65, 1, 15, 1, 16777215, 10066380, 2E3, 2, 0, 13, 4284900966, 1, 16, 16, 8, 8, 0, 0, 500, 10, 0, 100, 0, 0, 0, 0, 2, 3, 1, 5, 50, 30, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 150, 394, 90, 0, 0, 400, 90
        ],
        [66, 1, 15, 1, 16777079, 7829367, 2E3, 5, 1, 10, 4294967091, 2, 16, 16, 8, 16, 0, 0, 500, 10, 1, 98, 0, 0, 0, 0, 1, 29, 1, 0, 50, 20, 200, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 150, 395, 90, 0, 0, 401, 90],
        [67, 5, 8, 2, 16750848, 10040064, 15E3, 203, 0, 2, 3439288336, 2, 16, 16, 8, 8, 0, 0, 1E3, 10, 0, 100, 0, 0, 0, 0, 5, 10, 30, 5, 150, 30, 500, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 3E3, 396, 15, 397, 15, 399, 15],
        [69, 5, 8, 3, 16763955, 16750848, 3E4, 3, 1, 16, 4294926352,
            2, 32, 32, 24, 24, 0, 0, 1E3, 10, 0, 99, 1, 0, 200, 0, 5, 20, 1, 5, 300, 20, 500, 1, 50, 0, 0, 0, 0, 0, 95, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3E3, 3E3, 398, 10, 0, 0, 409, 20
        ],
        [64, 14, 15, 1, 26316, 10066380, 3E3, 1, 1, 9, 4291611903, 1, 16, 20, 4, 20, 0, 0, 200, 10, 5, 100, 0, 1, 0, 0, 5, 5, 1, 0, 50, 50, 500, 2, 25, 0, 0, 50, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 500, 0, 30, 0, 0, 385, 50],
        [65, 1, 5, 2, 16777215, 3355494, 15E3, 104, 0, 12, 4294967295, 1, 16, 16, 8, 8, 30, 50, 300, 10, 3, 100, 0, 0, 0, 0, 10, 30, 5, 200, 150, 20, 500, 0, 0, 0, 0, 50, 0, 0, 80, 0, 0, 0, 4278190080, 1,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 1500, 0, 20, 0, 0, 386, 30
        ],
        [66, 5, 8, 2, 16776960, 6710886, 15E3, 1, 1, 18, 4294967057, 2, 7, 32, 8, 32, 0, 0, 40, 10, 50, 100, 0, 1, 0, 0, 1, 99, 1, 0, 5, 250, 80, 3, 0, 0, 0, 50, 0, 0, 80, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 550, 2E3, 0, 20, 2, 1, 387, 50],
        [68, 8, 14, 3, 16777215, 26316, 65E3, 104, 1, 9, 4278216396, 1, 16, 20, 8, 8, 200, 0, 500, 10, 3, 100, 0, 0, 0, 0, 25, 50, 30, 200, 150, 1E3, 500, 0, 0, 0, 0, 50, 0, 0, 100, 1, 1, 9, 4278216396, 2, 16, 20, 4, 20, 500, 10, 5, 100, 0, 1, 0, 25, 50, 1, 0, 7E3, 3E3, 0, 5, 0, 0, 388, 10],
        [70, 10, 13, 4, 2368552, 4931105, 25E4,
            4, 1, 17, 4291607446, 1, 32, 32, 8, 8, 0, 25, 200, 10, 8, 100, 0, 0, 0, 0, 100, 200, 1, 80, 50, 100, 100, 0, 0, 0, 0, 100, 0, 0, 100, 3, 1, 6, 4283121185, 1, 16, 16, 8, 8, 50, 40, 0, 94, 0, 2, 0, 8, 8, 15, 1, 8E3, 8E3, 377, 10, 379, 10, 381, 10
        ],
        [0, 0, 0, 0, 0, 0, 0, 6406, 1, 3, 4291611903, 2, 16, 16, 8, 8, 0, 25, 2E3, 10, 0, 100, 0, 2, 0, 0, 25, 50, 2, 10, 100, 100, 500, 5, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 100],
        [66, 5, 17, 1, 6710886, 3355443, 9E3, 0, 0, 1, 4294967295, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 1, 1, 1, 0, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 300, 413, 60, 0, 0, 0, 80
        ],
        [68, 14, 17, 1, 13421772, 6710886, 2E3, 1, 1, 17, 4291598592, 1, 16, 16, 4, 4, 0, 0, 500, 10, 2, 100, 0, 0, 0, 0, 20, 30, 1, 0, 50, 30, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 200, 412, 50, 0, 0, 0, 80],
        [68, 0, 17, 1, 13421772, 6710886, 3E3, 2, 1, 17, 4291572480, 1, 16, 16, 4, 4, 0, 0, 1E3, 10, 0, 100, 0, 0, 0, 0, 10, 20, 1, 5, 50, 30, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 200, 415, 60, 0, 0, 0, 80],
        [71, 5, 17, 2, 16724991, 10027212, 7E4, 4, 0, 12, 4294915071,
            1, 16, 16, 8, 8, 0, 0, 1E3, 10, 2, 100, 0, 2, 0, 0, 50, 60, 1, 150, 10, 50, 500, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 3E3, 414, 3, 0, 0, 0, 20
        ],
        [67, 7, 19, 1, 16751103, 13434726, 3E3, 3, 1, 4, 4278190182, 1, 16, 16, 8, 8, 0, 0, 40, 20, 0, 100, 0, 0, 0, 0, 20, 30, 1, 5, 50, 30, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, 300, 416, 90, 0, 0, 0, 80],
        [68, 10, 18, 1, 13395558, 6697779, 5E3, 3, 0, 13, 4281545523, 1, 16, 16, 4, 4, 0, 0, 80, 20, 0, 100, 0, 0, 0, 0, 7, 13, 1, 10, 20, 200, 80, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 450, 300, 411, 60, 0, 0, 0, 80
        ],
        [69, 9, 19, 1, 13421619, 6723840, 6E3, 4, 1, 14, 4294967142, 1, 16, 16, 8, 8, 20, 60, 120, 10, 2, 100, 0, 0, 0, 0, 1, 45, 10, 50, 50, 30, 250, 3, 0, 0, 100, 100, 0, 0, 95, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 300, 410, 20, 0, 0, 0, 40],
        [72, 9, 19, 2, 16777164, 13408767, 75E3, 1, 0, 15, 4280427042, 1, 24, 24, 16, 16, 0, 80, 1E3, 20, 1, 92, 0, 0, 0, 0, 1, 90, 1, 0, 10, 200, 500, 0, 0, 0, 100, 100, 0, 0, 95, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 3E3, 417, 3, 0, 0, 0, 20],
        [69, 5, 17, 1, 16737843, 6710784, 9E3, 104, 0, 13, 4294941030,
            1, 16, 16, 4, 4, 40, 0, 200, 10, 3, 100, 0, 0, 0, 0, 10, 20, 10, 150, 200, 30, 80, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 400, 0, 50, 0, 0, 419, 100
        ],
        [69, 8, 7, 1, 16751001, 16777164, 9E3, 6, 0, 13, 4294967244, 1, 16, 16, 4, 4, 0, 10, 200, 10, 3, 99, 0, 0, 0, 0, 20, 30, 6, 25, 200, 1E3, 500, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 400, 0, 50, 0, 0, 418, 100],
        [70, 14, 18, 1, 13382604, 6697728, 9E3, 1, 0, 12, 4284874905, 1, 16, 16, 8, 8, 0, 0, 500, 40, 1, 98, 0, 0, 0, 0, 8, 8, 1, 0, 15, 200, 500, 4, 50, 0, 0, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 800, 0, 10, 0, 0, 421, 20
        ],
        [73, 6, 18, 2, 13421619, 10053120, 12E4, 104, 0, 13, 4284913920, 1, 16, 16, 4, 4, 50, 0, 300, 10, 3, 100, 0, 0, 0, 0, 8, 8, 10, 200, 150, 30, 500, 4, 50, 0, 0, 0, 0, 100, 95, 3, 1, 6, 4291611648, 1, 16, 16, 8, 8, 1E3, 40, 0, 99, 0, 2, 0, 8, 8, 3, 0, 6E3, 4E3, 0, 5, 0, 0, 464, 10],
        [70, 15, 8, 1, 6750003, 3368448, 1E4, 3, 0, 13, 4284887808, 1, 16, 16, 4, 4, 0, 0, 100, 10, 0, 100, 0, 0, 0, 0, 8, 9, 1, 5, 50, 20, 60, 0, 0, 0, -50, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 100, 0, 80, 0, 0, 420, 100],
        [70, 15, 8, 2, 6750003, 3368448, 3E4, 4, 0,
            12, 4284926976, 1, 16, 16, 8, 8, 0, 0, 300, 10, 3, 100, 0, 0, 0, 0, 1, 1, 1, 150, 100, 20, 180, 4, 40, 0, -50, 0, 0, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 500, 0, 50, 0, 0, 422, 80
        ],
        [74, 15, 8, 3, 6750003, 3368448, 15E4, 4, 0, 2, 4288217292, 1, 16, 16, 8, 8, 0, 0, 500, 10, 3, 100, 0, 0, 0, 0, 8, 8, 1, 200, 150, 30, 500, 4, 50, 0, 0, 0, 0, 100, 95, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 5E3, 0, 5, 0, 0, 423, 10],
        [71, 4, 17, 1, 16737792, 16750899, 9E3, 4, 0, 12, 4294926352, 2, 16, 16, 4, 4, 0, 20, 100, 10, 20, 100, 0, 0, 0, 0, 6, 8, 1, 40, 50, 50, 80, 1, 50, 1E4, -600, 100, 100, 100,
            100, 1, 0, 5, 2164219920, 2, 16, 32, 16, 32, 100, 20, 0, 0, 0, 0, 0, 6, 8, 1, 0, 600, 500, 0, 50, 0, 0, 424, 100
        ],
        [71, 4, 17, 1, 13421568, 16777164, 9E3, 4, 1, 10, 4294967091, 2, 16, 16, 4, 4, 0, 20, 100, 10, 20, 100, 0, 0, 0, 0, 1, 15, 1, 40, 50, 50, 80, 3, 0, 1E4, 100, 100, -600, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 500, 0, 50, 0, 0, 425, 100],
        [71, 4, 17, 1, 6724095, 13209, 9E3, 4, 1, 9, 4284914175, 2, 16, 16, 4, 4, 0, 20, 100, 10, 20, 100, 0, 0, 0, 0, 4, 5, 1, 40, 50, 50, 80, 2, 50, 1E4, 100, -600, 100, 100, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 500, 0, 50, 0, 0, 427, 80],
        [75, 4, 19, 2, 6710886, 16777215, 12E4, 806, 1, 17, 4284900966, 1, 16, 16, 4, 4, 40, 20, 300, 10, 10, 99, 0, 0, 0, 0, 20, 30, 16, 50, 50, 100, 500, 0, 0, -100, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 5E3, 426, 5, 0, 0, 428, 5],
        [73, 1, 12, 9, 4210752, 13421568, 8E3, 4, 1, 18, 4294967056, 2, 16, 16, 8, 8, 0, 500, 500, 10, 3, 100, 0, 0, 0, 0, 0, 0, 1, 150, 150, 50, 500, 3, 0, 99999, 100, 100, 100, 100, 100, 1, 0, 18, 4294967057, 2, 64, 500, 40, 500, 10, 10, 0, 0, 1, 0, 1, 1, 9999, 1, 0, 1200, 7E3, 430, 10, 432, 10, 434, 10],
        [72, 2, 12, 1, 16764006, 16777164, 5E3, 3, 1, 9, 4288243200, 1,
            16, 16, 4, 4, 0, 0, 500, 10, 0, 100, 0, 0, 0, 0, 6, 9, 1, 2, 50, 50, 80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 500, 431, 80, 0, 0, 0, 80
        ],
        [72, 15, 12, 1, 6736947, 16777164, 1E4, 1, 0, 9, 4288243200, 1, 16, 16, 4, 16, 0, 0, 200, 10, 5, 100, 0, 1, 0, 0, 6, 9, 1, 0, 50, 50, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 600, 500, 429, 80, 0, 0, 0, 80],
        [76, 1, 12, 9, 4210752, 10027008, 12E3, 2, 1, 18, 4294910480, 2, 32, 64, 64, 4, 0, 0, 1E3, 10, 0, 100, 1, 0, 0, 1, 10, 10, 1, 5, 250, 50, 500, 1, 50, 99999, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6E3, 7E3, 433, 6, 435, 6, 436, 6
        ],
        [74, 16, 18, 1, 10027212, 13421823, 1E4, 3, 0, 13, 4284874905, 1, 16, 16, 4, 4, 0, 0, 250, 10, 0, 100, 0, 0, 0, 0, 1, 1, 1, 5, 10, 100, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 700, 70, 0, 50, 437, 99, 438, 100],
        [77, 16, 18, 2, 13369548, 13421823, 15E4, 4803, 0, 12, 4288217241, 1, 16, 16, 4, 4, 0, 0, 500, 10, 0, 100, 0, 2, 0, 0, 1, 1, 3, 10, 5, 1E3, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7E3, 77, 0, 10, 439, 10, 440, 10],
        [74, 4, 20, 1, 13421772, 6710886, 15E3, 2, 1, 19, 4294967295,
            1, 8, 16, 16, 16, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 10, 15, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 100, 0, 80, 0, 0, 445, 300
        ],
        [75, 4, 20, 1, 13382400, 4473924, 1E4, 104, 1, 6, 4294926352, 2, 8, 8, 8, 8, 6, 0, 50, 10, -1, 99, 0, 1, 0, 0, 5, 8, 3, 40, 10, 500, 40, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 200, 0, 10, 0, 0, 443, 20],
        [75, 0, 20, 1, 3355443, 8921600, 25E3, 4, 1, 17, 4294926352, 1, 24, 16, 8, 8, 0, 500, 500, 10, 3, 100, 0, 0, 0, 0, 0, 0, 1, 150, 250, 50, 500, 1, 50, 0, 0, 0, 0, 0, 0, 6, 0, 5, 2164219920, 2, 16, 32, 16, 32, 100,
            20, 5, 99, 0, 1, 0, 3, 5, 9, 0, 800, 200, 0, 10, 0, 0, 444, 20
        ],
        [78, 0, 20, 3, 3355443, 8921600, 15E4, 1604, 1, 17, 4294926352, 1, 24, 16, 8, 8, 0, 0, 500, 10, 3, 100, 0, 0, 0, 0, 10, 15, 3, 150, 50, 10, 500, 1, 50, 0, 0, 0, 0, 0, 100, 6, 0, 5, 2164219920, 2, 16, 32, 16, 32, 100, 20, 5, 99, 0, 1, 0, 3, 5, 9, 0, 8E3, 500, 441, 5, 0, 0, 442, 10],
        [75, 16, 20, 1, 13421772, 6710886, 1E4, 3, 1, 19, 4294967295, 1, 6, 6, 8, 8, 0, 0, 80, 10, 0, 100, 0, 0, 0, 0, 1, 9, 1, 5, 50, 20, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 300, 2, 2, 446, 300, 447, 300],
        [77, 1, 18, 2, 16776960, 6697728, 9E4, 6, 1, 19, 3439329041,
            2, 16, 16, 16, 16, 0, 20, 200, 10, 0, 96, 0, 0, 500, 0, 1, 33, 9, 50, 50, 50, 40, 3, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 5E3, 451, 5, 0, 0, 448, 20
        ],
        [77, 5, 13, 2, 13434624, 3355392, 9E4, 3, 1, 18, 4291624755, 2, 8, 8, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 33, 1, 30, 9, 250, 300, 3, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 5E3, 449, 20, 0, 0, 450, 20],
        [79, 5, 20, 3, 3355443, 16772608, 18E4, 3, 1, 19, 4294962688, 2, 8, 8, 8, 8, 0, 0, 300, 10, 0, 100, 0, 0, 500, 0, 1, 33, 1, 30, 4, 250, 500, 3, 0, 0, 0, 0, 100, 0, 100, 0, 0, 0, 4278190080, 1, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8E3, 5E3, 0, 5, 0, 0, 465, 10
        ],
        [76, 11, 20, 1, 13421772, 6714227, 15E3, 4, 1, 19, 4288256409, 1, 8, 8, 4, 4, 0, 0, 200, 10, 5, 100, 0, 0, 0, 0, 9, 12, 1, 120, 50, 1E3, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 300, 453, 80, 0, 0, 0, 100],
        [78, 11, 20, 3, 10079487, 6714227, 9E4, 4503, 1, 19, 3432631551, 2, 12, 12, 8, 8, 0, 0, 200, 10, 0, 100, 0, 2, 0, 0, 1, 1, 5, 20, 5, 1E3, 500, 5, 500, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4E3, 4E3, 452, 10, 0, 0, 0, 20],
        [76, 1, 17, 1, 13382400, 6714227, 15E3, 3, 1, 6, 4294926352,
            2, 16, 16, 8, 8, 0, 0, 50, 10, -1, 99, 1, 0, 0, 0, 3, 6, 1, 5, 20, 40, 40, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 300, 454, 80, 0, 0, 0, 100
        ],
        [80, 0, 17, 3, 13382400, 6714227, 18E4, 1, 0, 2, 4294926368, 2, 32, 32, 24, 24, 0, 0, 2E3, 10, 0, 100, 1, 0, 500, 0, 3, 6, 1, 0, 500, 1E3, 500, 1, 100, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8E3, 6E3, 0, 5, 0, 0, 467, 10],
        [77, 17, 17, 1, 43520, 4469538, 15E3, 3, 1, 12, 4278233600, 2, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 1, 0, 0, 0, 6, 9, 1, 10, 50, 20, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 500, 455, 60, 0, 0, 0, 100
        ],
        [77, 17, 20, 1, 39355, 2245700, 15E3, 4, 1, 19, 4278229435, 2, 8, 8, 8, 8, 0, 0, 200, 10, 5, 100, 1, 0, 0, 0, 9, 12, 1, 120, 50, 20, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 500, 457, 60, 0, 0, 0, 100],
        [79, 17, 11, 1, 13382400, 3355443, 15E3, 3, 0, 6, 4294926352, 2, 16, 16, 8, 8, 0, 0, 200, 10, 0, 98, 1, 0, 0, 0, 2, 3, 1, 20, 10, 200, 120, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 1500, 458, 40, 0, 0, 0, 20],
        [81, 5, 13, 3, 13408563, 4469538, 2E5, 4, 1, 17, 4291598643, 2, 16, 16, 8, 8,
            10, 0, 1E3, 10, 1, 100, 0, 0, 0, 0, 9, 12, 30, 200, 100, 50, 500, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8E3, 7E3, 456, 5, 0, 0, 468, 10
        ],
        [79, 4, 12, 2, 4473924, 5592405, 9E4, 4, 1, 17, 4284900966, 1, 80, 64, 16, 16, 0, 0, 200, 10, 4, 100, 0, 0, 0, 0, 100, 200, 1, 100, 200, 20, 100, 0, 0, 0, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 9999, 2, 2, 471, 20, 0, 100],
        [79, 4, 12, 2, 4473924, 4473924, 9E4, 6, 1, 3, 4288243251, 1, 16, 16, 8, 8, 0, 0, 200, 10, 4, 100, 0, 0, 0, 0, 60, 90, 10, 30, 200, 20, 200, 0, 0, 0, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 9999, 2, 2, 472, 20, 0, 100
        ],
        [79, 4, 12, 2, 4473924, 3355443, 9E4, 1, 1, 1, 4291559526, 2, 24, 24, 12, 12, 0, 170, 200, 20, 0, 100, 1, 0, 200, 0, 100, 200, 1, 0, 200, 20, 200, 0, 0, 0, 100, 100, 100, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 800, 9999, 2, 2, 477, 20, 0, 20],
        [82, 4, 11, 1, 10066329, 10066329, 5E4, 1604, 1, 17, 4288269567, 2, 16, 16, 8, 8, 10, 100, 1E3, 10, 1, 100, 0, 0, 0, 0, 10, 20, 6, 250, 200, 20, 100, 5, 250, 0, 0, 100, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2E3, 9999, 476, 10, 0, 0, 466, 25],
        [80, 2, 20, 1,
            16777011, 10053171, 12E3, 6403, 1, 20, 4294967091, 2, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 9, 2, 30, 50, 50, 80, 3, 0, 0, 0, 0, 75, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 500, 478, 100, 0, 0, 0, 100
        ],
        [80, 16, 18, 1, 39168, 10053171, 12E3, 5603, 0, 13, 4278229248, 1, 16, 16, 4, 4, 0, 0, 500, 10, 0, 100, 0, 0, 0, 0, 1, 1, 9, 5, 300, 1, 300, 4, 66, 0, 0, 0, 0, 75, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 500, 475, 90, 0, 0, 0, 100],
        [81, 3, 19, 1, 16736272, 10053171, 15E3, 3, 1, 22, 4294926352, 2, 16, 16, 12, 12, 0, 0, 200, 20, 0, 98, 1, 0, 0, 0, 8, 8, 1, 20, 10, 50, 200,
            1, 50, 0, 75, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 1500, 473, 20, 0, 0, 0, 20
        ],
        [83, 8, 8, 2, 26316, 26316, 2E5, 403, 1, 22, 4281571839, 2, 16, 16, 8, 8, 25, 0, 1E3, 10, 0, 100, 0, 0, 0, 0, 2, 4, 8, 10, 25, 1E3, 1E3, 5, 500, 0, 0, 100, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9E3, 3E3, 474, 2, 0, 0, 469, 10],
        [81, 4, 19, 1, 16764108, 10040166, 2E4, 2, 1, 1, 4288230246, 1, 16, 16, 8, 8, 0, 0, 10, 20, 0, 100, 0, 0, 0, 0, 15, 30, 1, 20, 50, 50, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 400, 483, 100, 0, 0, 0, 100],
        [81, 4, 19,
            1, 13421823, 6697881, 2E4, 3, 1, 9, 4284887961, 1, 16, 16, 8, 8, 0, 0, 150, 10, 0, 100, 0, 0, 0, 0, 4, 6, 1, 8, 50, 50, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 400, 486, 100, 0, 0, 0, 100
        ],
        [82, 0, 20, 3, 16764108, 10040166, 1E5, 104, 1, 3, 4294927974, 1, 16, 16, 8, 8, 100, 10, 1E3, 10, 5, 100, 0, 0, 50, 0, 10, 20, 50, 150, 300, 50, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 4E3, 481, 5, 0, 0, 0, 20],
        [84, 0, 20, 5, 13421823, 6697881, 2E5, 104, 1, 3, 4291585791, 1, 16, 16, 8, 8, 100, 10, 160, 10, 5, 100, 0, 2, 100, 0, 10, 20, 50, 150, 300,
            50, 1E3, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9E3, 4E3, 484, 3, 0, 0, 470, 10
        ],
        [82, 5, 20, 1, 13408563, 10053171, 2E4, 4, 1, 20, 4291598643, 1, 16, 16, 8, 8, 0, 10, 1E3, 10, 3, 100, 0, 0, 0, 0, 10, 30, 1, 200, 150, 1E3, 1E3, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 900, 480, 100, 0, 0, 0, 100],
        [82, 5, 20, 1, 3394764, 10053171, 2E4, 4, 1, 19, 4281584844, 1, 8, 8, 8, 8, 0, 10, 1E3, 10, 3, 100, 0, 0, 0, 0, 10, 30, 1, 200, 150, 50, 1E3, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 900, 479, 100, 0,
            0, 0, 100
        ],
        [82, 11, 20, 1, 13395660, 6710886, 2E4, 4, 1, 9, 4291585740, 1, 16, 16, 8, 8, 0, 10, 1E3, 10, 3, 100, 0, 0, 0, 0, 10, 30, 1, 200, 50, 1E3, 1E3, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 900, 482, 100, 0, 0, 0, 100],
        [85, 0, 18, 2, 16763904, 13408563, 2E5, 2, 1, 18, 4294914833, 2, 16, 16, 8, 8, 0, 0, 500, 10, 0, 100, 1, 0, 0, 0, 20, 30, 1, 10, 10, 20, 300, 1, 50, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9E3, 9E3, 485, 3, 541, 10, 543, 10],
        [83, 10, 18, 1, 13382400, 3355443, 2E4, 2, 1, 20, 4294926352, 2, 16, 16, 8, 8, 0, 0, 200, 20, 0, 99, 0,
            0, 20, 0, 2, 3, 1, 1, 10, 100, 500, 1, 50, 0, 100, 0, 0, -200, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 1500, 0, 100, 0, 0, 492, 160
        ],
        [83, 10, 18, 1, 13408512, 3355443, 2E4, 2, 1, 20, 4294967091, 2, 16, 16, 8, 8, 0, 0, 200, 20, 0, 100, 0, 0, 0, 0, 1, 30, 1, 1, 10, 100, 500, 3, 0, 0, 0, 0, 100, -200, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 1500, 0, 100, 0, 0, 491, 160],
        [83, 10, 18, 1, 26316, 3355443, 2E4, 2, 1, 20, 4281558732, 2, 16, 16, 8, 8, 0, 0, 200, 20, 0, 100, 0, 0, 0, 0, 5, 5, 1, 1, 10, 100, 500, 5, 50, 0, 0, 100, 0, -200, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 900, 1500, 0, 100, 0, 0, 494, 160
        ],
        [86, 10, 18, 2, 52224, 3355443, 2E5, 603, 1, 20, 4281584691, 2, 16, 16, 8, 8, 20, 0, 250, 10, 0, 100, 0, 0, 0, 0, 1, 1, 40, 10, 300, 20, 200, 4, 666, 0, 0, 0, 0, 100, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9E3, 9999, 493, 3, 495, 6, 544, 10],
        [84, 7, 21, 1, 13382400, 13395507, 22E3, 3, 1, 9, 4294941030, 1, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 5, 15, 1, 10, 50, 50, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 3333, 487, 50, 0, 0, 0, 100],
        [84, 5, 21, 1, 2254370, 4491332, 22E3, 6406, 0, 13, 4286028151, 1, 16,
            16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 5, 5, 5, 5, 50, 50, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 3333, 488, 25, 0, 0, 0, 100
        ],
        [84, 14, 21, 1, 3368652, 10066380, 22E3, 1, 1, 17, 4291611903, 1, 16, 16, 8, 8, 0, 0, 200, 10, 3, 100, 0, 0, 0, 0, 5, 5, 1, 0, 50, 50, 200, 5, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 3333, 490, 200, 0, 0, 0, 100],
        [87, 16, 21, 3, 10053120, 16763904, 25E4, 6403, 0, 13, 4294953984, 1, 16, 16, 8, 8, 0, 0, 250, 10, 0, 100, 0, 0, 0, 0, 5, 15, 7, 10, 10, 1E3, 400, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 9999, 489, 3, 547, 10, 548, 10
        ],
        [85, 5, 8, 1, 3394815, 13158, 24E3, 3, 0, 12, 4281584895, 2, 16, 16, 8, 8, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 6, 8, 1, 6, 50, 50, 200, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 300, 497, 80, 0, 0, 0, 100],
        [85, 18, 8, 1, 13382655, 3342438, 24E3, 4, 0, 12, 4291572735, 2, 16, 16, 8, 8, 0, 0, 200, 10, 2, 100, 0, 0, 0, 0, 6, 8, 1, 100, 50, 50, 200, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 300, 503, 80, 0, 0, 0, 100],
        [86, 2, 13, 1, 13382400, 10053171, 3E4, 104, 1, 22, 2164219920,
            2, 12, 12, 6, 6, 30, 0, 100, 10, -1, 99, 1, 0, 0, 0, 4, 6, 30, 80, 200, 100, 30, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 900, 498, 10, 0, 0, 528, 30
        ],
        [88, 5, 6, 3, 13434675, 10066227, 24E4, 104, 0, 12, 4294967091, 2, 16, 16, 8, 8, 90, 0, 300, 10, 3, 100, 0, 2, 0, 0, 8, 9, 30, 150, 100, 50, 500, 3, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9E3, 5E3, 499, 3, 502, 3, 529, 5],
        [86, 16, 21, 1, 15658496, 3355443, 15E4, 6403, 1, 20, 4294967091, 2, 12, 12, 6, 6, 0, 0, 150, 10, 0, 100, 0, 2, 0, 0, 3, 3, 3, 10, 10, 250, 200, 3, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080,
            1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 5E3, 496, 10, 500, 10, 501, 10
        ],
        [86, 5, 6, 1, 13408512, 10053120, 24E3, 4, 0, 12, 4294954035, 2, 16, 16, 8, 8, 0, 0, 200, 10, 3, 100, 0, 0, 0, 0, 6, 8, 1, 100, 50, 50, 200, 0, 0, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 400, 505, 100, 0, 0, 0, 100],
        [86, 18, 6, 1, 10066380, 6710937, 24E3, 1, 0, 7, 4288269567, 2, 12, 12, 8, 8, 0, 0, 200, 10, 2, 100, 0, 0, 0, 0, 1, 5, 1, 0, 100, 50, 200, 5, 500, 0, -100, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 400, 504, 100, 507, 100, 510, 100],
        [87, 1, 13, 1, 16724736, 16750848,
            3E4, 3, 1, 18, 4294926352, 2, 16, 16, 8, 8, 0, 0, 1E3, 10, 0, 100, 1, 0, 0, 0, 10, 20, 1, 5, 50, 50, 500, 1, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 1E3, 509, 10, 0, 0, 530, 20
        ],
        [89, 5, 8, 3, 16724736, 16750848, 24E4, 2406, 1, 20, 4294926352, 2, 16, 16, 8, 8, 0, 0, 1500, 10, 0, 100, 0, 2, 0, 0, 30, 50, 7, 5, 100, 50, 500, 1, 50, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9E3, 6E3, 508, 3, 511, 3, 531, 5],
        [87, 16, 21, 1, 16763904, 3355443, 15E4, 12806, 1, 20, 4294967091, 2, 12, 12, 6, 6, 0, 0, 150, 10, 0, 100, 0, 2, 0, 0, 4, 4, 4, 10, 10, 250, 200, 3, 0, 0, 0,
            0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 900, 6E3, 506, 10, 532, 20, 545, 40
        ],
        [87, 6, 21, 1, 39168, 13395456, 2E4, 1, 0, 21, 4291624908, 1, 16, 16, 8, 8, 0, 0, 30, 30, 0, 100, 0, 0, 0, 0, 4, 6, 1, 0, 50, 50, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 300, 519, 150, 515, 150, 538, 400],
        [87, 6, 21, 2, 8930304, 13395456, 26E3, 104, 1, 3, 4284887808, 1, 16, 16, 8, 8, 20, 0, 500, 10, 3, 100, 0, 0, 0, 0, 5, 5, 2, 150, 5, 250, 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 400, 512, 15, 518, 15, 539, 30],
        [88, 6, 21,
            3, 13421619, 13395456, 32E3, 1, 1, 18, 4294967091, 2, 8, 32, 8, 32, 0, 0, 40, 10, 50, 100, 0, 1, 0, 0, 1, 55, 1, 0, 5, 250, 250, 3, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 500, 513, 15, 514, 15, 537, 30
        ],
        [90, 6, 21, 4, 16724736, 16750848, 25E4, 104, 1, 21, 4294926352, 2, 32, 32, 24, 24, 60, 0, 900, 10, 3, 99, 0, 2, 0, 0, 12, 16, 15, 100, 100, 50, 500, 1, 50, 0, 100, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E4, 600, 516, 3, 517, 3, 540, 5],
        [88, 1, 20, 1, 13434879, 16764006, 5E3, 3, 1, 4, 4291624959, 1, 32, 32, 16, 16, 0, 0, 30, 30, 0, 100, 0, 0, 0, 0, 10,
            20, 1, 20, 100, 50, 50, 0, 0, 1E3, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 500, 522, 200, 526, 200, 535, 500
        ],
        [89, 16, 13, 5, 4473907, 15658496, 7E4, 3, 1, 20, 4294967091, 2, 32, 16, 4, 4, 0, 0, 200, 10, 0, 100, 0, 0, 0, 0, 1, 30, 1, 30, 5, 1E3, 300, 3, 0, 0, 0, 0, 100, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 700, 520, 5, 533, 10, 534, 10],
        [89, 13, 10, 3, 4469555, 16728080, 8E4, 3, 1, 6, 4294926352, 2, 32, 40, 32, 32, 0, 0, 100, 10, -1, 98, 0, 1, 0, 0, 12, 15, 2, 20, 5, 250, 300, 1, 50, 0, 100, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 1E3, 600, 521, 5, 523, 5, 524, 5
        ],
        [91, 1, 20, 1, 16737996, 16764006, 25E4, 2, 1, 19, 3439290060, 2, 32, 32, 32, 32, 0, 0, 1E3, 10, 0, 100, 1, 0, 0, 0, 500, 600, 1, 5, 600, 50, 500, 0, 0, 1E3, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E4, 1E3, 525, 3, 527, 3, 536, 5],
        [89, 4, 4, 1, 13421772, 3355494, 3E4, 2, 1, 1, 4294914867, 1, 16, 16, 8, 8, 0, 0, 10, 10, 0, 100, 0, 0, 0, 0, 60, 80, 1, 1, 50, 20, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 1E3, 0, 100, 0, 0, 0, 100],
        [90, 4, 4, 1, 13369344, 3355494, 5E4, 4, 0, 2, 4284900966, 1, 8, 8, 8, 8, 0, 0, 300, 10,
            3, 100, 0, 0, 0, 0, 10, 30, 4, 150, 50, 15, 150, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 24, 4294926352, 1, 16, 48, 12, 36, 100, 20, 0, 100, 0, 0, 0, 10, 20, 1, 0, 1E3, 3E3, 0, 10, 0, 0, 0, 10
        ],
        [90, 0, 3, 1, 13369344, 13421772, 5E4, 104, 1, 17, 4284901068, 1, 16, 16, 8, 8, 50, 20, 300, 10, 5, 100, 0, 0, 50, 0, 5, 5, 10, 100, 50, 15, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1E3, 3E3, 0, 10, 0, 0, 0, 10],
        [92, 4, 4, 2, 13421772, 3355494, 3E5, 5, 1, 1, 4294914867, 1, 32, 16, 32, 8, 0, 0, 200, 20, 5, 99, 0, 0, 0, 0, 300, 500, 5, 0, 150, 100, 250, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 4278190080, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 1E4, 9999, 542, 10, 0, 0, 546, 10
        ],
        []
    ],
    bh = [20, 20, 20, 20, 18, 8, 20, 20, 8, 20, 16, 16, 20, 20, 16, 16, 16, 14, 8],
    ch = [20, 20, 20, 20, 24, 40, 20, 20, 20, 20, 16, 24, 20, 20, 16, 16, 16, 14, 40],
    Xg = [1, 0.2, 1, 0.2, 2, 0.5, 1, 0.1, 1, 0.1, 1, 1, 0.1, 0.1, 1, 1, 0.2, 1, 0.5],
    I = new dh;

function dh() {
    var a, b;
    this.a = Array(100);
    for (a = 0; 100 > a; a++) this.a[a] = Array(21);
    this.c = Array(100);
    for (a = 0; 100 > a; a++) this.c[a] = Array(21);
    this.id = new Int32Array(100);
    this.step = new Int32Array(100);
    this.d = new Int32Array(100);
    this.count = new Int32Array(100);
    this.state = new Int32Array(100);
    this.r = new Int32Array(100);
    this.l = new Int32Array(100);
    this.search = new Int32Array(100);
    this.S = new Int32Array(100);
    this.C = new Int32Array(100);
    this.X = new Int32Array(100);
    this.D = new Int32Array(100);
    this.H = new Int32Array(100);
    this.B = new Int32Array(100);
    this.bb = this.index = 0;
    this.n = 20;
    for (a = 0; 100 > a; a++)
        for (b = 0; 21 > b; b++) this.a[a][b] = new Mg;
    for (a = 0; 100 > a; a++)
        for (b = 0; 21 > b; b++) this.c[a][b] = new Mg
}
ba = dh.prototype;
ba.j = function() {
    this.bb = this.index = 0
};
ba.add = function(a, b, c) {
    if (100 != this.index && 100 != this.bb) {
        a *= 8;
        b *= 8;
        for (var d = 0; 21 > d; d++) Ng(this.a[this.index][d], a + B(1), b + B(1)), this.c[this.index][d].set(this.a[this.index][d]);
        this.id[this.index] = c;
        this.step[this.index] = C[c][Yg];
        this.d[this.index] = 0;
        this.count[this.index] = 0;
        this.state[this.index] = 0;
        this.r[this.index] = C[c][hg];
        this.l[this.index] = 0;
        this.search[this.index] = 0;
        this.S[this.index] = 0;
        this.C[this.index] = 0;
        this.X[this.index] = 0;
        this.D[this.index] = 0;
        this.H[this.index] = 0;
        this.B[this.index] = 0;
        this.index++;
        this.bb++
    }
};
ba.sub = function(a) {
    for (var b = 0; 21 > b; b++) this.a[a][b].set(this.a[this.index - 1][b]), this.c[a][b].set(this.c[this.index - 1][b]);
    this.id[a] = this.id[this.index - 1];
    this.step[a] = this.step[this.index - 1];
    this.d[a] = this.d[this.index - 1];
    this.count[a] = this.count[this.index - 1];
    this.state[a] = this.state[this.index - 1];
    this.r[a] = this.r[this.index - 1];
    this.l[a] = this.l[this.index - 1];
    this.search[a] = this.search[this.index - 1];
    this.S[a] = this.S[this.index - 1];
    this.C[a] = this.C[this.index - 1];
    this.X[a] = this.X[this.index - 1];
    this.D[a] =
        this.D[this.index - 1];
    this.H[a] = this.H[this.index - 1];
    this.B[a] = this.B[this.index - 1];
    this.index--
};
ba.h = function(a, b, c) {
    var d = new Mg;
    d.p(this.a[a][b], this.c[a][b]);
    this.a[a][b].set(this.c[a][b]);
    var e = (Og(d) >> 2) + 1;
    Pg(d, 1 / e);
    for (var g, k, r, m = 0; m < e; m++) g = this.a[a][b].y + d.y, k = V(this.a[a][b].x, 0, 511) >> 3, r = V(g, 0, 255) >> 3, k = J.e[r][k], 0 > g || 256 <= g || (0 <= k && 8 >= k ? (0 < d.y && (this.state[a] |= 2), d.x *= c, d.y = -d.y) : this.a[a][b].y = g), g = this.a[a][b].x + d.x, k = V(g, 0, 511) >> 3, r = V(this.a[a][b].y, 0, 255) >> 3, k = J.e[r][k], 0 > g || 512 <= g || (0 <= k && 8 >= k ? (d.y *= c, d.x = -d.x, this.state[a] |= 1) : this.a[a][b].x = g)
};
ba.m = function(a, b, c, d) {
    for (var e = 0.5 * (a + c), g = 1E3, k = -1, r, m, n, G = 0; G < this.index; G++) r = C[this.id[G]][Zg], m = C[this.id[G]][Yg], n = (bh[m] >> 1) * ((r >> 1) + 1), r *= ch[m] >> 1, this.search[G] = 0, m = this.a[G][this.n], 0 == this.r[G] || m.x - n > c || m.x + n < a || m.y - r > d || m.y + r < b || (this.search[G] = 1, Gg(m.x - e) < g && (g = Gg(m.x - e), k = G));
    return k
};
ba.K = function(a, b, c, d, e, g, k, r, m) {
    var n = -1,
        G, H, N;
    w.L = 0;
    r *= 0.5;
    m *= 0.5;
    for (var E = 0; E < this.index && (G = C[this.id[E]][Zg], H = C[this.id[E]][Yg], N = A(bh[H] / 2) * A(G / 2 + 1), G *= A(ch[H] / 2), 0 == this.r[E] || this.a[E][this.n].x - N > g + r || this.a[E][this.n].x + N < g - r || this.a[E][this.n].y - G > k + m || this.a[E][this.n].y + G < k - m || (N = d + A(B(e - d + 1)), 4 == b ? (this.D[E] = c - A(c * C[this.id[E]][pg] / 100), this.H[E] = N, 0 > C[this.id[E]][pg] && (this.H[E] = dg(1, N - A(N * C[this.id[E]][pg] / 100)))) : (0 == b ? N = dg(1, N - C[this.id[E]][lg]) : 1 == b ? N = dg(1, N - A(N * C[this.id[E]][mg] /
            100)) : 2 == b ? N = dg(1, N - A(N * C[this.id[E]][ng] / 100)) : 3 == b && (N = dg(1, N - A(N * C[this.id[E]][og] / 100))), this.r[E] = dg(this.r[E] - N, 0), 0 == (tc & 1) && je.add(this.a[E][this.n].x, this.a[E][this.n].y - G, 1, N, 12632256), this.S[E] = N), 2 == b ? (this.C[E] = 500 - A(500 * C[this.id[E]][ng] / 100), this.X[E] = c) : 5 == b && (this.B[E] = c - A(c * C[this.id[E]][qg] / 100)), n = E, w.L += N, Fb = this.r[E], Gb = C[this.id[E]][hg], Hb = 100, Ib = this.id[E], 0 != a)); E++);
    return n
};
ba.q = function(a, b) {
    var c = new Mg,
        d = this.id[a] + b,
        e = C[d],
        g = e[7] % 100,
        k = A(e[7] / 100),
        r = e[8],
        m = e[9],
        n = e[10],
        G = e[11],
        H = e[12],
        N = e[13],
        E = e[14],
        ja = e[15],
        La = e[16],
        Ea = e[17],
        Da = e[18],
        Y = e[19],
        W = e[20],
        aa = e[21],
        sb = e[22],
        tb = e[23],
        Za = e[24],
        ua = e[25],
        ya = e[26],
        xb = e[27],
        ga = e[28],
        ia = e[29],
        Ca = e[30],
        $a = e[31],
        bb = e[32],
        va = e[33],
        ib = e[34],
        Db = e[41],
        Eb = e[42],
        Xa = e[43],
        Ua = e[44],
        Rb = e[45],
        Sb = e[46],
        Tb = e[47],
        Ub = e[48],
        Vb = e[49],
        Wb = e[50],
        ub = e[51],
        Xb = e[52],
        Yb = e[53],
        Zb = e[54],
        $b = e[55],
        ac = e[56],
        bc = e[57],
        da = e[58],
        e = e[59];
    if (0 < this.l[a]) this.l[a]--;
    else if (!(B(1E3) > $a) && ($a = w.m(this.a[a][0].x - bb, this.a[a][0].y - bb, this.a[a][0].x + bb, this.a[a][0].y + bb, 0), -1 != $a && (this.l[a] = Ca, 0 != g)))
        if (1 == g) {
            var Ca = this.a[a][0].x + 10 * c.x,
                Z = this.a[a][0].y + 10 * c.y;
            ke.add(1, Ca, Z, 0, 0, r, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, 0, ua, ya, xb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, 0, 0, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, e, va, ib)
        } else if (2 == g) c = w.a[$a][2].x - this.a[a][0].x, c /= Gg(c), Ca = this.a[a][0].x + 10 * c, Z = this.a[a][0].y, ke.add(1, Ca, Z, c * ia * 0.1, 0, r, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, 0,
        ua, ya, xb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, 0, 0, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, e, va, ib);
    else if (3 == g || 6 == g)
        for (3 == g ? Ng(c, w.a[$a][2].x - this.a[a][0].x, w.a[$a][2].y - this.a[a][0].y) : 6 == g && Ng(c, 0, -1), d = 0 < k ? k : 16, k = A(512 * Rg(c) / Sg), k -= A((ga - 1) * d / 2), g = 0; g < ga; g++) {
            c.x = Te[k & 511][0];
            c.y = -Te[k & 511][1];
            var Ca = this.a[a][0].x + 10 * c.x,
                Z = this.a[a][0].y + 10 * c.y,
                bb = c.x * ia * 0.1,
                wc = c.y * ia * 0.1;
            ke.add(1, Ca, Z, bb, wc, r, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, 0, ua, ya, xb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, 0, 0, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da,
                e, va, ib);
            k += d
        } else if (4 == g)
            for (g = 0; g < ga; g++) Ng(c, w.a[$a][2].x - this.a[a][0].x, w.a[$a][2].y - this.a[a][0].y), d = 0 < k ? k : ga, 0 < ga && (Ca = A(B(512)), Z = B(10) * d, c.x += Te[Ca][0] * Z, c.y += Te[Ca][1] * Z), Ca = this.a[a][0].x, Z = this.a[a][0].y, bb = c.x / ia, wc = (c.y - 0.5 * ia * ia * W * 0.01) / ia, ke.add(1, Ca, Z, bb, wc, r, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, 0, ua, ya, xb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, 0, 0, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, e, va, ib);
        else if (5 == g)
        for (g = 0; g < ga; g++) Ca = this.a[a][0].x + M(-bb, bb), Z = this.a[a][0].y + M(-bb, 0), ke.add(1, Ca, Z, 0,
            0, r, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, 0, ua, ya, xb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, 0, 0, Wb, ub, Xb, Yb, Zb, $b, ac, bc, da, e, va, ib);
    else if (7 == g)
        for (g = 0; g < ga; g++) Ca = A(this.a[a][0].x / 8), Z = A(this.a[a][0].y / 8), this.add(Ca, Z, d + ya)
};

function Fg(a, b, c) {
    for (var d, e = 0, g = 0; g < ve; g++)
        if (0 != (we[g] & ye)) {
            var k = Le[g + 1] - Le[g];
            for (d = 0; d < k; d++) e < C[Le[g] + d][Me] && (e = C[Le[g] + d][Me]), 1 == C[Le[g] + d][Ne] && d++
        }
    d = 1 == c ? b : a.id[b];
    k = Gg(Kb[0] - C[d][Me]);
    g = 0;
    g = 10 > k ? A(C[d][jg] * (10 - k) / 10) : e + 10 <= Kb[0] ? 0 : 1;
    e = 100;
    for (d = 0; 4 > d; d++) y(t + d, Rd) && (e += z(t + d, u));
    g = A(g * e / 100);
    if (1 == c) return g;
    Je();
    Ob = V(Ob + g, 0, 9999999);
    c = 4753E3;
    d = 9999999;
    if (98 > Kb[0]) {
        c = 0;
        for (d = 1; d < Kb[0]; d++) c += 1E3 * d;
        d = c + 1E3 * d
    }
    if (d <= Ob && 99 > Kb[0])
        for (Kb[0]++, d = 0; 4 > d; d++) Nb[d] += 2;
    pe();
    c = C[a.id[b]][ig];
    k =
        g = e = 100;
    for (d = 0; 4 > d; d++) y(t + d, Od) && (e += z(t + d, u)), y(t + d, Pd) && (g += z(t + d, u)), y(t + d, Qd) && (k += z(t + d, u));
    for (d = 0; 4 > d; d++)
        if (y(t + d, Vd) && B(100) < z(t + d, u)) {
            var r = I.m(a.a[b][0].x - 600, a.a[b][0].y - 300, a.a[b][0].x + 600, a.a[b][0].y + 300); - 1 != r && w.q(z(t + d, gd), a.a[b][0].x, a.a[b][0].y, r)
        }
    r = 0;
    17 == a.step[b] && (r = a.d[b] - 1);
    for (d = kg; d < kg + 6; d += 2) 0 != C[a.id[b]][d] && Math.random() * C[a.id[b]][d + 1] * 100 < e && le.add(a.a[b][r].x, a.a[b][r].y, C[a.id[b]][d], 0, 0);
    1 > 3 * Math.random() && le.add(a.a[b][r].x, a.a[b][r].y, 1, A(c * k / 100), 0);
    500 * Math.random() <
        g && le.add(a.a[b][r].x, a.a[b][r].y, 2, 0, 0);
    return 0
}
ea.fff = dh.prototype.move;
dh.prototype.move = function() {
    var a;
    for (a = 0; a < this.index; a++) {
        var b = this.step[a];
        0 < this.D[a] && 0 < this.r[a] && (this.D[a]--, this.r[a] = dg(this.r[a] - this.H[a], 0), Fb = this.r[a], Gb = C[this.id[a]][hg], Hb = 100, Ib = this.id[a]);
        if (0 < this.B[a] && 0 < this.r[a]) this.B[a]--;
        else {
            if (0 < this.C[a] && 0 < this.r[a] && (this.C[a]--, B(100) < this.X[a])) continue;
            0 == b ? a = this.lb(a) : 1 == b ? a = this.sa(a) : 2 == b ? a = this.ta(a) : 3 == b ? a = this.ua(a) : 4 == b ? a = this.ma(a, b) : 5 == b ? a = this.na(a, b) : 6 == b ? a = this.va(a) : 7 == b ? a = this.wa(a) : 8 == b ? a = this.xa(a) : 9 == b ? a = this.eb(a,
                b) : 10 == b ? a = this.mb(a) : 11 == b ? a = this.nb(a) : 12 == b ? a = this.ma(a, b) : 13 == b ? a = this.eb(a, b) : 14 == b ? a = this.ob(a) : 15 == b ? a = this.pb(a) : 16 == b ? a = this.qb(a) : 17 == b ? a = this.rb(a) : 18 == b && (a = this.na(a, b))
        }
    }
};
ea.fff = dh.prototype.lb;
dh.prototype.lb = function(a) {
    var b;
    b = C[this.id[a]][Zg];
    if (0 == this.d[a]) {
        this.a[a][0].x += 1;
        this.a[a][0].y += 0 - 4 * (b - 1);
        this.a[a][1].x += 0;
        this.a[a][1].y += 2 - 4 * (b - 1);
        this.a[a][2].x += 2;
        this.a[a][2].y += 2 - 4 * (b - 1);
        for (b = 0; 3 > b; b++) this.c[a][b].set(this.a[a][b]);
        this.d[a] = 1
    } else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], -0.05, 0.99);
        X(this.a[a][1], this.c[a][1], 0.05, 0.99);
        X(this.a[a][2], this.c[a][2], 0.05, 0.99);
        if (0 < (this.state[a] & 3)) {
            var c = -0.1;
            2 == this.d[a] && (c *= -1);
            this.a[a][1].x += B(c);
            this.a[a][2].x +=
                B(c);
            1 > B(100) && (this.d[a] = Vf(this.d[a] + 1, 1, 2))
        }
        $(this.a[a][0], this.a[a][1], 9 * b, 0.2, 0.2);
        $(this.a[a][0], this.a[a][2], 9 * b, 0.2, 0.2);
        $(this.a[a][1], this.a[a][2], 11 * b, 0.2, 0.2);
        this.q(a, 0);
        for (b = this.state[a] = 0; 3 > b; b++) this.h(a, b, 0.5);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (b = 0; 3 > b; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 3 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        for (b = this.state[a] = 0; 3 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ &&
            this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.sa;
dh.prototype.sa = function(a) {
    var b;
    if (0 == this.d[a]) {
        this.a[a][0].x += 0;
        this.a[a][1].x += 1;
        this.a[a][2].x += 2;
        for (b = 0; 3 > b; b++) this.c[a][b].set(this.a[a][b]);
        this.d[a] = 1
    } else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], 0.05, 0.99);
        X(this.a[a][1], this.c[a][1], 0.05, 0.9);
        X(this.a[a][2], this.c[a][2], 0.05, 0.9);
        b = w.m(this.a[a][0].x - 200, this.a[a][0].y - 50, this.a[a][0].x + 200, this.a[a][0].y + 50, 0); - 1 != b && (this.a[a][0].x += w.a[b][2].x < this.a[a][0].x ? -0.001 : 0.001);
        if (0 < (this.state[a] & 2)) {
            var c = 0,
                c = -1 !=
                b ? w.a[b][2].x < this.a[a][0].x ? -1 : 1 : Gf(-1, 1);
            10 > B(100) && (this.a[a][0].x += M(0.4, 0.6) * c, this.a[a][0].y += M(-1.5, -2))
        }
        $(this.a[a][0], this.a[a][1], 0, 0, 0.01);
        $(this.a[a][1], this.a[a][2], 0, 0, 0.01);
        this.q(a, 0);
        this.state[a] = 0;
        this.h(a, 0, 0.5);
        b = this.state[a];
        this.h(a, 1, 0.5);
        this.h(a, 2, 0.5);
        this.state[a] = b;
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (b = 0; 3 > b; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 3 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        for (b = this.state[a] = 0; 3 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.ta;
dh.prototype.ta = function(a) {
    var b, c = new Mg;
    b = C[this.id[a]][Zg];
    if (0 == this.d[a]) {
        this.a[a][0].x += 1;
        this.a[a][0].y += 1;
        this.a[a][1].x += 1;
        this.a[a][1].y += 1;
        this.a[a][2].x += 0;
        this.a[a][2].y += 0;
        this.a[a][3].x += 0;
        this.a[a][3].y += 2;
        this.a[a][4].x += 1;
        this.a[a][4].y += 1;
        this.a[a][5].x += 2;
        this.a[a][5].y += 0;
        this.a[a][6].x += 2;
        this.a[a][6].y += 2;
        for (b = 0; 7 > b; b++) this.c[a][b].set(this.a[a][b]);
        this.d[a] = 1
    } else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], 0, 0.99);
        X(this.a[a][1], this.c[a][1], 0, 0.99);
        X(this.a[a][2],
            this.c[a][2], 0, 0.99);
        X(this.a[a][3], this.c[a][3], 0, 0.99);
        X(this.a[a][4], this.c[a][4], 0, 0.99);
        X(this.a[a][5], this.c[a][5], 0, 0.99);
        X(this.a[a][6], this.c[a][6], 0, 0.99);
        Ng(c, 0, 0);
        var d = w.m(this.a[a][0].x - 150, this.a[a][0].y - 150, this.a[a][0].x + 150, this.a[a][0].y + 150, 0); - 1 != d && (c.p(w.a[d][2], this.a[a][0]), d = Tg(c), d -= C[this.id[a]][32] - 10, 0 > d ? Pg(c, -0.05) : Pg(c, 0.05));
        this.a[a][0].add(c);
        10 > B(100) && (this.a[a][0].x += M(-1, 1), this.a[a][0].y += M(-1, 1));
        this.a[a][2].x += M(0, -0.1);
        this.a[a][3].x += M(0, -0.1);
        this.a[a][5].x +=
            M(0, 0.1);
        this.a[a][6].x += M(0, 0.1);
        c = 0.5;
        d = 6 * b;
        $(this.a[a][0], this.a[a][1], 3 * b, c, c);
        $(this.a[a][0], this.a[a][4], 3 * b, c, c);
        $(this.a[a][1], this.a[a][2], d, c, c);
        $(this.a[a][1], this.a[a][3], d, c, c);
        $(this.a[a][2], this.a[a][3], d, c, c);
        $(this.a[a][4], this.a[a][5], d, c, c);
        $(this.a[a][4], this.a[a][6], d, c, c);
        $(this.a[a][5], this.a[a][6], d, c, c);
        this.q(a, 0);
        for (b = this.state[a] = 0; 7 > b; b++) this.h(a, b, 1);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (b = 0; 7 > b; b++) this.a[a][b].x += M(-1, 1), this.a[a][b].y -=
                M(1, 2);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 8 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        c = 0.5;
        d = 6 * (150 - this.count[a]) / 150;
        $(this.a[a][1], this.a[a][2], d, c, c);
        $(this.a[a][1], this.a[a][3], d, c, c);
        $(this.a[a][2], this.a[a][3], d, c, c);
        $(this.a[a][4], this.a[a][5], d, c, c);
        $(this.a[a][4], this.a[a][6], d, c, c);
        $(this.a[a][5], this.a[a][6], d, c, c);
        for (b = this.state[a] = 0; 7 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.ua;
dh.prototype.ua = function(a) {
    var b, c = new Mg,
        d = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.d[a] = 1;
    else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], 0, 0.99);
        for (b = 1; 6 > b; b++) X(this.a[a][b], this.c[a][b], 0, 0.9);
        Ng(c, 0, 0);
        b = w.m(this.a[a][0].x - 200, this.a[a][0].y - 200, this.a[a][0].x + 200, this.a[a][0].y + 200, 0); - 1 != b && (c.p(w.a[b][2], this.a[a][0]), b = Tg(c), b -= C[this.id[a]][32] / 2 - 10, 0 > b ? Pg(c, -0.01) : Pg(c, 0.01));
        b = J.e[A(V(this.a[a][0].y + 24, 0, 255) / 8)][A(V(this.a[a][0].x, 0, 511) / 8)];
        0 <= b && 8 >= b && (c.y -= 0.02);
        2 >
            B(100) && (c.x += M(-0.5, 0.5), c.y += M(-0.5, 0.5));
        this.a[a][0].add(c);
        c = 0.02;
        d *= 5;
        for (b = 0; 5 > b; b++) $(this.a[a][b], this.a[a][b + 1], d, 0, c);
        this.q(a, 0);
        for (b = this.state[a] = 0; 6 > b; b++) this.h(a, b, 0.5);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (b = this.count[a] = 0; 6 > b; b++) this.a[a][b].x += M(-1, 1), this.a[a][b].y -= M(1, 2);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 6 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        c = 0.5;
        d = 10 * (150 - this.count[a]) / 150;
        $(this.a[a][1], this.a[a][2], d, c, c);
        $(this.a[a][2], this.a[a][3],
            d, c, c);
        $(this.a[a][3], this.a[a][4], d, c, c);
        for (b = this.state[a] = 0; 6 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.ma;
dh.prototype.ma = function(a, b) {
    var c;
    c = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.d[a] = 1;
    else if (1 == this.d[a] || 2 == this.d[a]) {
        4 == b ? (X(this.a[a][0], this.c[a][0], -0.2, 0.99), X(this.a[a][1], this.c[a][1], 0, 0.99), X(this.a[a][2], this.c[a][2], -0.1, 0.99), X(this.a[a][3], this.c[a][3], 0, 0.99), X(this.a[a][4], this.c[a][4], 0, 0.99), X(this.a[a][5], this.c[a][5], 0, 0.99), X(this.a[a][6], this.c[a][6], 0, 0.99), X(this.a[a][7], this.c[a][7], 0, 0.99), X(this.a[a][8], this.c[a][8], 0, 0.99), X(this.a[a][9], this.c[a][9], 0.3, 0.99), X(this.a[a][10],
            this.c[a][10], 0.3, 0.99)) : 12 == b && (X(this.a[a][0], this.c[a][0], -0.02, 0.99), X(this.a[a][1], this.c[a][1], 0, 0.99), X(this.a[a][2], this.c[a][2], -0.01, 0.99), X(this.a[a][3], this.c[a][3], 0, 0.99), X(this.a[a][4], this.c[a][4], 0, 0.99), X(this.a[a][5], this.c[a][5], 0, 0.99), X(this.a[a][6], this.c[a][6], 0, 0.99), X(this.a[a][7], this.c[a][7], 0, 0.99), X(this.a[a][8], this.c[a][8], 0, 0.99), X(this.a[a][9], this.c[a][9], 0.1, 0.99), X(this.a[a][10], this.c[a][10], 0.1, 0.99));
        if (50 > B(100) && 0 < (this.state[a] & 3)) {
            var d = w.m(this.a[a][0].x -
                200, this.a[a][0].y - 50, this.a[a][0].x + 200, this.a[a][0].y + 50, 0); - 1 != d ? this.d[a] = w.a[d][2].x < this.a[a][0].x ? 1 : 2 : 10 > B(100) && (this.d[a] = Gf(1, 2));
            var e = d = 1,
                g = 0;
            12 == b && (d = 0.25, e = 0.3, g = 0.25);
            1 == this.d[a] ? (this.a[a][9].x < this.a[a][10].x ? (this.a[a][10].x += B(-d), this.a[a][10].y += -e) : (this.a[a][9].x += B(-d), this.a[a][9].y += -e), this.a[a][5].x += B(-g), this.a[a][6].x += B(-g)) : (this.a[a][9].x < this.a[a][10].x ? (this.a[a][9].x += B(d), this.a[a][9].y += -e) : (this.a[a][10].x += B(d), this.a[a][10].y += -e), this.a[a][5].x += B(g), this.a[a][6].x +=
                B(g))
        }
        d = 0.5;
        e = 1.2 * c;
        12 == b && (d = 0.02, e = 1 * c);
        $(this.a[a][0], this.a[a][1], 3 * e, d, d);
        $(this.a[a][1], this.a[a][2], 3 * e, d, d);
        $(this.a[a][1], this.a[a][3], 4 * e, d, d);
        $(this.a[a][1], this.a[a][4], 4 * e, d, d);
        $(this.a[a][3], this.a[a][5], 4 * e, d, d);
        $(this.a[a][4], this.a[a][6], 4 * e, d, d);
        $(this.a[a][2], this.a[a][7], 4 * e, d, d);
        $(this.a[a][2], this.a[a][8], 4 * e, d, d);
        $(this.a[a][7], this.a[a][9], 4 * e, d, d);
        $(this.a[a][8], this.a[a][10], 4 * e, d, d);
        $(this.a[a][7], this.a[a][8], 5 * e, d, d);
        this.q(a, 0);
        0 != C[this.id[a]][Ne] && this.q(a, 1);
        for (c =
            this.state[a] = 0; 11 > c; c++) this.h(a, c, 0.5);
        this.a[a][this.n].set(this.a[a][1]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (c = this.count[a] = 0; 11 > c; c++) this.a[a][c].x += M(-1, 1), this.a[a][c].y -= M(1, 2);
            Fg(this, a, 0)
        }
    } else {
        for (c = 0; 11 > c; c++) X(this.a[a][c], this.c[a][c], 0.05, 0.99);
        d = 0.5;
        e = 1.2 * (150 - this.count[a]) / 150;
        $(this.a[a][1], this.a[a][2], 3 * e, d, d);
        $(this.a[a][3], this.a[a][5], 4 * e, d, d);
        $(this.a[a][4], this.a[a][6], 4 * e, d, d);
        $(this.a[a][7], this.a[a][9], 4 * e, d, d);
        $(this.a[a][8], this.a[a][10], 4 * e, d, d);
        for (c = this.state[a] =
            0; 11 > c; c++) this.h(a, c, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.na;
dh.prototype.na = function(a, b) {
    var c, d = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.d[a] = A(M(4, 8));
    else if (10 > this.d[a]) {
        if (5 == b) {
            for (c = 0; c < this.d[a] - 1; c++) X(this.a[a][c], this.c[a][c], -0.04, 0.99);
            X(this.a[a][c], this.c[a][c], 1, 0.99)
        } else {
            for (c = 0; c < this.d[a] - 1; c++) X(this.a[a][c], this.c[a][c], 0.04, 0.99);
            X(this.a[a][c], this.c[a][c], -1, 0.99)
        }
        10 > B(100) && (c = A(B(4)), this.a[a][c].x += M(-0.5, 0.5));
        $(this.a[a][0], this.a[a][1], 8 * d, 0.2, 0.2);
        for (c = 1; c < this.d[a] - 2; c++) $(this.a[a][c], this.a[a][c + 1], 6 * d, 0.2, 0.2);
        $(this.a[a][c],
            this.a[a][c + 1], 6 * d, 0.2, 0);
        this.q(a, 0);
        for (c = this.state[a] = 0; c < this.d[a]; c++) this.h(a, c, 0.5);
        this.a[a][this.n].x = 0.5 * (this.a[a][0].x + this.a[a][this.d[a] - 1].x);
        this.a[a][this.n].y = 0.5 * (this.a[a][0].y + this.a[a][this.d[a] - 1].y);
        if (0 >= this.r[a]) {
            for (c = 0; c < this.d[a]; c++) this.a[a][c].x += M(-0.5, 0.5), this.a[a][c].y -= M(2, 3);
            this.d[a] += 10;
            Fg(this, a, 0)
        }
    } else {
        for (c = 0; c < this.d[a] - 10; c++) X(this.a[a][c], this.c[a][c], 0.05, 0.99);
        for (c = this.state[a] = 0; c < this.d[a] - 10; c++) this.h(a, c, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.va;
dh.prototype.va = function(a) {
    var b, c = C[this.id[a]][Zg];
    if (0 == this.d[a]) {
        this.a[a][0].x += 1;
        this.a[a][0].y += 1;
        this.a[a][1].x += 1;
        this.a[a][1].y += 0;
        this.a[a][2].x += 1.85;
        this.a[a][2].y += 0.5;
        this.a[a][3].x += 1.85;
        this.a[a][3].y += 1.5;
        this.a[a][4].x += 1;
        this.a[a][4].y += 2;
        this.a[a][5].x += 1 - 0.85;
        this.a[a][5].y += 1.5;
        this.a[a][6].x += 1 - 0.85;
        this.a[a][6].y += 0.5;
        for (b = 0; 7 > b; b++) this.c[a][b].set(this.a[a][b]);
        this.d[a] = 1
    } else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], 0.5, 0.99);
        for (b = 1; 7 > b; b++) X(this.a[a][b],
            this.c[a][b], 0, 0.99);
        b = w.m(this.a[a][0].x - 200, this.a[a][0].y - 50, this.a[a][0].x + 200, this.a[a][0].y + 50, 0); - 1 != b && 40 > B(100) && 0 < (this.state[a] & 2) && (this.a[a][0].x += w.a[b][2].x < this.a[a][0].x ? -2 : 2);
        var d = 0.1,
            c = 1.2 * c;
        for (b = 1; 4 > b; b++) $(this.a[a][b], this.a[a][b + 3], 20 * c, d, d);
        for (b = 1; 5 > b; b++) $(this.a[a][b], this.a[a][b + 2], 17 * c, d, d);
        $(this.a[a][b + 0], this.a[a][1], 17 * c, d, d);
        $(this.a[a][b + 1], this.a[a][2], 17 * c, d, d);
        for (b = 1; 6 > b; b++) $(this.a[a][b], this.a[a][b + 1], 10 * c, d, d);
        $(this.a[a][b], this.a[a][1], 10 * c, d, d);
        for (b =
            1; 7 > b; b++) $(this.a[a][0], this.a[a][b], 10 * c, 0.2, 0.2);
        this.q(a, 0);
        for (b = this.state[a] = 0; 7 > b; b++) this.h(a, b, 0.5);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (b = this.count[a] = 0; 7 > b; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 7 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        d = 0.5;
        c = 1.2 * c * (150 - this.count[a]) / 150;
        for (b = 1; 6 > b; b++) $(this.a[a][b], this.a[a][b + 1], 10 * c, d, d);
        for (b = this.state[a] = 0; 7 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.wa;
dh.prototype.wa = function(a) {
    var b, c = new Mg,
        d = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.d[a] = 1;
    else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], 0, 0.99);
        for (b = 1; 5 > b; b++) X(this.a[a][b], this.c[a][b], 0, 0.9);
        Ng(c, 0, 0);
        b = w.m(this.a[a][0].x - 150, this.a[a][0].y - 50, this.a[a][0].x + 150, this.a[a][0].y + 50, 0); - 1 != b && (c.p(w.a[b][2], this.a[a][0]), b = Tg(c), b -= C[this.id[a]][32] / 2 - 10, 0 > b ? Pg(c, -0.01) : Pg(c, 0.01));
        0 > J.e[A(V(this.a[a][0].y - 7, 0, 255) / 8)][A(V(this.a[a][0].x, 0, 511) / 8)] && (c.y += 0.03);
        2 > B(100) && (c.x +=
            M(-0.5, 0.5), c.y += M(-0.5, 0.5));
        this.a[a][0].add(c);
        c = 0.1;
        b = 6 * d;
        $(this.a[a][0], this.a[a][1], 9 * d, 0, c);
        $(this.a[a][1], this.a[a][2], 5 * d, 0, c);
        $(this.a[a][2], this.a[a][3], 6 * d, 0, c);
        $(this.a[a][2], this.a[a][4], 6 * d, 0, c);
        $(this.a[a][3], this.a[a][4], 8 * d, c, c);
        this.q(a, 0);
        for (b = this.state[a] = 0; 5 > b; b++) this.h(a, b, 0.5);
        this.a[a][this.n].set(this.a[a][1]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (b = this.count[a] = 0; 5 > b; b++) this.a[a][b].x += M(-2, 2), this.a[a][b].y -= M(2, 4);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 5 > b; b++) X(this.a[a][b], this.c[a][b],
            0.05, 0.99);
        c = 0.5;
        b = 7 * d * (150 - this.count[a]) / 150;
        $(this.a[a][2], this.a[a][3], b, c, c);
        $(this.a[a][2], this.a[a][4], b, c, c);
        $(this.a[a][3], this.a[a][4], b, c, c);
        for (b = this.state[a] = 0; 5 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.xa;
dh.prototype.xa = function(a) {
    var b, c = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.a[a][0].x += 0, this.a[a][0].y += 0, this.a[a][1].x += 0, this.a[a][1].y += 1, this.a[a][2].x += 0, this.a[a][2].y += 3, this.d[a]++;
    else if (1 == this.d[a]) {
        for (b = 0; 2 > b; b++) X(this.a[a][b], this.c[a][b], -0.04, 0.99);
        X(this.a[a][b], this.c[a][b], 1, 0.99);
        $(this.a[a][0], this.a[a][1], 7 * c, 0.2, 0.2);
        $(this.a[a][1], this.a[a][2], 5 * c, 0.2, 0);
        this.a[a][0].x = this.a[a][1].x = this.a[a][2].x;
        0 < this.l[a] ? this.l[a]-- : 0 < this.S[a] && (this.a[a][0].y += M(0, 1), this.q(a, 0));
        this.S[a] = 0;
        for (b = this.state[a] = 0; 3 > b; b++) this.h(a, b, 0.5);
        this.a[a][this.n].x = this.a[a][0].x;
        this.a[a][this.n].y = 0.5 * (this.a[a][0].y + this.a[a][1].y);
        if (0 >= this.r[a]) {
            this.d[a]++;
            for (b = 0; 3 > b; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 3 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        for (b = this.state[a] = 0; 3 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.eb;
dh.prototype.eb = function(a, b) {
    var c, d = new Mg,
        e = C[this.id[a]][Zg];
    if (0 == this.d[a]) 50 > B(100) ? this.d[a] = 1 : this.d[a] = 2;
    else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], 0, 0.98);
        for (c = 1; 6 > c; c++) X(this.a[a][c], this.c[a][c], 0, 0.9);
        if (9 == b) {
            Ng(d, 0, 0);
            c = w.m(this.a[a][0].x - 150, this.a[a][0].y - 50, this.a[a][0].x + 150, this.a[a][0].y + 50, 0); - 1 != c && (d.p(w.a[c][2], this.a[a][0]), c = Tg(d), c -= C[this.id[a]][32] / 2 - 10, 0 > c ? (Pg(d, -0.05), 384 < this.a[a][0].x && $g(d), 128 > this.a[a][0].x && ($g(d), Pg(d, -1))) : Pg(d, 0.01));
            c = A(V(this.a[a][0].x, 0, 511) / 8);
            var g = A(V(this.a[a][0].y - 7, 0, 255) / 8);
            c = J.e[g][c];
            0 > c && (d.y += 0.05);
            c = A(V(this.a[a][0].x + d.x, 0, 511) / 8);
            g = A(V(this.a[a][0].y + d.y, 0, 255) / 8);
            c = J.e[g][c];
            0 <= c && 8 >= c && $g(d)
        } else Ng(d, 0, 0), c = w.m(this.a[a][0].x - 500, this.a[a][0].y - 500, this.a[a][0].x + 500, this.a[a][0].y + 500, 0), -1 != c && (d.p(w.a[c][2], this.a[a][0]), c = Tg(d), c -= C[this.id[a]][32] / 2 - 10, 0 > c ? (1 == this.d[a] ? Pg(d, -0.05) : Pg(d, 0.05), $g(d)) : Pg(d, 0.02)), c = A(V(this.a[a][0].x + d.x, 0, 511) / 8), g = A(V(this.a[a][0].y + d.y, 0, 255) / 8), c = J.e[g][c],
            0 <= c && 8 >= c && ($g(d), 2 == this.d[a] && Pg(d, -1)), c = A(V(this.a[a][0].x + d.x, 0, 511) / 8), g = A(V(this.a[a][0].y + d.y, 0, 255) / 8), c = J.e[g][c], 0 <= c && 8 >= c && ($g(d), 2 == this.d[a] && Pg(d, -1));
        2 > B(100) && (d.x += M(-0.5, 0.5), d.y += M(-0.5, 0.5));
        this.a[a][0].add(d);
        for (c = 0; 6 > c; c++) $(this.a[a][c], this.a[a][c + 1], 6 * e, 0, 0.5);
        0 == C[this.id[a]][Ne] ? this.q(a, 0) : this.q(a, 50 > B(100) ? 0 : 1);
        for (c = this.state[a] = 0; 6 > c; c++) this.h(a, c, 0.5);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (c = this.count[a] = 0; 6 > c; c++) this.a[a][c].x +=
                M(-2, 2), this.a[a][c].y -= M(2, 4);
            Fg(this, a, 0)
        }
    } else {
        for (c = 0; 6 > c; c++) X(this.a[a][c], this.c[a][c], 0.05, 0.99);
        d = 6 * (150 - this.count[a]) / 150;
        for (c = 1; 5 > c; c++) $(this.a[a][c], this.a[a][c + 1], d * e, 0, 0.5);
        for (c = this.state[a] = 0; 6 > c; c++) this.h(a, c, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.mb;
dh.prototype.mb = function(a) {
    var b;
    b = C[this.id[a]][Zg];
    if (0 == this.d[a]) {
        this.a[a][0].x += 4;
        this.a[a][0].y += 0;
        this.a[a][1].x += 0;
        this.a[a][1].y += 0;
        this.a[a][2].x += 0;
        this.a[a][2].y += 7.99;
        this.a[a][3].x += 7.99;
        this.a[a][3].y += 0;
        this.a[a][4].x += 7.99;
        this.a[a][4].y += 7.99;
        this.a[a][5].x += 0;
        this.a[a][5].y += 0;
        this.a[a][6].x += 0;
        this.a[a][6].y += 7.99;
        this.a[a][7].x += 7.99;
        this.a[a][7].y += 0;
        this.a[a][8].x += 7.99;
        this.a[a][8].y += 7.99;
        for (b = 0; 9 > b; b++) this.c[a][b].set(this.a[a][b]);
        this.d[a] = 1
    } else if (1 == this.d[a] || 2 ==
        this.d[a]) {
        X(this.a[a][0], this.c[a][0], -0.05, 0.99);
        X(this.a[a][1], this.c[a][1], -0.1, 0.99);
        X(this.a[a][2], this.c[a][2], 0.8, 0.99);
        X(this.a[a][3], this.c[a][3], -0.1, 0.99);
        X(this.a[a][4], this.c[a][4], 0.8, 0.99);
        X(this.a[a][5], this.c[a][5], -0.1, 0.99);
        X(this.a[a][6], this.c[a][6], 0.8, 0.99);
        X(this.a[a][7], this.c[a][7], -0.1, 0.99);
        X(this.a[a][8], this.c[a][8], 0.8, 0.99);
        if (50 > B(100) && 0 < (this.state[a] & 3)) {
            var c = w.m(this.a[a][0].x - 500, this.a[a][0].y - 25, this.a[a][0].x + 500, this.a[a][0].y + 25, 0); - 1 != c ? this.d[a] = w.a[c][2].x <
                this.a[a][0].x ? 1 : 2 : 10 > B(100) && (this.d[a] = Gf(1, 2));
            1 == this.d[a] ? (this.a[a][2].x < this.a[a][6].x ? (this.a[a][6].x += B(-1), this.a[a][6].y += M(-1, -1)) : (this.a[a][2].x += B(-1), this.a[a][2].y += M(-1, -1)), this.a[a][4].x < this.a[a][8].x ? (this.a[a][8].x += B(-1), this.a[a][8].y += M(-1, -1)) : (this.a[a][4].x += B(-1), this.a[a][4].y += M(-1, -1)), 1 > B(100) && (this.a[a][0].x -= 1, this.a[a][0].y -= 3)) : (this.a[a][2].x < this.a[a][6].x ? (this.a[a][2].x += B(1), this.a[a][2].y += M(-1, -1)) : (this.a[a][6].x += B(1), this.a[a][6].y += M(-1, -1)), this.a[a][4].x <
                this.a[a][8].x ? (this.a[a][4].x += B(1), this.a[a][4].y += M(-1, -1)) : (this.a[a][8].x += B(1), this.a[a][8].y += M(-1, -1)), 1 > B(100) && (this.a[a][0].x += 1, this.a[a][0].y -= 3))
        }
        c = 0.3;
        b *= 2.2;
        $(this.a[a][0], this.a[a][5], 3 * b, 0.1 * c, c);
        $(this.a[a][0], this.a[a][7], 3 * b, 0.1 * c, c);
        $(this.a[a][0], this.a[a][6], 3 * b, 0.1 * c, c);
        $(this.a[a][5], this.a[a][6], 2 * b, 0.2 * c, 0.2 * c);
        $(this.a[a][0], this.a[a][8], 3 * b, 0.1 * c, c);
        $(this.a[a][7], this.a[a][8], 2 * b, 0.2 * c, 0.2 * c);
        $(this.a[a][0], this.a[a][1], 4 * b, 0.1 * c, c);
        $(this.a[a][0], this.a[a][3], 4 * b, 0.1 *
            c, c);
        $(this.a[a][0], this.a[a][2], 4 * b, 0.1 * c, c);
        $(this.a[a][1], this.a[a][2], 3 * b, 0.2 * c, 0.2 * c);
        $(this.a[a][0], this.a[a][4], 4 * b, 0.1 * c, c);
        $(this.a[a][3], this.a[a][4], 3 * b, 0.2 * c, 0.2 * c);
        $(this.a[a][2], this.a[a][4], 8 * b, 0.1 * c, 0.1 * c);
        $(this.a[a][5], this.a[a][7], 7 * b, 0.1 * c, 0.1 * c);
        this.q(a, 0);
        0 != C[this.id[a]][Ne] && this.q(a, 1);
        for (b = this.state[a] = 0; 9 > b; b++) this.h(a, b, 0.5);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            this.count[a] = 0;
            for (b = 1; 9 > b; b++) this.a[a][b].x += M(-1, 1), this.a[a][b].y -= M(1, 2);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 9 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        c = 0.5;
        b = 1.2 * (150 - this.count[a]) / 150;
        $(this.a[a][1], this.a[a][2], 4 * b, c, c);
        $(this.a[a][3], this.a[a][4], 4 * b, c, c);
        $(this.a[a][5], this.a[a][6], 3 * b, c, c);
        $(this.a[a][7], this.a[a][8], 3 * b, c, c);
        for (b = this.state[a] = 0; 9 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.nb;
dh.prototype.nb = function(a) {
    var b, c = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.a[a][0].x += 1, this.a[a][0].y += 0, this.a[a][1].x += 0, this.a[a][1].y += 1, this.a[a][2].x += 2, this.a[a][2].y += 1, this.a[a][3].x += 1, this.a[a][3].y += 2, this.d[a]++;
    else if (1 == this.d[a]) {
        for (b = 0; 3 > b; b++) X(this.a[a][b], this.c[a][b], -0.04, 0.99);
        X(this.a[a][b], this.c[a][b], 1, 0.99);
        $(this.a[a][0], this.a[a][3], 20 * c, 0.2, 0);
        $(this.a[a][1], this.a[a][3], 15 * c, 0.2, 0);
        $(this.a[a][2], this.a[a][3], 20 * c, 0.2, 0);
        this.a[a][0].x = this.a[a][3].x;
        this.a[a][1].x =
            this.a[a][3].x - 8 * c;
        this.a[a][2].x = this.a[a][3].x + 8 * c;
        0 < this.l[a] ? this.l[a]-- : 0 < this.S[a] && (this.a[a][0].y += M(0, 1), this.a[a][1].y += M(0, 1), this.a[a][2].y += M(0, 1), this.q(a, 0));
        this.S[a] = 0;
        for (b = this.state[a] = 0; 4 > b; b++) this.h(a, b, 0.5);
        this.a[a][this.n].x = this.a[a][0].x;
        this.a[a][this.n].y = 0.5 * (this.a[a][0].y + this.a[a][1].y);
        if (0 >= this.r[a]) {
            this.d[a]++;
            for (b = 0; 4 > b; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 4 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        for (b = this.state[a] =
            0; 4 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.ob;
dh.prototype.ob = function(a) {
    var b, c = new Mg;
    b = C[this.id[a]][Zg];
    if (0 == this.d[a]) {
        this.a[a][0].x += 2;
        this.a[a][0].y += 4;
        this.a[a][1].x += 2;
        this.a[a][1].y += 2;
        this.a[a][2].x += 0;
        this.a[a][2].y += 0;
        this.a[a][3].x += 4;
        this.a[a][3].y += 0;
        for (b = 0; 4 > b; b++) this.c[a][b].set(this.a[a][b]);
        this.d[a] = 1
    } else if (1 == this.d[a] || 2 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], 0.1, 0.99);
        X(this.a[a][1], this.c[a][1], 0.1, 0.99);
        X(this.a[a][2], this.c[a][2], -0.1, 0.99);
        X(this.a[a][3], this.c[a][3], -0.1, 0.99);
        Ng(c, 0, 0);
        var d = w.m(this.a[a][0].x -
            150, this.a[a][0].y - 250, this.a[a][0].x + 150, this.a[a][0].y + 250, 0); - 1 != d && (c.x = w.a[d][2].x - this.a[a][0].x, c.y = w.a[d][2].y - 10 - this.a[a][0].y, c.x = -10 > c.x ? -0.02 : 10 < c.x ? 0.02 : M(-0.02, 0.02), d = C[this.id[a]][32] / 2, c.y = c.y < -d ? -0.02 : c.y > d ? 0.02 : M(-0.1, 0.1));
        this.a[a][0].add(c);
        this.a[a][2].x -= B(0.8);
        this.a[a][3].x += B(0.8);
        c = 0.3;
        $(this.a[a][1], this.a[a][2], 8 * b, c, c);
        $(this.a[a][1], this.a[a][3], 8 * b, c, c);
        $(this.a[a][2], this.a[a][3], 16 * b, c, c);
        $(this.a[a][0], this.a[a][2], 12 * b, c, c);
        $(this.a[a][0], this.a[a][3], 12 * b, c,
            c);
        this.q(a, 0);
        for (b = this.state[a] = 0; 4 > b; b++) this.h(a, b, 1);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a] = 3;
            for (b = 0; 4 > b; b++) this.a[a][b].x += M(-1, 1), this.a[a][b].y -= M(1, 2);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 4 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        c = 0.3;
        b = (150 - this.count[a]) / 150;
        $(this.a[a][1], this.a[a][2], 8 * b, c, c);
        $(this.a[a][1], this.a[a][3], 8 * b, c, c);
        $(this.a[a][2], this.a[a][3], 16 * b, c, c);
        for (b = this.state[a] = 0; 4 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.pb;
dh.prototype.pb = function(a) {
    var b;
    b = C[this.id[a]][Zg];
    if (0 == this.d[a]) {
        this.a[a][0].x += 1;
        this.a[a][0].y += 0;
        this.a[a][1].x += 0;
        this.a[a][1].y += 1;
        this.a[a][2].x += 2;
        this.a[a][2].y += 1;
        for (b = 0; 3 > b; b++) this.c[a][b].set(this.a[a][b]);
        this.d[a]++
    } else if (1 == this.d[a]) {
        X(this.a[a][0], this.c[a][0], -0.15, 0.99);
        X(this.a[a][1], this.c[a][1], 0.1, 0.99);
        X(this.a[a][2], this.c[a][2], 0.1, 0.99);
        var c = w.m(this.a[a][0].x - 200, this.a[a][0].y - 50, this.a[a][0].x + 200, this.a[a][0].y + 50, 0);
        if (0 < (this.state[a] & 2) && 5 > B(100)) {
            var d =
                0,
                d = -1 != c ? w.a[c][2].x < this.a[a][0].x ? -1 : 1 : Gf(-1, 1);
            this.a[a][0].x += M(0.4, 0.6) * d;
            this.a[a][0].y += M(-1.5, -2)
        }
        c = 0.01;
        $(this.a[a][0], this.a[a][1], 5 * b, c, c);
        $(this.a[a][0], this.a[a][2], 5 * b, c, c);
        $(this.a[a][1], this.a[a][2], 6 * b, c, c);
        1 < b && 0 < this.S[a] && 10 > B(100) && this.add(A(this.a[a][0].x / 8), A(this.a[a][0].y / 8), this.id[a] - 1);
        this.S[a] = 0;
        this.q(a, 0);
        for (b = this.state[a] = 0; 3 > b; b++) this.h(a, b, 0.9);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a]++;
            this.a[a][3].set(this.a[a][0]);
            this.c[a][3].set(this.a[a][0]);
            for (b = 0; 4 > b; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 4 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        c = 0.01;
        b = (150 - this.count[a]) / 150;
        $(this.a[a][0], this.a[a][1], 5 * b, c, c);
        $(this.a[a][0], this.a[a][2], 5 * b, c, c);
        $(this.a[a][1], this.a[a][2], 6 * b, c, c);
        for (b = this.state[a] = 0; 4 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.qb;
dh.prototype.qb = function(a) {
    var b, c = new Mg,
        d = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.d[a]++;
    else if (1 == this.d[a]) {
        for (b = 0; 10 > b; b++) X(this.a[a][b], this.c[a][b], 0, 0.98);
        0 >= this.count[a] && 5 > B(100) && (b = A(B(3)), 0 == b ? (c.x = (this.a[a][8].x + this.a[a][9].x) / 2 - this.a[a][7].x, c.y = (this.a[a][8].y + this.a[a][9].y) / 2 - this.a[a][7].y, Tg(c), Pg(c, d), this.a[a][7].add(c)) : 1 == b ? (c.x = (this.a[a][9].x + this.a[a][7].x) / 2 - this.a[a][8].x, c.y = (this.a[a][9].y + this.a[a][7].y) / 2 - this.a[a][8].y, Tg(c), Pg(c, d), this.a[a][8].add(c)) : 2 ==
            b && (c.x = (this.a[a][7].x + this.a[a][8].x) / 2 - this.a[a][9].x, c.y = (this.a[a][7].y + this.a[a][8].y) / 2 - this.a[a][9].y, Tg(c), Pg(c, d), this.a[a][9].add(c)), this.count[a] = 25 * d);
        Ng(c, 0, 0);
        b = w.m(this.a[a][0].x - 200, this.a[a][0].y - 200, this.a[a][0].x + 200, this.a[a][0].y + 200, 0);
        if (-1 != b)
            for (c.p(w.a[b][2], this.a[a][0]), Tg(c), b = 4; 7 > b; b++) this.a[a][b].x += 0.02 * c.x, this.a[a][b].y += 0.02 * c.y;
        c = 0.05;
        for (b = 1; 4 > b; b++) $(this.a[a][0], this.a[a][b], 3 * d, c, c);
        for (b = 1; 4 > b; b++) $(this.a[a][b], this.a[a][b + 3], 3 * d, c, c);
        for (b = 4; 7 > b; b++) $(this.a[a][b],
            this.a[a][b + 3], 3 * d, c, 0.01);
        5 > this.count[a]-- && (c = 0.01 / d, $(this.a[a][7], this.a[a][8], 20 * d, c, c), $(this.a[a][8], this.a[a][9], 20 * d, c, c), $(this.a[a][9], this.a[a][7], 20 * d, c, c));
        this.q(a, 0);
        for (b = this.state[a] = 0; 10 > b; b++) this.h(a, b, 0.9);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            this.d[a]++;
            for (b = this.count[a] = 0; 4 > b; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            Fg(this, a, 0)
        }
    } else {
        for (b = 0; 10 > b; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.98);
        var c = 0.05,
            e = (150 - this.count[a]) / 150;
        for (b = 1; 4 > b; b++) $(this.a[a][b],
            this.a[a][b + 3], 3 * d * e, c, c);
        for (b = 4; 7 > b; b++) $(this.a[a][b], this.a[a][b + 3], 3 * d * e, c, c);
        for (b = this.state[a] = 0; 10 > b; b++) this.h(a, b, 0.5);
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.rb;
dh.prototype.rb = function(a) {
    var b, c = C[this.id[a]][Zg];
    if (0 == this.d[a]) this.d[a] = A(M(4, 7)), this.count[a] = A(B(400));
    else if (10 > this.d[a]) {
        500 > this.count[a] ? X(this.a[a][0], this.c[a][0], 0.1, 0.99) : X(this.a[a][0], this.c[a][0], -0.1, 0.99);
        for (b = 1; b < this.d[a] - 1; b++) X(this.a[a][b], this.c[a][b], 0, 0.99);
        X(this.a[a][b], this.c[a][b], 1, 0.99);
        10 > B(100) && (b = A(B(4)), this.a[a][b].x += M(-0.5, 0.5));
        this.count[a]++;
        600 < this.count[a] && (this.count[a] = A(B(400)));
        $(this.a[a][0], this.a[a][1], 8 * c, 0.2, 0.2);
        for (b = 1; b < this.d[a] -
            2; b++) $(this.a[a][b], this.a[a][b + 1], 6 * c, 0.2, 0.2);
        $(this.a[a][b], this.a[a][b + 1], 6 * c, 0.2, 0);
        this.q(a, 0);
        this.state[a] = 0;
        for (b = this.d[a] - 1; b < this.d[a]; b++) this.h(a, b, 0.5);
        this.a[a][this.n].set(this.a[a][0]);
        if (0 >= this.r[a]) {
            for (b = 0; b < this.d[a]; b++) this.a[a][b].x += M(-0.5, 0.5), this.a[a][b].y -= M(2, 3);
            this.count[a] = 0;
            Fg(this, a, 0);
            this.d[a] += 10
        }
    } else {
        for (b = 0; b < this.d[a] - 10; b++) X(this.a[a][b], this.c[a][b], 0.05, 0.99);
        this.state[a] = 0;
        150 < this.count[a]++ && this.sub(a--)
    }
    return a
};
ea.fff = dh.prototype.b;
dh.prototype.b = function() {
    var a, b;
    for (a = 0; a < this.index; a++) {
        var c = C[this.id[a]][2],
            d = C[this.id[a]][4],
            e = C[this.id[a]][5],
            g = C[this.id[a]][Zg];
        0 < this.B[a] ? (d = 5934817, e = 1989840) : 0 < this.C[a] ? (d = 1989840, e = 9840) : 0 < this.D[a] && (d = 3407616, e = 3381504);
        var k = (150 - this.count[a]) / 150 * g;
        switch (this.step[a]) {
            case 0:
                Ef(A(this.a[a][1].x - 0.5), A(this.a[a][1].y) - 2 * g, A(4 * k) + 1, A(4 * k) + 1, e);
                Ef(A(this.a[a][2].x - 0.5), A(this.a[a][2].y) - 2 * g, A(4 * k) + 1, A(4 * k) + 1, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0,
                    16, 16, d);
                break;
            case 1:
                K(Ta, A(this.a[a][2].x), A(this.a[a][2].y - 2 * k), A(8 * k), A(8 * k), 16 * c, 0, 16, 16, e);
                K(Ta, A(this.a[a][1].x), A(this.a[a][1].y - 3 * k), A(12 * k), A(12 * k), 16 * c, 0, 16, 16, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y - 4 * k), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 2:
                L(this.a[a][1].x, this.a[a][1].y, this.a[a][2].x, this.a[a][2].y, e);
                L(this.a[a][2].x, this.a[a][2].y, this.a[a][3].x, this.a[a][3].y, e);
                L(this.a[a][3].x, this.a[a][3].y, this.a[a][1].x, this.a[a][1].y, e);
                L(this.a[a][4].x, this.a[a][4].y, this.a[a][5].x,
                    this.a[a][5].y, e);
                L(this.a[a][5].x, this.a[a][5].y, this.a[a][6].x, this.a[a][6].y, e);
                L(this.a[a][6].x, this.a[a][6].y, this.a[a][4].x, this.a[a][4].y, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 3:
                3 > this.d[a] && (L(this.a[a][0].x, this.a[a][0].y, this.a[a][1].x, this.a[a][1].y, e), L(this.a[a][4].x, this.a[a][4].y, this.a[a][5].x, this.a[a][5].y, e));
                L(this.a[a][1].x, this.a[a][1].y, this.a[a][2].x, this.a[a][2].y, e);
                L(this.a[a][2].x, this.a[a][2].y, this.a[a][3].x, this.a[a][3].y,
                    e);
                L(this.a[a][3].x, this.a[a][3].y, this.a[a][4].x, this.a[a][4].y, e);
                Df(A(this.a[a][5].x), A(this.a[a][5].y), A(2 * k), A(2 * k), d);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 4:
            case 12:
                L(this.a[a][1].x, this.a[a][1].y, this.a[a][2].x, this.a[a][2].y, e);
                3 > this.d[a] && (L(this.a[a][1].x, this.a[a][1].y, this.a[a][3].x, this.a[a][3].y, e), L(this.a[a][1].x, this.a[a][1].y, this.a[a][4].x, this.a[a][4].y, e));
                L(this.a[a][3].x, this.a[a][3].y, this.a[a][5].x, this.a[a][5].y, e);
                L(this.a[a][4].x,
                    this.a[a][4].y, this.a[a][6].x, this.a[a][6].y, e);
                3 > this.d[a] && (L(this.a[a][2].x, this.a[a][2].y, this.a[a][7].x, this.a[a][7].y, e), L(this.a[a][2].x, this.a[a][2].y, this.a[a][8].x, this.a[a][8].y, e));
                L(this.a[a][7].x, this.a[a][7].y, this.a[a][9].x, this.a[a][9].y, e);
                L(this.a[a][8].x, this.a[a][8].y, this.a[a][10].x, this.a[a][10].y, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 5:
            case 18:
                var r = 5 == this.step[a] ? -2 : 2;
                for (b = 10 > this.d[a] ? this.d[a] - 1 : this.d[a] - 11; 0 < b; b--) Ef(A(this.a[a][b].x),
                    A(this.a[a][b].y + r * k), A(4 * k) + 1, A(4 * k) + 1, e);
                5 == this.step[a] ? K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d) : K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 15, 16, -16, d);
                break;
            case 6:
                for (b = 1; 6 > b; b++) L(this.a[a][b].x, this.a[a][b].y, this.a[a][b + 1].x, this.a[a][b + 1].y, e);
                3 > this.d[a] && L(this.a[a][b].x, this.a[a][b].y, this.a[a][1].x, this.a[a][1].y, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 7:
                L(this.a[a][2].x, this.a[a][2].y,
                    this.a[a][3].x, this.a[a][3].y, e);
                L(this.a[a][2].x, this.a[a][2].y, this.a[a][4].x, this.a[a][4].y, e);
                L(this.a[a][3].x, this.a[a][3].y, this.a[a][4].x, this.a[a][4].y, e);
                Ef(A(this.a[a][1].x), A(this.a[a][1].y), A(6 * k) + 1, A(6 * k) + 1, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 8:
                Ef(A(this.a[a][2].x) + A(1 * k), A(this.a[a][2].y - 2 * k), A(8 * k) + 1, A(4 * k) + 1, e);
                Ef(A(this.a[a][1].x), A(this.a[a][1].y - 2 * k), A(4 * k) + 1, A(4 * k) + 1, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k),
                    16 * c, 0, 16, 16, d);
                break;
            case 9:
            case 13:
                Df(A(this.a[a][5].x), A(this.a[a][5].y), A(2 * k), A(2 * k), d);
                K(Ta, A(this.a[a][4].x), A(this.a[a][4].y), A(8 * k), A(8 * k), 16 * c, 0, 16, 16, e);
                K(Ta, A(this.a[a][3].x), A(this.a[a][3].y), A(10 * k), A(10 * k), 16 * c, 0, 16, 16, e);
                K(Ta, A(this.a[a][2].x), A(this.a[a][2].y), A(12 * k), A(12 * k), 16 * c, 0, 16, 16, e);
                K(Ta, A(this.a[a][1].x), A(this.a[a][1].y), A(14 * k), A(14 * k), 16 * c, 0, 16, 16, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 10:
                L(this.a[a][1].x, this.a[a][1].y,
                    this.a[a][2].x, this.a[a][2].y, e);
                3 > this.d[a] && (L(this.a[a][0].x, this.a[a][0].y, this.a[a][1].x, this.a[a][1].y, e), L(this.a[a][0].x, this.a[a][0].y, this.a[a][3].x, this.a[a][3].y, e));
                L(this.a[a][1].x, this.a[a][1].y, this.a[a][2].x, this.a[a][2].y, e);
                L(this.a[a][3].x, this.a[a][3].y, this.a[a][4].x, this.a[a][4].y, e);
                3 > this.d[a] && (L(this.a[a][0].x, this.a[a][0].y, this.a[a][5].x, this.a[a][5].y, e), L(this.a[a][0].x, this.a[a][0].y, this.a[a][7].x, this.a[a][7].y, e));
                L(this.a[a][5].x, this.a[a][5].y, this.a[a][6].x, this.a[a][6].y,
                    e);
                L(this.a[a][7].x, this.a[a][7].y, this.a[a][8].x, this.a[a][8].y, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 11:
                Ef(A(this.a[a][3].x), A(this.a[a][3].y - 7 * k), A(4 * k) + 1, A(14 * k) + 1, e);
                Ef(A(this.a[a][2].x) + 0, A(this.a[a][2].y), A(4 * k) + 1, A(9 * k) + 1, e);
                Ef(A(this.a[a][1].x) + 1, A(this.a[a][1].y), A(4 * k) + 1, A(8 * k) + 1, e);
                K(Ta, A(this.a[a][0].x) + 1, A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 14:
                L(this.a[a][1].x, this.a[a][1].y, this.a[a][2].x, this.a[a][2].y, e);
                L(this.a[a][2].x,
                    this.a[a][2].y, this.a[a][3].x, this.a[a][3].y, e);
                L(this.a[a][3].x, this.a[a][3].y, this.a[a][1].x, this.a[a][1].y, e);
                K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 15:
                L(this.a[a][0].x, this.a[a][0].y, this.a[a][1].x, this.a[a][1].y, e);
                L(this.a[a][0].x, this.a[a][0].y, this.a[a][2].x, this.a[a][2].y, e);
                L(this.a[a][1].x, this.a[a][1].y, this.a[a][2].x, this.a[a][2].y, e);
                2 > this.d[a] ? K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d) : K(Ta, A(this.a[a][3].x),
                    A(this.a[a][3].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 16:
                if (2 > this.d[a])
                    for (b = 1; 4 > b; b++) L(this.a[a][0].x, this.a[a][0].y, this.a[a][b].x, this.a[a][b].y, e);
                for (b = 4; 10 > b; b++) L(this.a[a][b - 3].x, this.a[a][b - 3].y, this.a[a][b].x, this.a[a][b].y, e);
                if (2 > this.d[a])
                    for (b = 7; 10 > b; b++) Df(A(this.a[a][b].x), A(this.a[a][b].y), A(2 * g), A(2 * g), d);
                else
                    for (b = 7; 10 > b; b++) Df(A(this.a[a][b].x) + 1, A(this.a[a][b].y) + 1, A(2 * k), A(2 * k), d);
                2 > this.d[a] ? K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * g), A(16 * g), 16 * c, 0, 16, 16, d) :
                    K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d);
                break;
            case 17:
                if (10 > this.d[a]) {
                    for (b = this.d[a] - 1; 0 < b; b--) Df(A(this.a[a][b].x), A(this.a[a][b].y - 2 * g), A(4 * g), A(4 * g), e);
                    K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * g), A(16 * g), 16 * c, 0, 16, 16, d)
                } else {
                    for (b = this.d[a] - 11; 0 < b; b--) Ef(A(this.a[a][b].x), A(this.a[a][b].y - 2 * k), A(4 * k) + 1, A(4 * k) + 1, e);
                    K(Ta, A(this.a[a][0].x), A(this.a[a][0].y), A(16 * k), A(16 * k), 16 * c, 0, 16, 16, d)
                }
        }
        0 < (uc & 2) && 0 < this.r[a] && (U(A(this.a[a][0].x) - 6 * g, A(this.a[a][0].y) - 10 *
            g, 12 * g, 1, 10027008), U(A(this.a[a][0].x) - 6 * g, A(this.a[a][0].y) - 10 * g, A(12 * g * this.r[a] / C[this.id[a]][hg]), 1, 52224))
    }
};
dh.prototype.M = function(a, b, c, d) {
    var e = C[a][2],
        g = C[a][4],
        k = C[a][5],
        r = V(C[a][Zg], 1, 4);
    1 == d && (r = 1);
    d = r;
    var m = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        n = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    switch (C[a][Yg]) {
        case 0:
            m[0] = b + 0 * d;
            n[0] = c - 7 * d;
            m[1] = b - 5.5 * d;
            n[1] = c - 0 * d;
            m[2] = b + 6 * d;
            n[2] = c - 0 * d;
            break;
        case 1:
            m[0] = b - 3 * d;
            n[0] = c - 8 * d;
            m[1] = b + 1 * d;
            n[1] = c - 7 * d;
            m[2] = b + 4 * d;
            n[2] = c - 1 * d;
            break;
        case 2:
            m[0] = b + 0 * d;
            n[0] = c - 8 * d;
            m[1] = b - 4 * d;
            n[1] = c - 8 * d;
            m[2] = b - 9 * d;
            n[2] = c - 9 * d;
            m[3] = b - 7 * d;
            n[3] = c - 4 * d;
            m[4] = b + 3 * d;
            n[4] = c - 8 * d;
            m[5] = b + 9 * d;
            n[5] = c - 10 * d;
            m[6] = b + 7 * d;
            n[6] = c - 4 * d;
            break;
        case 3:
            m[0] = b - 3 * d;
            n[0] = c - 10 * d;
            m[1] = b + 1 * d;
            n[1] = c - 10 * d;
            m[2] = b + 4 * d;
            n[2] = c - 8 * d;
            m[3] = b + 5 * d;
            n[3] = c - 6 * d;
            m[4] = b + 5 * d;
            n[4] = c - 4 * d;
            m[5] = b + 3 * d;
            n[5] = c - 1 * d;
            break;
        case 4:
            m[0] = b + 0 * d;
            n[0] = c - 15 * d;
            m[1] = b + 0 * d;
            n[1] = c - 10 * d;
            m[2] = b + 0 * d;
            n[2] = c - 7 * d;
            m[3] = b - 2 * d;
            n[3] = c - 8 * d;
            m[4] = b + 3 * d;
            n[4] = c - 11 * d;
            m[5] = b - 5 * d;
            n[5] = c - 7 * d;
            m[6] = b + 5 * d;
            n[6] = c - 8 * d;
            m[7] = b - 3 * d;
            n[7] = c - 3 * d;
            m[8] = b + 3 * d;
            n[8] = c - 5 * d;
            m[9] = b - 1 * d;
            n[9] = c - 1 * d;
            m[10] = b + 2 * d;
            n[10] = c - 0 * d;
            break;
        case 5:
            m[0] = b + 0 * d;
            n[0] = c - 20 * d;
            m[1] = b + 0 * d;
            n[1] = c - 12 * d;
            m[2] = b - 1 * d;
            n[2] = c - 6 * d;
            m[3] = b + 0 * d;
            n[3] = c - 0 *
                d;
            break;
        case 18:
            d = V(d, 1, 2);
            m[0] = b + 0 * d;
            n[0] = c + 20 * d - 40;
            m[1] = b + 0 * d;
            n[1] = c + 12 * d - 40;
            m[2] = b - 1 * d;
            n[2] = c + 6 * d - 40;
            m[3] = b + 0 * d;
            n[3] = c + 0 * d - 40;
            break;
        case 6:
            m[0] = b + 0 * d;
            n[0] = c - 10 * d;
            m[1] = b - 7 * d;
            n[1] = c - 19 * d;
            m[2] = b + 5 * d;
            n[2] = c - 21 * d;
            m[3] = b + 12 * d;
            n[3] = c - 12 * d;
            m[4] = b + 7 * d;
            n[4] = c - 2 * d;
            m[5] = b - 5 * d;
            n[5] = c - 0 * d;
            m[6] = b - 12 * d;
            n[6] = c - 10 * d;
            break;
        case 7:
            m[0] = b - 5 * d;
            n[0] = c - 13 * d;
            m[1] = b + 0 * d;
            n[1] = c - 9 * d;
            m[2] = b + 5 * d;
            n[2] = c - 6 * d;
            m[3] = b + 8 * d;
            n[3] = c - 11 * d;
            m[4] = b + 10 * d;
            n[4] = c - 3 * d;
            break;
        case 8:
            m[0] = b + 0 * d;
            n[0] = c - 12 * d;
            m[1] = b + 0 * d;
            n[1] = c - 5 * d;
            m[2] = b + 0 * d;
            n[2] =
                c - 0 * d;
            break;
        case 9:
        case 13:
            m[0] = b - 4 * d;
            n[0] = c - 20 * d;
            m[1] = b + 2 * d;
            n[1] = c - 16 * d;
            m[2] = b + 4 * d;
            n[2] = c - 11 * d;
            m[3] = b + 2 * d;
            n[3] = c - 6 * d;
            m[4] = b - 1 * d;
            n[4] = c - 3 * d;
            m[5] = b - 5 * d;
            n[5] = c - 2 * d;
            break;
        case 10:
            m[0] = b + 0 * d;
            n[0] = c - 6 * d;
            m[1] = b - 9 * d;
            n[1] = c - 9 * d;
            m[2] = b - 7 * d;
            n[2] = c - 0 * d;
            m[3] = b + 9 * d;
            n[3] = c - 9 * d;
            m[4] = b + 7 * d;
            n[4] = c - 0 * d;
            m[5] = b - 7 * d;
            n[5] = c - 5 * d;
            m[6] = b - 5 * d;
            n[6] = c - 0 * d;
            m[7] = b + 7 * d;
            n[7] = c - 5 * d;
            m[8] = b + 5 * d;
            n[8] = c - 0 * d;
            break;
        case 11:
            m[0] = b + 0 * d;
            n[0] = c - 19 * d;
            m[1] = b - 8 * d;
            n[1] = c - 13 * d;
            m[2] = b + 8 * d;
            n[2] = c - 18 * d;
            m[3] = b + 0 * d;
            n[3] = c - 0 * d;
            break;
        case 12:
            m[0] = b + 0 *
                d;
            n[0] = c - 16 * d;
            m[1] = b + 0 * d;
            n[1] = c - 10 * d;
            m[2] = b + 2 * d;
            n[2] = c - 7 * d;
            m[3] = b - 2 * d;
            n[3] = c - 8 * d;
            m[4] = b - 3 * d;
            n[4] = c - 11 * d;
            m[5] = b - 5 * d;
            n[5] = c - 7 * d;
            m[6] = b - 8 * d;
            n[6] = c - 10 * d;
            m[7] = b - 1 * d;
            n[7] = c - 4 * d;
            m[8] = b + 2 * d;
            n[8] = c - 5 * d;
            m[9] = b - 0 * d;
            n[9] = c - 1 * d;
            m[10] = b + 4 * d;
            n[10] = c - 0 * d;
            break;
        case 14:
            m[0] = b + 0 * d;
            n[0] = c - 8 * d;
            m[1] = b - 0 * d;
            n[1] = c - 14 * d;
            m[2] = b - 8 * d;
            n[2] = c - 16 * d;
            m[3] = b + 8 * d;
            n[3] = c - 16 * d;
            break;
        case 15:
            m[0] = b - 1 * d;
            n[0] = c - 12 * d;
            m[1] = b - 3 * d;
            n[1] = c - 0 * d;
            m[2] = b + 3 * d;
            n[2] = c - 0 * d;
            break;
        case 16:
            m[0] = b - 0 * d;
            n[0] = c - 10 * d;
            m[1] = b - 3 * d;
            n[1] = c - 11 * d;
            m[4] = b - 6 * d;
            n[4] =
                c - 12 * d;
            m[7] = b - 9 * d;
            n[7] = c - 13 * d;
            m[2] = b + 3 * d;
            n[2] = c - 11 * d;
            m[5] = b + 6 * d;
            n[5] = c - 12 * d;
            m[8] = b + 8 * d;
            n[8] = c - 14 * d;
            m[3] = b + 1 * d;
            n[3] = c - 7 * d;
            m[6] = b + 2 * d;
            n[6] = c - 4 * d;
            m[9] = b + 1 * d;
            n[9] = c - 1 * d;
            break;
        case 17:
            m[0] = b + 2 * d, n[0] = c - 16 * d, m[1] = b + 2 * d, n[1] = c - 6 * d, m[2] = b - 3 * d, n[2] = c - 5 * d, m[3] = b - 2 * d, n[3] = c - 0 * d
    }
    switch (C[a][Yg]) {
        case 0:
            Ef(A(m[1] - 0.5), A(n[1]) - 2 * r, A(4 * d) + 1, A(4 * d) + 1, k);
            Ef(A(m[2] - 0.5), A(n[2]) - 2 * r, A(4 * d) + 1, A(4 * d) + 1, k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 1:
            K(Ta, A(m[2]), A(n[2] - 2 * d), A(8 * d), A(8 * d), 16 * e, 0, 16,
                16, k);
            K(Ta, A(m[1]), A(n[1] - 3 * d), A(12 * d), A(12 * d), 16 * e, 0, 16, 16, k);
            K(Ta, A(m[0]), A(n[0] - 4 * d), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 2:
            L(m[1], n[1], m[2], n[2], k);
            L(m[2], n[2], m[3], n[3], k);
            L(m[3], n[3], m[1], n[1], k);
            L(m[4], n[4], m[5], n[5], k);
            L(m[5], n[5], m[6], n[6], k);
            L(m[6], n[6], m[4], n[4], k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 3:
            L(m[0], n[0], m[1], n[1], k);
            L(m[4], n[4], m[5], n[5], k);
            L(m[1], n[1], m[2], n[2], k);
            L(m[2], n[2], m[3], n[3], k);
            L(m[3], n[3], m[4], n[4], k);
            Df(A(m[5]), A(n[5]), A(2 * d), A(2 *
                d), g);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 4:
        case 12:
            L(m[1], n[1], m[2], n[2], k);
            L(m[1], n[1], m[3], n[3], k);
            L(m[1], n[1], m[4], n[4], k);
            L(m[3], n[3], m[5], n[5], k);
            L(m[4], n[4], m[6], n[6], k);
            L(m[2], n[2], m[7], n[7], k);
            L(m[2], n[2], m[8], n[8], k);
            L(m[7], n[7], m[9], n[9], k);
            L(m[8], n[8], m[10], n[10], k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 5:
            for (a = 3; 0 < a; a--) Ef(A(m[a]), A(n[a] - 2 * d), A(4 * d) + 1, A(4 * d) + 1, k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 18:
            d =
                V(d, 1, 2);
            for (a = 3; 0 < a; a--) Ef(A(m[a]), A(n[a] + 2 * d), A(4 * d) + 1, A(4 * d) + 1, k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 15, 16, -16, g);
            break;
        case 6:
            for (a = 1; 6 > a; a++) L(m[a], n[a], m[a + 1], n[a + 1], k);
            L(m[a], n[a], m[1], n[1], k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 7:
            L(m[2], n[2], m[3], n[3], k);
            L(m[2], n[2], m[4], n[4], k);
            L(m[3], n[3], m[4], n[4], k);
            Ef(A(m[1]), A(n[1]), A(6 * d) + 1, A(6 * d) + 1, k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 8:
            Ef(A(m[2]) + A(1 * d), A(n[2] - 2 * d), A(8 * d) + 1, A(4 * d) + 1,
                k);
            Ef(A(m[1]), A(n[1] - 2 * d), A(4 * d) + 1, A(4 * d) + 1, k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 9:
        case 13:
            Df(A(m[5]), A(n[5]), A(2 * d), A(2 * d), g);
            K(Ta, A(m[4]), A(n[4]), A(8 * d), A(8 * d), 16 * e, 0, 16, 16, k);
            K(Ta, A(m[3]), A(n[3]), A(10 * d), A(10 * d), 16 * e, 0, 16, 16, k);
            K(Ta, A(m[2]), A(n[2]), A(12 * d), A(12 * d), 16 * e, 0, 16, 16, k);
            K(Ta, A(m[1]), A(n[1]), A(14 * d), A(14 * d), 16 * e, 0, 16, 16, k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 10:
            L(A(m[0]), A(n[0]), A(m[1]), A(n[1]), k);
            L(A(m[0]), A(n[0]), A(m[3]), A(n[3]),
                k);
            L(A(m[1]), A(n[1]), A(m[2]), A(n[2]), k);
            L(A(m[3]), A(n[3]), A(m[4]), A(n[4]), k);
            L(A(m[0]), A(n[0]), A(m[5]), A(n[5]), k);
            L(A(m[0]), A(n[0]), A(m[7]), A(n[7]), k);
            L(A(m[5]), A(n[5]), A(m[6]), A(n[6]), k);
            L(A(m[7]), A(n[7]), A(m[8]), A(n[8]), k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 11:
            Ef(A(m[3]), A(n[3] - 7 * d), A(4 * d) + 1, A(14 * d) + 1, k);
            Ef(A(m[2]) + 0, A(n[2]), A(4 * d) + 1, A(9 * d) + 1, k);
            Ef(A(m[1]) + 1, A(n[1]), A(4 * d) + 1, A(8 * d) + 1, k);
            K(Ta, A(m[0]) + 1, A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 14:
            L(A(m[1]), A(n[1]),
                A(m[2]), A(n[2]), k);
            L(A(m[1]), A(n[1]), A(m[3]), A(n[3]), k);
            L(A(m[2]), A(n[2]), A(m[3]), A(n[3]), k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 15:
            L(A(m[0]), A(n[0]), A(m[1]), A(n[1]), k);
            L(A(m[0]), A(n[0]), A(m[2]), A(n[2]), k);
            L(A(m[1]), A(n[1]), A(m[2]), A(n[2]), k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 16:
            for (a = 1; 4 > a; a++) L(A(m[0]), A(n[0]), A(m[a]), A(n[a]), k);
            for (a = 4; 10 > a; a++) L(A(m[a - 3]), A(n[a - 3]), A(m[a]), A(n[a]), k);
            for (a = 7; 10 > a; a++) Df(A(m[a]), A(n[a]), A(2 * d), A(2 * d), g);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g);
            break;
        case 17:
            for (a = 3; 0 < a; a--) Df(A(m[a]), A(n[a] - 2 * d), A(4 * d), A(4 * d), k);
            K(Ta, A(m[0]), A(n[0]), A(16 * d), A(16 * d), 16 * e, 0, 16, 16, g)
    }
};
var ve = 90,
    we = [3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    ye = 1,
    xe = 2,
    fg = 4,
    eg = [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 9, 10, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 0, 0, 0, 0, 0, 0, 0],
    bg = [1, 2, 3, 4, 5, 5, 6, 6, 7, 7, 9, 5, 6, 7,
        1, 8, 8, 9, 9, 9, 1, 10, 11, 11, 12, 12, 13, 13, 14, 14, 12, 13, 14, 1, 15, 15, 15, 16, 16, 1, 17, 17, 18, 17, 18, 18, 18, 1, 19, 19, 19, 20, 20, 20, 21, 23, 20, 21, 21, 22, 22, 23, 22, 23, 24, 24, 24, 24, 24, 25, 1, 1, 24, 25, 26, 26, 26, 1, 27, 27, 28, 28, 1, 29, 30, 31, 32, 0, 0, 0
    ],
    Qf = "Town;Opening Street;Grassland 1;Grassland 2;Grassland 3;Grassland 4;Grassland 5;Grassland 6;Grassland 7;Castle Gate;Castle;Hill Country 1;Hill Country 2;Hill Country 3;Lake;Forest 1;Forest 2;Cavern 1;Cavern 2;Cavern 3;Village;Seaside 1;Seaside 2;Seaside 3;Seaside 4;Submarine 1;Submarine 2;Submarine 3;Submarine 4;Submarine Shrine;Mist Grove 1;Mist Grove 2;Mist Grove 3;???;Desert 1;Desert 2;Desert 3;Desert 4;Desert 5;Oasis;Desert 6;Desert 7;Pyramid;Desert 8;Beach 1;Beach 2;Beach 3;Resort;Cavern 4;Cavern 5;Cavern 6;Snowfield 1;Snowfield 2;Mountain 1;Mountain 2;Mountaintop;Snowfield 3;Snowfield 4;Snowfield 5;Snowfield 6;Snowfield 7;Snowfield 8;Frozen Lake;Ice Castle;Snowfield 9;Beach 4;Forest 3;Forest 4;Forest 5;Forest 6;Forget Tree;!!!;Hell 1;Hell 2;Hell 3;Hell 4;Hell 5;Island;Hell 6;Inferno 1;Inferno 2;Inferno 3;Blood Lake;Cavern 7;Cavern 8;Hell 7;Hell 8;Hell Gate;;".split(";"),
    ze = [
        [6, 28, 0, 1, 0],
        [10, 28, 0, 2, 0],
        [11, 24, 0, 3, 11],
        [10, 20, 0, 4, 5],
        [8, 16, 0, 6, 0],
        [12, 17, 0, 6, 14],
        [11, 12, 0, 7, 0],
        [15, 13, 0, 8, 0],
        [20, 13, 0, 9, 15],
        [24, 16, 0, 10, 0],
        [28, 16, 1, 21, 0],
        [15, 23, 0, 12, 0],
        [18, 20, 0, 13, 0],
        [22, 19, 0, 9, 0],
        [15, 17, 0, 0, 0],
        [20, 10, 0, 16, 0],
        [22, 7, 0, 17, 0],
        [22, 4, 1, 18, 0],
        [14, 3, 0, 19, 0],
        [6, 4, 1, 20, 0],
        [4, 7, 0, 0, 0],
        [33, 16, 0, 22, 30],
        [34, 12, 0, 23, 0],
        [37, 9, 0, 24, 0],
        [41, 10, 0, 25, 0],
        [42, 13, 0, 26, 28],
        [39, 16, 0, 27, 0],
        [43, 19, 0, 29, 0],
        [45, 14, 0, 29, 0],
        [48, 17, 2, 34, 0],
        [35, 20, 0, 31, 0],
        [38, 21, 0, 32, 0],
        [42, 24, 0, 33, 0],
        [46, 24, 0, 0, 0],
        [53, 17,
            0, 35, 36
        ],
        [57, 16, 0, 37, 0],
        [57, 20, 0, 38, 0],
        [60, 14, 0, 39, 0],
        [61, 19, 0, 39, 0],
        [63, 16, 1, 40, 41],
        [66, 14, 0, 42, 0],
        [66, 18, 0, 42, 43],
        [69, 16, 1, 48, 0],
        [70, 20, 0, 44, 0],
        [72, 24, 0, 45, 0],
        [76, 26, 0, 46, 0],
        [72, 30, 0, 47, 0],
        [65, 28, 0, 0, 0],
        [74, 14, 1, 49, 0],
        [78, 8, 0, 50, 0],
        [84, 10, 1, 51, 0],
        [87, 12, 0, 52, 56],
        [86, 16, 0, 53, 0],
        [81, 18, 0, 54, 0],
        [78, 14, 0, 55, 0],
        [79, 11, 0, 0, 0],
        [91, 11, 0, 57, 0],
        [93, 14, 0, 58, 59],
        [96, 16, 0, 62, 63],
        [94, 19, 0, 60, 0],
        [97, 21, 0, 61, 63],
        [96, 25, 0, 0, 0],
        [97, 13, 0, 0, 0],
        [101, 18, 1, 64, 65],
        [105, 16, 0, 72, 0],
        [106, 23, 0, 66, 0],
        [102, 28, 0, 67, 0],
        [110, 30,
            0, 68, 0
        ],
        [114, 29, 0, 69, 0],
        [115, 26, 0, 70, 0],
        [113, 22, 1, 71, 0],
        [109, 19, 0, 0, 0],
        [113, 16, 0, 73, 0],
        [117, 15, 0, 74, 0],
        [121, 18, 0, 75, 0],
        [126, 21, 0, 76, 79],
        [130, 18, 0, 77, 78],
        [126, 14, 0, 0, 0],
        [135, 17, 0, 83, 0],
        [125, 25, 0, 80, 0],
        [130, 27, 0, 81, 0],
        [135, 25, 0, 82, 0],
        [137, 21, 0, 0, 0],
        [136, 14, 1, 84, 0],
        [145, 12, 1, 85, 0],
        [143, 17, 0, 86, 0],
        [139, 15, 0, 87, 0],
        [140, 10, 0, -1, 0],
        [-50, 0, 0, 0, 0],
        [-50, 0, 0, 0, 0]
    ],
    O = 1,
    P = 2,
    Q = 3,
    R = 4,
    S = 5,
    T = 6,
    If = 7,
    Jf = 8,
    Kf = 9,
    Hf = 10,
    Lf = 11,
    Mf = 12,
    Nf = 13,
    Of = 14,
    Ie = [
        [
            [0, 0, O, 0, 0, O, 0, 0, O, 0, 0, O, 0, 0],
            [0, 100, O, 0]
        ],
        [
            [0, 1, O, 0, 5, Q, 1, 1],
            [0, 1, O, 0,
                6, Q, 1, 3
            ],
            [0, 1, O, 0, 6, P, 1, 2, Q, 2, 1],
            [0, 1, O, 1, 5, Q, 2, 3],
            [0, 1, O, 2, 5, Q, 1, 2],
            [0, 1, O, 0, 20],
            [0, 1, O, 2, 8, Q, 3, 1],
            [0, 1, O, 2, 8, P, 0, 3, Q, 3, 2],
            [0, 1, O, 2, 8, P, 3, 1, Q, 3, 2, R, 3, 3],
            [0, 100, P, 2, 2, Q, 3, 2, R, 4, 1]
        ],
        [
            [0, 2, P, 5, 1, Q, 5, 2, R, 5, 3],
            [0, 2, O, 5, 6, Q, 6, 2],
            [0, 2, P, 5, 6, Q, 6, 4],
            [0, 2, P, 5, 12],
            [0, 2, O, 5, 6, P, 6, 2, Q, 6, 2, R, 7, 1],
            [0, 2, P, 6, 3, Q, 7, 2, R, 6, 3],
            [0, 2, P, 7, 3, Q, 6, 4],
            [0, 100, P, 5, 1, Q, 5, 6, R, 8, 12]
        ],
        [
            [0, 2, O, 9, 2, P, 10, 1, Q, 10, 1, R, 10, 1],
            [0, 2, O, 9, 3, P, 10, 1, Q, 10, 3, R, 10, 2],
            [0, 2, P, 10, 1, Q, 10, 1, R, 9, 5],
            [0, 2, O, 9, 3, P, 10, 2, Q, 10, 3, R, 11, 2],
            [0, 2, O, 11, 3, P, 10, 3, Q,
                10, 3, R, 10, 3
            ],
            [0, 2, O, 10, 8, P, 10, 4, Q, 9, 3, R, 12, 1],
            [0, 2, O, 10, 8, P, 9, 3, Q, 12, 1, R, 11, 5],
            [0, 2, O, 9, 5, P, 10, 3, Q, 12, 3, R, 11, 3],
            [0, 100, P, 12, 2, Q, 13, 1, R, 11, 2]
        ],
        [
            [0, 2, O, 15, 3, Q, 14, 1, R, 14, 1],
            [0, 2, O, 15, 3, P, 16, 1, Q, 14, 1, R, 14, 1],
            [0, 2, P, 15, 3, Q, 16, 3, R, 14, 3],
            [0, 2, O, 16, 6, P, 14, 1, Q, 14, 1, R, 14, 1],
            [0, 2, O, 15, 9, R, 17, 1],
            [0, 2, O, 17, 1, P, 15, 6, Q, 16, 3, R, 14, 3],
            [0, 2, O, 17, 2, P, 14, 3, Q, 14, 3, R, 14, 3],
            [0, 2, O, 17, 3, P, 15, 6, Q, 16, 3, R, 16, 3],
            [0, 100, P, 15, 3, Q, 18, 1, R, 15, 3]
        ],
        [
            [0, 2, O, 19, 5],
            [0, 2, O, 19, 10],
            [0, 2, O, 19, 15],
            [0, 2, P, 19, 5, Q, 19, 5, R, 21, 1],
            [0, 2, O, 19, 10, Q,
                20, 3
            ],
            [0, 2, O, 19, 10, P, 21, 1, Q, 20, 2, R, 21, 1],
            [0, 2, O, 19, 5, P, 19, 3, Q, 20, 3, R, 21, 3],
            [0, 100, P, 19, 2, Q, 19, 6, R, 22, 12]
        ],
        [
            [0, 2, O, 23, 6],
            [0, 2, O, 23, 8, Q, 24, 3],
            [0, 2, O, 24, 6, P, 23, 2, Q, 23, 2, R, 23, 2],
            [0, 2, Q, 24, 6, R, 23, 6],
            [0, 2, O, 23, 9, Q, 25, 1],
            [0, 2, O, 23, 9, P, 25, 1, Q, 25, 1, R, 25, 1],
            [0, 2, O, 23, 12, P, 24, 3, Q, 25, 2, R, 25, 2],
            [0, 2, O, 25, 6, P, 24, 3, Q, 24, 3, R, 24, 3],
            [0, 100, O, 26, 3, P, 23, 3, Q, 25, 3, R, 24, 3]
        ],
        [
            [0, 2, Q, 27, 5, R, 28, 1],
            [0, 2, O, 27, 5, P, 28, 1, Q, 28, 1, R, 28, 1],
            [0, 2, O, 27, 5, P, 29, 1, Q, 29, 1, R, 29, 1],
            [0, 2, O, 28, 5, P, 29, 1, Q, 29, 1, R, 29, 1],
            [0, 2, P, 27, 5, Q, 28, 3, R, 29,
                2
            ],
            [0, 2, O, 27, 9, Q, 27, 9],
            [0, 2, O, 28, 5, Q, 29, 5],
            [0, 100, O, 28, 5, P, 29, 2, Q, 30, 1, R, 29, 2]
        ],
        [
            [0, 2, Q, 32, 1, R, 32, 2],
            [0, 2, O, 31, 3, P, 32, 1, Q, 32, 2, R, 32, 2],
            [0, 2, P, 31, 3, Q, 32, 2, R, 32, 3],
            [0, 2, O, 31, 5, Q, 33, 2],
            [0, 2, O, 32, 8, Q, 33, 1, R, 33, 2],
            [0, 2, P, 31, 5, Q, 33, 4, R, 33, 3],
            [0, 2, O, 31, 8, P, 32, 2, Q, 32, 3, R, 33, 4],
            [0, 100, P, 32, 3, Q, 33, 3, R, 34, 1]
        ],
        [
            [1, 1, Q, 35, 10, R, 36, 1],
            [1, 1, P, 35, 1, Q, 35, 15, R, 36, 1],
            [1, 1, O, 35, 15, P, 37, 1, Q, 37, 1, R, 37, 1],
            [1, 1, O, 35, 15, P, 36, 1, Q, 36, 1, R, 36, 1],
            [1, 1, O, 37, 5, P, 36, 2, Q, 35, 10, R, 36, 2],
            [1, 100, O, 36, 3, Q, 38, 1]
        ],
        [
            [1, 100, O, 39, 0],
            [1, 100,
                R, 39, 1
            ]
        ],
        [
            [2, 3, Q, 41, 1, O, 42, 3],
            [2, 3, Q, 41, 1, Q, 42, 6],
            [2, 3, Q, 41, 1, R, 43, 6],
            [2, 3, O, 41, 2, O, 43, 5],
            [2, 3, O, 41, 3, O, 42, 9],
            [2, 3, O, 41, 3, O, 42, 9, O, 43, 6],
            [2, 100, Q, 44, 1, Q, 43, 6]
        ],
        [
            [2, 3, Q, 45, 1, O, 46, 3],
            [2, 3, Q, 45, 1, S, 46, 5],
            [2, 3, Q, 45, 1, O, 47, 5],
            [2, 3, O, 45, 2, O, 47, 9],
            [2, 3, S, 45, 3, S, 46, 6],
            [2, 3, S, 45, 2, S, 46, 6, O, 47, 5],
            [2, 100, R, 48, 1, Q, 45, 2]
        ],
        [
            [2, 3, O, 49, 1, O, 50, 1],
            [2, 3, O, 49, 1, O, 51, 5],
            [2, 3, O, 50, 1, O, 51, 5],
            [2, 3, O, 49, 1, O, 50, 1, O, 51, 9],
            [2, 100, Q, 52, 1, Q, 49, 2, Q, 50, 2]
        ],
        [
            [0, 4, T, 53, 10, T, 55, 5],
            [0, 4, T, 53, 20, T, 55, 5],
            [0, 4, T, 53, 15, O, 54, 10],
            [0, 4, T,
                55, 8, O, 54, 10
            ],
            [0, 4, T, 53, 30, T, 55, 5],
            [0, 4, T, 53, 30, O, 54, 5],
            [0, 4, T, 53, 20, O, 54, 5, T, 55, 5],
            [0, 101, T, 56, 1, O, 54, 5, T, 55, 5]
        ],
        [
            [3, 1, O, 58, 3],
            [3, 1, O, 58, 4, O, 57, 5],
            [3, 1, O, 58, 5, O, 59, 5],
            [3, 1, O, 58, 5, Q, 57, 5, P, 59, 5],
            [3, 1, Q, 57, 8, R, 59, 8],
            [3, 1, O, 58, 15, O, 57, 1, O, 59, 1],
            [3, 1, O, 58, 6, O, 57, 6, O, 59, 6],
            [3, 100, Q, 60, 3, O, 58, 10]
        ],
        [
            [3, 1, O, 62, 3, O, 61, 2],
            [3, 1, O, 62, 4, O, 63, 3],
            [3, 1, O, 62, 5, S, 61, 5],
            [3, 1, O, 62, 5, S, 63, 5],
            [3, 1, S, 61, 5, S, 63, 5],
            [3, 1, O, 62, 15, S, 61, 1, S, 63, 1],
            [3, 1, O, 62, 6, S, 61, 6, S, 63, 6],
            [3, 100, Q, 64, 1, O, 62, 3, S, 61, 1, S, 63, 1]
        ],
        [
            [4, 5, T, 69, 1, O,
                65, 5
            ],
            [4, 5, T, 69, 1, O, 65, 5, Q, 66, 5],
            [4, 5, T, 69, 1, O, 65, 5, R, 67, 5],
            [4, 5, T, 69, 1, Q, 66, 5, Q, 65, 5],
            [4, 5, T, 69, 1, P, 66, 5, Q, 65, 5, R, 67, 5],
            [4, 5, T, 69, 1, O, 66, 6, O, 65, 6, O, 67, 6],
            [4, 102, Q, 68, 1]
        ],
        [
            [4, 5, T, 74, 1, O, 70, 8],
            [4, 5, T, 74, 1, O, 70, 8, O, 71, 5],
            [4, 5, T, 74, 1, O, 70, 8, O, 72, 5],
            [4, 5, T, 74, 1, Q, 71, 8, O, 72, 5],
            [4, 5, T, 74, 1, P, 70, 6, Q, 71, 6, R, 72, 6],
            [4, 5, T, 74, 1, O, 70, 8, O, 71, 8, O, 72, 8],
            [4, 102, Q, 73, 1, O, 71, 8]
        ],
        [
            [4, 5, T, 79, 1, O, 75, 5, Q, 76, 1],
            [4, 5, T, 79, 1, O, 75, 5, O, 77, 2],
            [4, 5, T, 79, 1, O, 75, 5, S, 76, 5],
            [4, 5, T, 79, 1, Q, 75, 4, Q, 76, 4, Q, 77, 2],
            [4, 5, T, 79, 1, O, 75, 5, S,
                76, 5, O, 77, 3
            ],
            [4, 102, Q, 78, 2, R, 78, 3, Q, 77, 5, R, 77, 10]
        ],
        [
            [0, 0, O, 80, 0],
            [0, 100, O, 80, 0]
        ],
        [
            [0, 6, O, 80, 10, Q, 83, 2],
            [0, 6, O, 81, 10, O, 83, 5],
            [0, 6, O, 80, 12, Q, 83, 3, R, 82, 1],
            [0, 6, O, 83, 12, O, 81, 5, Q, 82, 1],
            [0, 6, P, 80, 8, Q, 81, 8, R, 83, 8, O, 82, 5],
            [0, 100, R, 84, 1]
        ],
        [
            [0, 6, O, 85, 15, Q, 86, 1],
            [0, 6, O, 85, 15, Q, 86, 2, S, 87, 5, S, 88, 1],
            [0, 6, S, 87, 20, S, 88, 2],
            [0, 6, O, 85, 15, Q, 86, 1, S, 87, 15, S, 88, 1],
            [0, 6, O, 85, 10, Q, 86, 4, S, 87, 5, S, 88, 4],
            [0, 100, R, 89, 1]
        ],
        [
            [0, 6, Q, 92, 1, Q, 92, 2],
            [0, 6, Q, 90, 15, Q, 92, 1],
            [0, 6, O, 91, 15, Q, 91, 5, Q, 92, 1],
            [0, 6, S, 91, 15, Q, 92, 1],
            [0, 6, Q, 90, 15, S,
                91, 10, Q, 92, 1
            ],
            [0, 100, R, 93, 1]
        ],
        [
            [0, 6, Q, 94, 10, R, 94, 10, R, 96, 5],
            [0, 6, S, 95, 20, O, 96, 5],
            [0, 6, O, 94, 30, S, 95, 30, O, 96, 5],
            [0, 6, Q, 94, 30, S, 95, 30, Q, 96, 5],
            [0, 100, Q, 97, 1, Q, 96, 20]
        ],
        [
            [4, 4, T, 99, 10, T, 100, 1],
            [4, 4, T, 98, 10, T, 99, 10, T, 100, 1],
            [4, 4, P, 98, 10, R, 98, 10, T, 100, 1],
            [4, 4, T, 99, 20, T, 100, 5],
            [4, 4, Q, 98, 10, T, 98, 10, T, 99, 5, T, 100, 2],
            [4, 101, T, 101, 1]
        ],
        [
            [4, 4, O, 102, 20, T, 103, 3],
            [4, 4, O, 102, 30, O, 104, 3],
            [4, 4, Q, 102, 20, T, 103, 3, R, 104, 3],
            [4, 4, O, 102, 20, T, 103, 8, R, 104, 5],
            [4, 101, O, 102, 50, Q, 105, 1]
        ],
        [
            [4, 4, T, 106, 10, T, 107, 3],
            [4, 4, T, 106, 20, T, 108,
                2
            ],
            [4, 4, T, 106, 20, T, 107, 5, T, 108, 1],
            [4, 4, T, 106, 15, T, 107, 10, T, 108, 1],
            [4, 4, T, 106, 35, T, 108, 3],
            [4, 101, T, 109, 5]
        ],
        [
            [4, 4, T, 111, 10, T, 112, 1],
            [4, 4, T, 111, 20, T, 112, 1],
            [4, 4, T, 110, 30, T, 112, 1],
            [4, 4, T, 111, 20, T, 112, 2],
            [4, 101, T, 113, 1, T, 112, 2, T, 111, 10]
        ],
        [
            [1, 101, T, 114, 0],
            [1, 101, T, 114, 1]
        ],
        [
            [3, 2, O, 116, 5, S, 118, 3],
            [3, 2, O, 116, 12, O, 117, 12],
            [3, 2, Q, 116, 10, O, 116, 5, S, 118, 5],
            [3, 2, O, 117, 12, S, 118, 8],
            [3, 2, O, 116, 10, Q, 117, 10, S, 118, 5],
            [3, 100, Q, 119, 1, S, 118, 3]
        ],
        [
            [3, 2, R, 122, 1, O, 120, 5],
            [3, 2, R, 122, 3, O, 120, 10],
            [3, 2, R, 122, 5, O, 121, 10, R, 120, 10],
            [3, 100, Q, 123, 1, O, 120, 10]
        ],
        [
            [3, 3, O, 124, 20],
            [3, 3, O, 125, 20],
            [3, 3, O, 126, 20],
            [3, 2, O, 124, 10, O, 125, 5, O, 126, 5],
            [3, 2, R, 124, 10, O, 125, 10, Q, 126, 5],
            [3, 3, Q, 124, 30],
            [3, 100, Q, 127, 1]
        ],
        [
            [3, 1, O, 128, 10],
            [3, 1, O, 128, 50],
            [3, 100, O, 128, 99, O, 129, 1]
        ],
        [
            [5, 7, O, 130, 10, O, 132, 1],
            [5, 7, O, 130, 15, O, 131, 15, R, 132, 2],
            [5, 7, O, 131, 30, O, 132, 2],
            [5, 7, Q, 130, 30, R, 132, 3],
            [5, 7, O, 130, 20, Q, 131, 20, O, 132, 3],
            [5, 100, Q, 133, 1, R, 132, 5]
        ],
        [
            [5, 7, O, 134, 10, S, 135, 1],
            [5, 7, O, 134, 30, Q, 136, 5, S, 135, 3],
            [5, 7, S, 134, 10, O, 136, 10, S, 135, 2],
            [5, 7, Q, 134, 10, Q, 136, 5, S, 135, 4],
            [5, 7, S, 134, 30, Q, 136, 5, S, 135, 3],
            [5, 100, Q, 137, 1, Q, 135, 2]
        ],
        [
            [5, 7, P, 138, 5, Q, 139, 5, R, 140, 1],
            [5, 7, Q, 139, 10, R, 138, 10, O, 140, 2],
            [5, 7, O, 138, 25, Q, 140, 3],
            [5, 7, O, 139, 25, Q, 140, 3],
            [5, 7, P, 138, 15, Q, 140, 3, R, 139, 15],
            [5, 7, Q, 139, 20, O, 140, 5],
            [5, 100, O, 141, 5, O, 138, 30]
        ],
        [
            [5, 7, O, 143, 10, Q, 142, 3],
            [5, 7, O, 143, 15, Q, 142, 3, Q, 144, 3],
            [5, 7, Q, 143, 1, S, 142, 20, Q, 144, 5],
            [5, 7, Q, 143, 1, S, 142, 10, O, 144, 15],
            [5, 7, P, 143, 10, S, 142, 10, Q, 144, 10],
            [5, 100, Q, 145, 1, O, 143, 8]
        ],
        [
            [5, 7, Q, 146, 1, R, 147, 1, T, 148, 1],
            [5, 7, O, 146, 3, T, 148, 2],
            [5, 7, O, 147, 3, T, 148, 3],
            [5, 7,
                O, 146, 2, O, 147, 2, T, 148, 3
            ],
            [5, 7, Q, 146, 1, Q, 147, 1, T, 148, 30],
            [5, 100, Q, 149, 25, R, 149, 25]
        ],
        [
            [5, 4, T, 150, 10, Q, 151, 10],
            [5, 4, T, 151, 10, Q, 152, 10],
            [5, 4, T, 152, 10, Q, 150, 10],
            [5, 4, P, 150, 10, Q, 151, 10, R, 152, 10],
            [5, 4, T, 150, 10, T, 151, 10, T, 152, 10],
            [5, 101, T, 153, 1]
        ],
        [
            [5, 7, O, 154, 3, S, 155, 2, R, 156, 1],
            [5, 7, O, 154, 15, Q, 154, 10, Q, 156, 1],
            [5, 7, S, 155, 20, Q, 156, 1],
            [5, 7, O, 154, 15, S, 155, 15, O, 156, 2],
            [5, 7, P, 154, 15, S, 155, 15, O, 156, 2],
            [5, 100, Q, 157, 1]
        ],
        [
            [5, 7, P, 158, 10, Q, 160, 1, R, 158, 10],
            [5, 7, S, 159, 20, Q, 160, 2],
            [5, 7, P, 158, 10, S, 159, 20, O, 160, 3],
            [5, 7, Q,
                159, 20, Q, 160, 5
            ],
            [5, 100, Q, 161, 1, O, 160, 5]
        ],
        [
            [5, 102, Q, 162, 0],
            [5, 102, Q, 162, 1]
        ],
        [
            [5, 2, P, 164, 10, R, 165, 1],
            [5, 2, O, 165, 2],
            [5, 2, O, 164, 30, O, 166, 3],
            [5, 2, P, 164, 10, R, 165, 1, O, 166, 3],
            [5, 100, Q, 167, 1, R, 165, 1]
        ],
        [
            [5, 8, O, 168, 15, S, 169, 3],
            [5, 8, O, 168, 20, T, 170, 1],
            [5, 8, O, 168, 20, S, 169, 5, T, 170, 2],
            [5, 8, S, 169, 30, T, 170, 2],
            [5, 8, O, 168, 10, S, 169, 5, T, 170, 3],
            [5, 101, Q, 171, 1, T, 170, 3]
        ],
        [
            [5, 8, S, 172, 5, S, 173, 5, S, 174, 1],
            [5, 8, S, 172, 20, S, 174, 3],
            [5, 8, S, 173, 20, S, 174, 3],
            [5, 8, S, 172, 10, S, 173, 10, S, 174, 3],
            [5, 8, S, 173, 3, S, 173, 3, S, 174, 15],
            [5, 101, S, 175,
                10
            ]
        ],
        [
            [5, 8, T, 177, 10, O, 178, 10],
            [5, 8, Q, 176, 1, T, 177, 10],
            [5, 8, Q, 176, 1, O, 178, 10],
            [5, 8, Q, 176, 1, T, 177, 10, O, 178, 10],
            [5, 101, Q, 176, 2, T, 179, 1]
        ],
        [
            [0, 0, O, 180, 0],
            [0, 100, O, 180, 0]
        ],
        [
            [4, 9, O, 180, 20, T, 184, 1],
            [4, 9, O, 180, 30, O, 181, 3, T, 184, 2],
            [4, 9, O, 180, 40, O, 182, 3, T, 184, 3],
            [4, 9, O, 180, 50, O, 181, 3, O, 182, 3],
            [4, 9, O, 180, 60, T, 184, 10],
            [4, 103, Q, 183, 1, O, 180, 20]
        ],
        [
            [4, 9, O, 185, 30, Q, 186, 3],
            [4, 9, O, 185, 40, O, 186, 10, R, 187, 1],
            [4, 9, O, 185, 40, Q, 186, 20, Q, 187, 1],
            [4, 9, O, 185, 70, Q, 187, 1, R, 187, 1],
            [4, 9, O, 185, 40, T, 189, 1],
            [4, 103, R, 188, 1, O, 186, 5]
        ],
        [
            [4,
                9, O, 190, 80, T, 194, 1
            ],
            [4, 9, O, 191, 80, T, 194, 1],
            [4, 9, O, 192, 80, T, 194, 1],
            [4, 103, Q, 193, 1]
        ],
        [
            [7, 3, R, 195, 30, Q, 196, 1],
            [7, 3, R, 195, 30, Q, 197, 3],
            [7, 3, O, 195, 50, Q, 196, 3, Q, 197, 3],
            [7, 3, R, 195, 50, Q, 196, 3, Q, 197, 3],
            [7, 100, Q, 198, 1, Q, 197, 3]
        ],
        [
            [7, 3, O, 199, 30, Q, 200, 2],
            [7, 3, O, 199, 40, Q, 201, 2],
            [7, 3, Q, 200, 20, Q, 201, 2],
            [7, 3, O, 199, 20, Q, 200, 10, R, 201, 2],
            [7, 3, O, 201, 5],
            [7, 100, Q, 202, 1, O, 199, 90]
        ],
        [
            [3, 10, O, 203, 30, Q, 205, 1],
            [3, 10, O, 204, 30, Q, 205, 1],
            [3, 10, O, 205, 5],
            [3, 10, O, 203, 20, Q, 204, 20, O, 205, 1],
            [3, 100, Q, 206, 1, P, 203, 5, R, 204, 5]
        ],
        [
            [4, 10, S, 207,
                30, R, 208, 30
            ],
            [4, 10, S, 207, 50, Q, 208, 10, R, 209, 1],
            [4, 10, S, 207, 10, O, 208, 50, R, 209, 1],
            [4, 10, S, 207, 10, O, 208, 10, O, 209, 3],
            [4, 100, Q, 210, 1, S, 207, 10, O, 208, 10]
        ],
        [
            [0, 1, Q, 4, 1, P, 8, 1, S, 13, 1, S, 18, 1, P, 22, 1, Q, 26, 1, Q, 30, 1, R, 34, 1],
            [2, 10, Q, 44, 1, S, 48, 1, Q, 52, 1, Q, 38, 1],
            [3, 10, Q, 60, 1, Q, 64, 1, R, 68, 1, S, 73, 1, P, 78, 1],
            [0, 8, Q, 84, 1, Q, 89, 1, S, 93, 1, Q, 97, 1],
            [4, 101, T, 56, 1, T, 101, 1, Q, 105, 1, T, 109, 1, T, 113, 1, T, 153, 1],
            [3, 1, P, 119, 1, R, 123, 1, Q, 127, 1],
            [5, 1, Q, 133, 1, Q, 137, 1, O, 141, 1, R, 145, 1, P, 149, 1, R, 157, 1, P, 161, 1, Q, 167, 1],
            [5, 8, Q, 171, 1, S, 175, 1, T, 179,
                1
            ],
            [4, 103, S, 183, 1, Q, 188, 1, Q, 193, 1],
            [1, 100, S, 211, 1, S, 212, 1, S, 213, 1, S, 214, 1]
        ],
        [
            [7, 3, P, 215, 3, R, 216, 3, Q, 217, 3],
            [7, 3, S, 215, 80, O, 217, 1],
            [7, 3, O, 216, 80, O, 217, 1],
            [7, 3, S, 215, 40, O, 216, 40, O, 217, 2],
            [7, 100, Q, 218, 1, R, 217, 1]
        ],
        [
            [7, 3, P, 219, 1, Q, 220, 1, R, 219, 1],
            [7, 3, P, 221, 1, Q, 220, 1, R, 221, 1],
            [7, 3, O, 221, 3, Q, 219, 1],
            [7, 3, Q, 219, 1, O, 220, 3, Q, 221, 1],
            [7, 100, P, 221, 1, Q, 220, 1, R, 219, 1, Q, 222, 1]
        ],
        [
            [7, 1, S, 223, 50, Q, 225, 1],
            [7, 1, S, 224, 50, Q, 225, 1],
            [7, 1, S, 223, 20, S, 224, 20, O, 225, 2],
            [7, 100, Q, 226, 1]
        ],
        [
            [7, 1, Q, 227, 30],
            [7, 1, Q, 229, 15, R, 227, 30],
            [7,
                1, O, 228, 50
            ],
            [7, 1, O, 228, 30, Q, 227, 30],
            [7, 1, O, 228, 10, Q, 229, 30, R, 227, 10],
            [7, 100, R, 230, 30]
        ],
        [
            [7, 1, Q, 232, 1, O, 231, 5],
            [7, 1, Q, 232, 1, O, 231, 50],
            [7, 1, Q, 232, 2, O, 231, 15],
            [7, 100, Q, 234, 1, O, 233, 99]
        ],
        [
            [7, 1, O, 235, 50, Q, 237, 1],
            [7, 1, O, 236, 50, Q, 237, 1],
            [7, 1, P, 237, 1, Q, 237, 1, R, 237, 1],
            [7, 1, Q, 235, 30, Q, 236, 30, R, 237, 1],
            [7, 100, P, 238, 1, Q, 238, 1, R, 238, 1]
        ],
        [
            [8, 100, S, 239, 5, O, 241, 3],
            [8, 100, O, 240, 2, O, 241, 5],
            [8, 100, S, 239, 5, Q, 240, 5],
            [8, 100, S, 239, 5, R, 240, 1, O, 241, 5],
            [8, 100, Q, 242, 1]
        ],
        [
            [7, 102, Q, 243, 0],
            [7, 102, Q, 243, 1]
        ],
        [
            [7, 6, O, 247, 30],
            [7, 6,
                P, 245, 20, Q, 247, 20
            ],
            [7, 6, O, 245, 20, S, 246, 30],
            [7, 6, O, 245, 20, S, 246, 20, R, 247, 20],
            [7, 100, Q, 248, 1]
        ],
        [
            [7, 8, T, 249, 30, R, 251, 1],
            [7, 8, T, 249, 50, R, 251, 3],
            [7, 8, O, 250, 40, R, 251, 1],
            [7, 8, T, 249, 30, Q, 250, 30, R, 251, 2],
            [7, 101, T, 252, 1, T, 251, 3]
        ],
        [
            [9, 1, Q, 253, 30, S, 255, 1],
            [9, 1, O, 254, 30, S, 255, 1],
            [9, 1, Q, 253, 20, O, 254, 20, S, 255, 1],
            [9, 1, P, 253, 10, O, 254, 10, S, 255, 3],
            [9, 100, S, 256, 1, S, 255, 1]
        ],
        [
            [9, 1, Q, 258, 1],
            [9, 1, O, 258, 10],
            [9, 100, Q, 259, 1]
        ],
        [
            [9, 1, O, 262, 30, Q, 260, 30],
            [9, 1, O, 260, 30, Q, 261, 30],
            [9, 1, O, 262, 30, Q, 261, 30],
            [9, 100, Q, 263, 1, R, 260, 2, R,
                261, 2, R, 262, 2
            ]
        ],
        [
            [9, 1, Q, 264, 1, S, 265, 80],
            [9, 1, Q, 264, 1, O, 266, 80],
            [9, 1, Q, 264, 1, S, 265, 40, O, 266, 40],
            [9, 100, Q, 267, 1, R, 264, 1]
        ],
        [
            [9, 0, O, 268, 0],
            [9, 100, O, 268, 0]
        ],
        [
            [4, 101, S, 268, 30],
            [4, 101, S, 268, 60],
            [4, 101, S, 268, 99, S, 269, 1]
        ],
        [
            [10, 1, Q, 270, 20, R, 271, 1],
            [10, 1, O, 270, 40, Q, 271, 1, R, 271, 1],
            [10, 1, O, 270, 40, Q, 271, 1, R, 272, 1],
            [10, 1, O, 270, 40, Q, 272, 1, R, 272, 1],
            [10, 1, O, 270, 10, O, 271, 3, O, 272, 3],
            [10, 1, Q, 270, 60],
            [10, 100, Q, 273, 1, O, 270, 30]
        ],
        [
            [10, 11, S, 274, 50, Q, 276, 1],
            [10, 11, S, 274, 50, Q, 275, 1],
            [10, 11, O, 274, 50, R, 276, 1, Q, 275, 1],
            [10, 11, O,
                274, 50, O, 275, 2
            ],
            [10, 11, O, 274, 50, P, 276, 1, R, 276, 1],
            [10, 100, Q, 274, 50, Q, 277, 1]
        ],
        [
            [10, 11, Q, 279, 1, P, 278, 10, R, 280, 10],
            [10, 11, O, 279, 2, O, 278, 40],
            [10, 11, O, 279, 2, O, 280, 60],
            [10, 11, O, 279, 2, O, 278, 30, O, 280, 20],
            [10, 100, P, 279, 1, R, 279, 1, Q, 281, 1]
        ],
        [
            [10, 10, Q, 282, 10, R, 282, 10],
            [10, 10, O, 283, 30, Q, 282, 10],
            [10, 10, O, 282, 30, O, 284, 5],
            [10, 10, O, 283, 30, O, 284, 5],
            [10, 10, O, 284, 10, Q, 282, 5, R, 283, 5],
            [10, 100, Q, 285, 1, P, 282, 3, Q, 284, 3, R, 283, 3]
        ],
        [
            [10, 1, P, 286, 1, Q, 286, 1, R, 286, 2],
            [10, 1, P, 287, 1, Q, 287, 1, R, 287, 2],
            [10, 1, P, 288, 1, Q, 288, 1, R, 288, 2],
            [10, 1, O, 286, 3, O, 287, 3],
            [10, 1, O, 287, 3, O, 288, 2],
            [10, 1, O, 288, 3, O, 286, 3],
            [10, 100, P, 286, 1, Q, 287, 1, R, 288, 1, O, 289, 5]
        ],
        [
            [0, 0, O, 290, 0],
            [0, 100, O, 290, 0]
        ],
        [
            [10, 1, S, 290, 60, Q, 291, 5],
            [10, 1, S, 290, 60, Q, 292, 2],
            [10, 1, S, 291, 60, Q, 292, 2],
            [10, 1, S, 292, 10, S, 290, 2, S, 291, 2],
            [10, 100, Q, 293, 1, S, 290, 1, S, 291, 1, S, 292, 1]
        ],
        [
            [11, 10, O, 294, 30, Q, 296, 1],
            [11, 10, O, 295, 30, Q, 296, 1],
            [11, 10, Q, 296, 1, R, 296, 1],
            [11, 10, Q, 294, 50, R, 295, 50],
            [11, 10, P, 294, 20, Q, 295, 20, R, 296, 1],
            [11, 100, Q, 297, 1]
        ],
        [
            [11, 1, Jf, 298, 100],
            [11, 1, Jf, 299, 100],
            [11, 1, Jf, 300, 100],
            [11,
                100, If, 298, 20, Jf, 300, 20, Kf, 299, 20, R, 301, 1
            ]
        ],
        [
            [11, 1, R, 302, 20, Jf, 302, 20],
            [11, 1, O, 303, 40],
            [11, 1, R, 304, 20, Jf, 304, 20],
            [11, 1, P, 302, 15, Q, 304, 15, R, 303, 15],
            [11, 100, Q, 305, 1]
        ],
        [
            [11, 4, T, 306, 10, Q, 307, 5],
            [11, 4, T, 306, 30, Hf, 308, 10],
            [11, 4, O, 307, 20, Hf, 308, 10],
            [11, 4, T, 306, 10, Q, 307, 5, Hf, 308, 40],
            [11, 4, T, 306, 30, Q, 307, 10, Hf, 308, 5],
            [11, 101, Q, 309, 1, Hf, 308, 10]
        ],
        [
            [11, 9, Q, 310, 10, Nf, 311, 10, T, 314, 1],
            [11, 9, O, 310, 30, Nf, 311, 10, Q, 312, 1, T, 314, 1],
            [11, 9, Q, 310, 10, Lf, 311, 30, Q, 312, 1, T, 314, 1],
            [11, 9, O, 310, 30, Lf, 311, 30, O, 312, 2, T, 314, 1],
            [11,
                103, O, 312, 2, Q, 313, 1
            ]
        ],
        [
            [11, 9, Q, 315, 10, Nf, 316, 10, T, 319, 1],
            [11, 9, O, 315, 30, Nf, 316, 10, Q, 317, 1, T, 319, 1],
            [11, 9, Q, 315, 20, Lf, 316, 20, Q, 317, 1, T, 319, 1],
            [11, 9, O, 315, 40, Lf, 316, 15, O, 317, 2, T, 319, 1],
            [11, 103, Q, 318, 1]
        ],
        [
            [10, 1, Q, 320, 50, R, 320, 50],
            [10, 1, R, 321, 5, O, 320, 20],
            [10, 1, S, 322, 3, O, 320, 20],
            [10, 1, S, 322, 2, S, 321, 3, O, 320, 20],
            [10, 100, S, 323, 1, S, 322, 1, Q, 321, 1, Q, 320, 1]
        ],
        [
            [10, 11, O, 324, 10],
            [10, 11, O, 324, 50, S, 325, 1],
            [10, 11, O, 324, 50, S, 326, 1],
            [10, 11, O, 324, 50, S, 325, 1, S, 326, 1],
            [10, 100, O, 324, 50, R, 327, 1]
        ],
        [
            [1, 1, Q, 328, 10, R, 329, 1],
            [1, 1, P, 328, 1, Q, 328, 15, R, 329, 1],
            [1, 1, O, 328, 15, P, 330, 1, Q, 330, 1, R, 330, 1],
            [1, 1, O, 328, 15, P, 329, 1, Q, 329, 1, R, 329, 1],
            [1, 1, O, 330, 5, P, 329, 2, Q, 328, 10, R, 329, 2],
            [1, 100, Q, 331, 1, O, 329, 3]
        ],
        []
    ],
    ke = new eh;

function eh() {
    var a;
    this.F = new Int32Array(1E3);
    this.a = Array(1E3);
    this.k = Array(1E3);
    this.d = new Int32Array(1E3);
    this.Ya = new Int32Array(1E3);
    this.N = new Int32Array(1E3);
    this.G = new Int32Array(1E3);
    this.Wa = new Int32Array(1E3);
    this.Ua = new Int32Array(1E3);
    this.Va = new Int32Array(1E3);
    this.ja = new Int32Array(1E3);
    this.ka = new Int32Array(1E3);
    this.ha = new Int32Array(1E3);
    this.oa = new Int32Array(1E3);
    this.count = new Int32Array(1E3);
    this.ia = new Int32Array(1E3);
    this.e = new Int32Array(1E3);
    this.i = new Int32Array(1E3);
    this.ya = new Int32Array(1E3);
    this.Y = new Int32Array(1E3);
    this.ra = new Int32Array(1E3);
    this.la = new Int32Array(1E3);
    this.ga = new Int32Array(1E3);
    this.ea = new Int32Array(1E3);
    this.fa = new Int32Array(1E3);
    this.U = new Int32Array(1E3);
    this.V = new Int32Array(1E3);
    this.sub = new Int32Array(1E3);
    this.Ha = new Int32Array(1E3);
    this.Sa = new Int32Array(1E3);
    this.Ea = new Int32Array(1E3);
    this.za = new Int32Array(1E3);
    this.Pa = new Int32Array(1E3);
    this.Qa = new Int32Array(1E3);
    this.La = new Int32Array(1E3);
    this.Ma = new Int32Array(1E3);
    this.Ga = new Int32Array(1E3);
    this.Na = new Int32Array(1E3);
    this.Fa = new Int32Array(1E3);
    this.Ia = new Int32Array(1E3);
    this.Ja = new Int32Array(1E3);
    this.Ta = new Int32Array(1E3);
    this.Oa = new Int32Array(1E3);
    this.Ka = new Int32Array(1E3);
    this.Ra = new Int32Array(1E3);
    this.Aa = new Int32Array(1E3);
    this.Ba = new Int32Array(1E3);
    this.A = new Int32Array(1E3);
    this.Ca = new Int32Array(1E3);
    this.Da = new Int32Array(1E3);
    for (a = this.index = 0; 1E3 > a; a++) this.a[a] = new Mg;
    for (a = 0; 1E3 > a; a++) this.k[a] = new Mg
}
ba = eh.prototype;
ba.j = function() {
    this.index = 0
};
ba.add = function(a, b, c, d, e, g, k, r, m, n, G, H, N, E, ja, La, Ea, Da, Y, W, aa, sb, tb, Za, ua, ya, xb, ga, ia, Ca, $a, bb, va, ib, Db, Eb, Xa, Ua, Rb, Sb, Tb, Ub, Vb, Wb, ub, Xb, Yb, Zb, $b, ac, bc) {
    1E3 != this.index && (this.F[this.index] = a, Ng(this.a[this.index], b, c), Ng(this.k[this.index], d, e), this.d[this.index] = 0, this.Ya[this.index] = g, this.N[this.index] = k, this.G[this.index] = r, this.Wa[this.index] = m, this.Ua[this.index] = n, this.Va[this.index] = G, this.ja[this.index] = H, this.ka[this.index] = N, this.ha[this.index] = A(B(E)), this.oa[this.index] = ja, this.count[this.index] =
        La, this.ia[this.index] = Ea, this.e[this.index] = Da, this.i[this.index] = Y, this.ya[this.index] = W, this.Y[this.index] = aa, this.ra[this.index] = sb, this.la[this.index] = tb, this.ga[this.index] = Za, this.ea[this.index] = ua, this.fa[this.index] = ya, this.U[this.index] = xb, this.V[this.index] = ga, this.sub[this.index] = ia, this.Ha[this.index] = Ca, this.Sa[this.index] = $a, this.Ea[this.index] = bb, this.za[this.index] = va, this.Pa[this.index] = ib, this.Qa[this.index] = Db, this.La[this.index] = Eb, this.Ma[this.index] = Xa, this.Ga[this.index] = Ua,
        this.Na[this.index] = Rb, this.Fa[this.index] = Sb, this.Ia[this.index] = Tb, this.Ja[this.index] = Ub, this.Ta[this.index] = Vb, this.Oa[this.index] = Wb, this.Ka[this.index] = ub, this.Ra[this.index] = Xb, this.Aa[this.index] = Yb, this.Ba[this.index] = Zb, this.A[this.index] = $b, this.Ca[this.index] = ac, this.Da[this.index] = bc, this.index++)
};
ba.p = function(a) {
    this.F[a] = this.F[this.index - 1];
    this.a[a].set(this.a[this.index - 1]);
    this.k[a].set(this.k[this.index - 1]);
    this.d[a] = this.d[this.index - 1];
    this.Ya[a] = this.Ya[this.index - 1];
    this.N[a] = this.N[this.index - 1];
    this.G[a] = this.G[this.index - 1];
    this.Wa[a] = this.Wa[this.index - 1];
    this.Ua[a] = this.Ua[this.index - 1];
    this.Va[a] = this.Va[this.index - 1];
    this.ja[a] = this.ja[this.index - 1];
    this.ka[a] = this.ka[this.index - 1];
    this.ha[a] = this.ha[this.index - 1];
    this.oa[a] = this.oa[this.index - 1];
    this.count[a] = this.count[this.index -
        1];
    this.ia[a] = this.ia[this.index - 1];
    this.e[a] = this.e[this.index - 1];
    this.i[a] = this.i[this.index - 1];
    this.ya[a] = this.ya[this.index - 1];
    this.Y[a] = this.Y[this.index - 1];
    this.ra[a] = this.ra[this.index - 1];
    this.la[a] = this.la[this.index - 1];
    this.ga[a] = this.ga[this.index - 1];
    this.ea[a] = this.ea[this.index - 1];
    this.fa[a] = this.fa[this.index - 1];
    this.U[a] = this.U[this.index - 1];
    this.V[a] = this.V[this.index - 1];
    this.sub[a] = this.sub[this.index - 1];
    this.Ha[a] = this.Ha[this.index - 1];
    this.Sa[a] = this.Sa[this.index - 1];
    this.Ea[a] =
        this.Ea[this.index - 1];
    this.za[a] = this.za[this.index - 1];
    this.Pa[a] = this.Pa[this.index - 1];
    this.Qa[a] = this.Qa[this.index - 1];
    this.La[a] = this.La[this.index - 1];
    this.Ma[a] = this.Ma[this.index - 1];
    this.Ga[a] = this.Ga[this.index - 1];
    this.Na[a] = this.Na[this.index - 1];
    this.Fa[a] = this.Fa[this.index - 1];
    this.Ia[a] = this.Ia[this.index - 1];
    this.Ja[a] = this.Ja[this.index - 1];
    this.Ta[a] = this.Ta[this.index - 1];
    this.Oa[a] = this.Oa[this.index - 1];
    this.Ka[a] = this.Ka[this.index - 1];
    this.Ra[a] = this.Ra[this.index - 1];
    this.Aa[a] = this.Aa[this.index -
        1];
    this.Ba[a] = this.Ba[this.index - 1];
    this.A[a] = this.A[this.index - 1];
    this.Ca[a] = this.Ca[this.index - 1];
    this.Da[a] = this.Da[this.index - 1];
    this.index--
};
ba.h = function(a, b) {
    var c = 0;
    b.set(this.k[a]);
    var d = A(Og(b) / 4) + 1;
    Pg(b, 1 / d);
    for (var e, g, k, r = 0; r < d; r++)
        if (e = this.a[a].y + b.y, g = A(V(this.a[a].x, 0, 511) / 8), k = A(V(e, 0, 255) / 8), g = J.e[k][g], 0 <= g && 8 >= g && 0 == this.ya[a] ? 0 == this.Y[a] ? c = 1 : 2 == this.Y[a] && (b.y *= -1, this.k[a].y *= -1) : this.a[a].y = e, e = this.a[a].x + b.x, g = A(V(e, 0, 511) / 8), k = A(V(this.a[a].y, 0, 255) / 8), g = J.e[k][g], 0 <= g && 8 >= g && 0 == this.ya[a]) {
            if (0 == this.Y[a] || 1 == this.Y[a]) c = 1;
            2 == this.Y[a] && (b.x *= -1, this.k[a].x *= -1)
        } else this.a[a].x = e;
    return c
};
ba.move = function() {
    var a, b, c = new Mg,
        d, e;
    for (a = 0; a < this.index; a++)
        if (-64 > this.a[a].x || 576 < this.a[a].x) this.p(a--);
        else if (0 < this.ha[a]) this.ha[a]--;
    else if (1 == this.d[a]) this.count[a]++, this.count[a] >= this.ia[a] && this.p(a--);
    else {
        0 < this.ra[a] && (d = this.ra[a], d = 1 != f ? 0 == this.F[a] ? I.m(this.a[a].x - d, this.a[a].y - d, this.a[a].x + d, this.a[a].y + d) : w.m(this.a[a].x - d, this.a[a].y - d, this.a[a].x + d, this.a[a].y + d, 0) : w.m(this.a[a].x - d, this.a[a].y - d, this.a[a].x + d, this.a[a].y + d, 1 - this.F[a] << 2), -1 != d && (1 != f ? 0 == this.F[a] ?
            c.p(I.a[d][0], this.a[a]) : c.p(w.a[d][0], this.a[a]) : c.p(w.a[d][0], this.a[a]), Tg(c), d = Og(this.k[a]), this.k[a].x = 0.85 * this.k[a].x + 0.15 * c.x + M(-0.1, 0.1), this.k[a].y = 0.85 * this.k[a].y + 0.15 * c.y + M(-0.1, 0.1), Tg(this.k[a]), Pg(this.k[a], dg(d, 1))));
        this.k[a].y += 0.01 * this.e[a];
        Pg(this.k[a], 0.01 * this.i[a]);
        d = this.h(a, c);
        b = 1;
        1 == this.U[a] && 0 != this.V[a] && B(1E3) > this.V[a] && (b = 0);
        0 < this.oa[a] && (this.oa[a]--, b = 0);
        e = -1;
        1 == b && (e = 1 != f ? 0 == this.F[a] ? I.K(this.ga[a], this.U[a], this.V[a], this.ea[a], this.fa[a], this.a[a].x, this.a[a].y,
            this.ja[a], this.ka[a]) : w.K(this.ga[a], this.U[a], this.V[a], this.ea[a], this.fa[a], this.a[a].x, this.a[a].y, this.ja[a], this.ka[a], 0) : w.K(this.ga[a], this.U[a], this.V[a], this.ea[a], this.fa[a], this.a[a].x, this.a[a].y, this.ja[a], this.ka[a], 1 - this.F[a] << 2)); - 1 != e && 0 != this.la[a] && (1 != f ? 0 == this.F[a] ? c.p(I.a[e][0], this.a[a]) : c.p(w.a[e][0], this.a[a]) : c.p(w.a[e][0], this.a[a]), Tg(c), Pg(c, 0.1 * this.la[a]), 1 != f && 0 == this.F[a] ? Pg(c, Xg[C[I.id[e]][Yg]] / C[I.id[e]][Zg]) : Pg(c, 0.1), 1 != f ? 0 == this.F[a] ? I.c[e][0].sub(c) : w.c[e][0].sub(c) :
            w.c[e][0].sub(c), this.la[a] = 0);
        1 == this.U[a] && 0 != this.V[a] && (e = -1);
        if (1 == d || -1 != e)
            if (this.d[a] = 1, this.count[a] = 0, 1 == this.sub[a] || 3 == this.sub[a] || 4 == this.sub[a] || 5 == this.sub[a] || 6 == this.sub[a] || 7 == this.sub[a] || 8 == this.sub[a] || 9 == this.sub[a]) {
                var g = A(B(512));
                for (b = 0; b < this.A[a]; b++) {
                    if (1 == this.sub[a]) Ng(c, 0, 0);
                    else if (3 == this.sub[a]) {
                        var g = A(B(512)),
                            k = M(0.05, 0.1);
                        c.x = this.A[a] * Te[g][0] * k;
                        c.y = this.A[a] * Te[g][1] * k
                    } else 4 == this.sub[a] ? (c.x = M(0.1 * -this.A[a], 0.1 * this.A[a]), c.y = M(0.2 * -this.A[a], 0.1 * -this.A[a])) :
                        5 == this.sub[a] ? (c.x = this.k[a].x, c.y = this.k[a].y) : 6 == this.sub[a] ? (c.x = M(0.01 * -this.A[a], 0.01 * this.A[a]), c.y = M(0.2 * -this.A[a], 0.05 * -this.A[a])) : 7 == this.sub[a] ? (k = A(g + 512 * b / this.A[a]) & 511, c.x = this.A[a] * Te[k][0], c.y = this.A[a] * Te[k][1]) : 8 == this.sub[a] ? (g = A(B(512)), k = M(0, 0.1), c.x = this.A[a] * Te[g][0] * k, c.y = this.A[a] * Te[g][1] * k) : 9 == this.sub[a] && (c.x = this.k[a].x, c.y = this.k[a].y, Tg(c));
                    ke.add(this.F[a], this.a[a].x, this.a[a].y, c.x, c.y, this.Ha[a], this.Sa[a], this.Ea[a], this.za[a], this.Pa[a], this.Qa[a], this.La[a],
                        this.Ma[a], this.Ga[a], this.Na[a], this.Fa[a], this.Ia[a], this.Ja[a], this.Ta[a], this.Oa[a], this.Ka[a], 0, 0, this.Ra[a], this.Aa[a], this.Ba[a], this.Ca[a], this.Da[a], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
                }
            }
        0 < this.count[a] && this.count[a]--;
        0 == this.count[a] && (this.d[a] = 1);
        2 == this.sub[a] && (B(100) < this.A[a] || 1 == d || -1 != e) && (c.x = M(-1, 1), c.y = M(-1, 1), ke.add(this.F[a], this.a[a].x, this.a[a].y, c.x, c.y, this.Ha[a], this.Sa[a], this.Ea[a], this.za[a], this.Pa[a], this.Qa[a], this.La[a], this.Ma[a], this.Ga[a], this.Na[a],
            this.Fa[a], this.Ia[a], this.Ja[a], this.Ta[a], this.Oa[a], this.Ka[a], 0, 0, this.Ra[a], this.Aa[a], this.Ba[a], this.Ca[a], this.Da[a], 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))
    }
};
ba.b = function() {
    var a, b, c, d = new Mg,
        e = new Mg,
        g = new Mg,
        k = new Mg;
    for (a = 0; a < this.index; a++)
        if (!(0 < this.ha[a])) {
            b = 16 * this.N[a];
            c = 1 == this.d[a] ? A((this.G[a] >> 24 & 255) * (this.ia[a] - this.count[a]) / this.ia[a]) << 24 | this.G[a] & 16777215 : this.G[a];
            0 < this.oa[a] && (c = A((c >> 24 & 255) / 2) << 24 | c & 16777215);
            Tf = this.Wa[a];
            Zf = 1;
            if (0 == this.Ya[a]) K(Wa, A(this.a[a].x), A(this.a[a].y), this.Ua[a], this.Va[a], b, 0, 16, 16, c);
            else {
                e.set(this.k[a]);
                d.set(e);
                $g(d);
                Tg(d);
                Tg(e);
                Pg(d, this.Ua[a] >> 1);
                Pg(e, this.Va[a] >> 1);
                g.p(e, d);
                ah(k, e, d);
                var r =
                    this.a[a].x + g.x,
                    m = this.a[a].y + g.y,
                    n = b,
                    G = this.a[a].x + k.x,
                    H = this.a[a].y + k.y,
                    N = b + 16,
                    E = this.a[a].x - g.x,
                    ja = this.a[a].y - g.y,
                    La = b + 16,
                    Ea = this.a[a].x - k.x,
                    Da = this.a[a].y - k.y,
                    Y = 0,
                    W = 0,
                    aa = 16,
                    sb = 16,
                    tb = Wa,
                    r = r << 16,
                    m = m << 16,
                    G = G << 16,
                    H = H << 16,
                    E = E << 16,
                    ja = ja << 16,
                    Ea = Ea << 16,
                    Da = Da << 16,
                    n = 65535 * n,
                    Y = 65535 * Y,
                    N = 65535 * N,
                    W = 65535 * W,
                    La = 65535 * La,
                    aa = 65535 * aa;
                b *= 65535;
                var sb = 65535 * sb,
                    Za = void 0,
                    ua = void 0,
                    ya = void 0,
                    xb = Za = void 0,
                    ga = void 0,
                    ia = void 0,
                    Ca = void 0,
                    $a = void 0,
                    bb = void 0,
                    va = void 0,
                    ib = void 0,
                    Db = void 0,
                    Eb = void 0,
                    Xa = void 0,
                    Xa = void 0,
                    ya = ha << 16,
                    Ua = 0;
                ya > m && (ya = m);
                ya > H && (ya = H);
                ya > ja && (ya = ja);
                ya > Da && (ya = Da);
                Ua < m && (Ua = m);
                Ua < H && (Ua = H);
                Ua < ja && (Ua = ja);
                Ua < Da && (Ua = Da);
                ya >>= 16;
                Ua >>= 16;
                0 > ya && (ya = 0);
                Ua >= ha && (Ua = ha - 1);
                for (ua = ya; ua <= Ua; ua++) fh[ua] = fa, gh[ua] = -1;
                hh(r, m, n, Y, G, H, N, W);
                hh(G, H, N, W, E, ja, La, aa);
                hh(E, ja, La, aa, Ea, Da, b, sb);
                hh(Ea, Da, b, sb, r, m, n, Y);
                ib = c >> 24 & 255;
                $a = c >> 16 & 255;
                bb = c >> 8 & 255;
                va = c & 255;
                for (ua = ya; ua <= Ua; ua++)
                    for (ya = ua * fa + fh[ua], Za = gh[ua] - fh[ua] + 1, ia = (ih[ua] - jh[ua]) / Za, Ca = (kh[ua] - lh[ua]) / Za, xb = jh[ua], ga = lh[ua], Za = fh[ua]; Za <= gh[ua]; Za++,
                        ya++, xb += ia, ga += Ca) 0 > Za || fa <= Za || (Xa = tb.f[(ga >> 16) * tb.i + (xb >> 16)], 0 == Zf ? -1 != Xa && (Db = $a * ((Xa & 16711680) >> 16) >> 8, Eb = bb * ((Xa & 65280) >> 8) >> 8, Xa = va * (Xa & 255) >> 8, D[ya] = 0 == Tf ? Db << 16 | Eb << 8 | Xa : mh(D[ya], Db << 16 | Eb << 8 | Xa, ib)) : (Xa = ib * (Xa & 255) >> 8, 0 != Xa && (D[ya] = mh(D[ya], c, Xa))))
            }
            Zf = Tf = 0
        }
};
var je = new nh;

function nh() {
    var a;
    this.a = Array(1E3);
    this.k = Array(1E3);
    this.value = new Int32Array(1E3);
    this.G = new Int32Array(1E3);
    this.count = new Int32Array(1E3);
    for (a = this.index = 0; 1E3 > a; a++) this.a[a] = new Mg;
    for (a = 0; 1E3 > a; a++) this.k[a] = new Mg
}
ba = nh.prototype;
ba.j = function() {
    this.index = 0
};
ba.add = function(a, b, c, d, e) {
    1E3 != this.index && (a = V(a, 16, 495), b = V(b, 8, 247), Ng(this.a[this.index], a, b), Ng(this.k[this.index], c, -2), 0 != c && (this.k[this.index].x += M(-0.2, 0.2), this.k[this.index].y += M(-0.2, 0.2)), this.value[this.index] = d, this.G[this.index] = e, this.count[this.index] = 0, this.index++)
};
ba.sub = function(a) {
    this.a[a].set(this.a[this.index - 1]);
    this.k[a].set(this.k[this.index - 1]);
    this.value[a] = this.value[this.index - 1];
    this.G[a] = this.G[this.index - 1];
    this.count[a] = this.count[this.index - 1];
    this.index--
};
ba.move = function() {
    var a;
    for (a = 0; a < this.index; a++) {
        if (0 == this.k[a].x) {
            var b = this.a[a],
                c = this.k[a];
            c.y += 0;
            Pg(c, 0.96)
        } else b = this.a[a], c = this.k[a], c.y += 0.05, Pg(c, 0.99);
        b.add(c);
        this.a[a].x = V(this.a[a].x, 16, 495);
        this.a[a].y = V(this.a[a].y, 8, 247);
        this.count[a]++;
        100 <= this.count[a] && this.sub(a--)
    }
};
ba.b = function() {
    var a, b, c, d, e;
    for (a = 0; a < this.index; a++) b = this.G[a] >> 16 & 255, c = this.G[a] >> 8 & 255, d = this.G[a] & 255, e = A(255 * (50 > 100 - this.count[a] ? 100 - this.count[a] : 50) / 50), Cf(df, A(this.a[a].x), A(this.a[a].y), "" + this.value[a], b, c, d, e, 0, 0, 0, e, 5, 7)
};
var le = new oh;

function oh() {
    var a;
    this.a = Array(100);
    this.k = Array(100);
    this.item = new Int32Array(100);
    this.value = new Int32Array(100);
    this.da = new Int32Array(100);
    this.count = new Int32Array(100);
    for (a = this.J = this.index = 0; 100 > a; a++) this.a[a] = new Mg;
    for (a = 0; 100 > a; a++) this.k[a] = new Mg
}
ba = oh.prototype;
ba.j = function() {
    this.J = this.index = 0
};
ba.add = function(a, b, c, d, e) {
    if (100 != this.index)
        for (a = V(a, 16, 495), b = V(b, 8, 247), Ng(this.a[this.index], a, b), this.k[this.index].x = Yf < a ? M(-0.5, -1) : M(0.5, 1), this.k[this.index].y = M(-1, -2), this.item[this.index] = c, this.value[this.index] = d, this.da[this.index] = e, this.count[this.index] = 0, this.index++, c = this.J = 0; c < this.index; c++) this.J += 7 * this.item[c] + 3 * this.value[c] + 11 * this.da[c]
};
ba.sub = function(a) {
    this.a[a].set(this.a[this.index - 1]);
    this.k[a].set(this.k[this.index - 1]);
    this.item[a] = this.item[this.index - 1];
    this.value[a] = this.value[this.index - 1];
    this.da[a] = this.da[this.index - 1];
    this.count[a] = this.count[this.index - 1];
    this.index--;
    for (a = this.J = 0; a < this.index; a++) this.J += 7 * this.item[a] + 3 * this.value[a] + 11 * this.da[a]
};
ba.move = function() {
    var a, b;
    for (a = b = 0; a < this.index; a++) b += 7 * this.item[a] + 3 * this.value[a] + 11 * this.da[a];
    this.J != b && (D = null);
    for (a = 0; a < this.index; a++) {
        this.k[a].y += 0.04;
        Pg(this.k[a], 0.98);
        var c, d;
        b = V(this.a[a].y + this.k[a].y, 8, 247);
        c = A(this.a[a].x / 8);
        d = A(b / 8);
        c = J.e[d][c];
        0 <= c && 8 >= c || (this.a[a].y = b);
        b = V(this.a[a].x + this.k[a].x, 16, 495);
        c = A(b / 8);
        d = A(this.a[a].y / 8);
        c = J.e[d][c];
        0 <= c && 8 >= c || (this.a[a].x = b);
        if (100 > this.count[a]) this.count[a]++;
        else if (b = w.m(this.a[a].x - 12, this.a[a].y - 6 - 12, this.a[a].x + 12, this.a[a].y -
                6 + 12, 0), -1 != b) {
            Je();
            if (1 == this.item[a]) Qb = V(Qb + this.value[a], 0, 9999999), je.add(this.a[a].x, this.a[a].y, 0, this.value[a], 16776960);
            else if (2 == this.item[a]) {
                for (c = 0; 4 > c; c++) 0 != w.search[c] && A(100 * q[b] / ic[b]) > A(100 * q[c] / ic[c]) && (b = c);
                if (q[b] == ic[b]) continue;
                Je();
                q[b] = V(q[b] + A(ic[b] / 5), 0, ic[b]);
                pe();
                je.add(this.a[a].x, this.a[a].y, 0, A(ic[b] / 5), 65280)
            } else {
                for (b = Dc; b < Ec; b++)
                    if (0 == s[b]) {
                        s[b] = this.item[a];
                        Bc[b] = this.value[a];
                        Cc[b] = this.da[a];
                        break
                    }
                if (b == Ec) {
                    this.k[a].x = M(-1, 1);
                    this.k[a].y = M(-1, -2);
                    this.count[a] =
                        0;
                    continue
                }
            }
            pe();
            this.sub(a--)
        }
    }
};
ba.b = function() {
    var a;
    Zf = 2;
    for (a = 0; a < this.index; a++) 100 != this.count[a] && 0 == (this.count[a] & 6) || $f(Qa, A(this.a[a].x) - 6, A(this.a[a].y) - 12, 12, 12, 12 * x(this.item[a], Nc), 0, 12, 12, x(this.item[a], Qc));
    Zf = 0
};
var J = new ph;

function ph() { /* Stage Gif Size */
    this.i = 64;
    this.s = 58;
    this.e = Array(this.s);
    this.o = new Int32Array(this.i);
    this.I = new Int32Array(this.i);
    this.$ = new Int32Array(this.i);
    this.hb = new Int32Array(this.i);
    this.gb = new Int32Array(48 * this.s);
    this.w = this.ab = 0;
    this.cb = -1;
    for (var a = 0; a < this.s; a++) this.e[a] = new Int32Array(this.i)
}
ph.prototype.j = function(a) {
    var b, c;
    this.w = a;
    this.cb != Ie[this.w][nb][1] && (this.cb = Ie[this.w][nb][1], Na = new wa, Na.j("st" + this.cb + ".gif"));
    hf(Na);
    if (0 != jf) return !1;
    this.s = Na.s;
    for (c = 0; c < this.s; c++)
        for (b = 0; b < this.i; b++) this.e[c][b] = -1;
    var d = A(B(Na.i - 64));
    for (c = 0; c < this.s; c++)
        for (b = 0; b < this.i; b++) {
            a = c * Na.i + V(b, 3, 60) + d;
            var e = Na.f[3 >= b || this.i - 3 <= b ? a : a - 1],
                g = Na.f[2 >= b || this.i - 4 <= b ? a : a + 1],
                k = Na.f[0 == c ? a : a - Na.i],
                r = Na.f[c == this.s - 1 ? a : a + Na.i];
            0 == Na.f[a] ? 0 != e && 0 == g && 0 != k && 0 == r ? this.e[c][b] = 0 : 0 == e && 0 == g && 0 != k &&
                0 == r ? this.e[c][b] = 1 : 0 == e && 0 != g && 0 != k && 0 == r ? this.e[c][b] = 2 : 0 != e && 0 == g && 0 == k && 0 == r ? this.e[c][b] = 3 : 0 == e && 0 == g && 0 == k && 0 == r ? this.e[c][b] = 4 : 0 == e && 0 != g && 0 == k && 0 == r ? this.e[c][b] = 5 : 0 != e && 0 == g && 0 == k && 0 != r ? this.e[c][b] = 6 : 0 == e && 0 == g && 0 == k && 0 != r ? this.e[c][b] = 7 : 0 == e && 0 != g && 0 == k && 0 != r && (this.e[c][b] = 8) : 255 == Na.f[a] && (this.e[c][b] = 9)
        }
    for (b = 0; b < this.i; b++)
        for (c = this.s - 1; 0 <= c; c--)
            if (0 > this.e[c][b] || 8 < this.e[c][b]) {
                this.o[b] = c;
                break
            }
    for (b = 0; b < this.i; b++)
        for (c = 1; c < this.s; c++)
            if ((0 > this.e[c - 1][b] || 8 < this.e[c - 1][b]) &&
                0 <= this.e[c][b] && 8 >= this.e[c][b]) {
                this.I[b] = c - 1;
                break
            }
    for (b = 0; b < this.i; b++)
        for (c = 0; c < this.s; c++)
            if (0 > this.e[c][b] || 8 < this.e[c][b]) {
                this.$[b] = c;
                break
            }
    for (b = 0; b < this.i; b++)
        for (this.hb[b] = this.$[b], c = 1; c < this.s; c++)
            if ((0 > this.e[c - 1][b] || 8 < this.e[c - 1][b]) && 0 <= this.e[c][b] && 9 >= this.e[c][b]) {
                this.hb[b] = c - 1;
                break
            }
    this.ab = 0;
    for (b = 12; 60 > b; b++)
        for (c = 1; c < this.s - 1; c++) 9 == this.e[c - 1][b] && 9 == this.e[c][b] && (this.gb[this.ab++] = c * this.i + b);
    if (0 == nb) {
        for (a = 0; a < fa * ha; a++) Ma.f[a] = 0;
        b = D;
        switch (this.w) {
            case 15:
            case 16:
            case 30:
            case 31:
            case 32:
            case 33:
            case 66:
            case 67:
            case 68:
            case 69:
                Tf =
                    1;
                Zf = 3;
                D = Ma.f;
                for (a = 0; a < fa * ha; a++) D[a] = 0;
                for (a = 0; 100 > a; a++) c = M(1.7, 3.69), c *= c * c * c, K(Wa, A(M(0, 512)), A(256 - c), 256, 32, 96, 0, 16, 16, 419430399);
                D = b;
                Tf = Zf = 0
        }
    }
    return !0
};
ph.prototype.b = function() {
    var a, b, c = new Int32Array([0, 8, 16, 0, 8, 16, 0, 8, 16]),
        d = new Int32Array([0, 0, 0, 8, 8, 8, 16, 16, 16]),
        e = Oa[Ie[this.w][nb][0]];
    for (b = 0; b < this.s; b++)
        for (a = 0; a < this.i; a++) {
            var g = this.e[b][a]; - 1 != g && (9 == g ? 82 == this.w ? -1 == this.e[b - 1][a] ? gg(fb, 8 * a, 8 * b, 8, 8, 0, 0, 8, 8) : Kg(8 * a - 4, 8 * b, 16, 8, 5570560) : -1 == this.e[b - 1][a] ? gg(eb, 8 * a, 8 * b, 8, 8, 0, 0, 8, 8) : Kg(8 * a - 4, 8 * b, 16, 8, 21916) : gg(e, 8 * a, 8 * b, 8, 8, c[g], d[g], 8, 8))
        }
};
var me = new qh;

/* Map Size */
function qh() {
    this.i = 78;
    this.s = 16;
    this.t = 0;
    this.e = Array(this.s);

    this.W = Array(this.s);
    for (var a = 0; a < this.s; a++) this.e[a] = new Int32Array(this.i), this.W[a] = new Int32Array(this.i)
}
qh.prototype.j = function() {
    var a, b, c;
    for (c = 0; c < this.s; c++)
        for (b = 0; b < this.i; b++) this.e[c][b] = -1;
    for (c = 0; c < this.s; c++)
        for (b = 0; b < this.i; b++) {
            a = c * hb.i + b;
            var d = 0 == b ? 0 : -1,
                e = b == this.i - 1 ? 0 : 1,
                g = 0 == c ? 0 : -this.i,
                k = c == this.s - 1 ? 0 : this.i,
                r = hb.f[a + d + g],
                m = hb.f[a + g],
                g = hb.f[a + e + g],
                n = hb.f[a + d],
                G = hb.f[a + e],
                d = hb.f[a + d + k],
                H = hb.f[a + k],
                e = hb.f[a + e + k];
            65535 == kb.f[a] ? this.e[c][b] = 15 : 6684672 == kb.f[a] ? this.e[c][b] = 17 : 0 != hb.f[a] && (13209 == hb.f[a] ? this.e[c][b] = 13 : 16764006 == kb.f[a] ? this.e[c][b] = 14 : 6710886 == kb.f[a] ? this.e[c][b] = 16 :
                (a = hb.f[a], m >= a && n >= a && G >= a && H >= a && e < a ? this.e[c][b] = 3 : m >= a && n >= a && G >= a && H >= a && d < a ? this.e[c][b] = 4 : m >= a && n >= a && G >= a && H >= a && g < a ? this.e[c][b] = 8 : m >= a && n >= a && G >= a && H >= a && r < a ? this.e[c][b] = 9 : n < a && G >= a && m < a && H >= a ? this.e[c][b] = 0 : n >= a && G >= a && m < a && H >= a ? this.e[c][b] = 1 : n >= a && G < a && m < a && H >= a ? this.e[c][b] = 2 : n < a && G >= a && m >= a && H >= a ? this.e[c][b] = 5 : n >= a && G < a && m >= a && H >= a ? this.e[c][b] = 7 : n < a && G >= a && m >= a && H < a ? this.e[c][b] = 10 : n >= a && G >= a && m >= a && H < a ? this.e[c][b] = 11 : n >= a && G < a && m >= a && H < a && (this.e[c][b] = 12)))
        }
    for (c = 0; c < this.s; c++)
        for (b =
            0; b < this.i; b++) a = c * kb.i + b, this.W[c][b] = -1, 26112 == kb.f[a] ? this.W[c][b] = 0 : 10066329 == kb.f[a] ? this.W[c][b] = 1 : 8404992 == kb.f[a] ? this.W[c][b] = 2 : 13434879 == kb.f[a] ? this.W[c][b] = 5 : 12288 == kb.f[a] && (this.W[c][b] = 6)
};

/* Map Size */

qh.prototype.b = function() {
    var a, b, c, d, e = new Mg,
        g = new Mg;
    20 > Yf && 256 > ag ? this.t = V(this.t + 4, -720, 0) : 492 < Yf && 256 > ag && (this.t = V(this.t - 4, -720, 0));
    for (d = 0; d < this.s; d++)
        for (b = 0; b < this.i; b++) - 1 != this.e[d][b] && gg(jb, this.t + 16 * b, 16 * d, 16, 16, this.e[d][b] % 5 * 16, 16 * A(this.e[d][b] / 5), 16, 16);
    for (a = 0; a < ve; a++)
        if (0 != (we[a] & xe))
            for (b = 3; 4 >= b; b++)
                if (!(0 >= ze[a][b]) && 32 != a && 70 != a)
                    for (e.x = 8 * ze[a][0], e.y = 8 * ze[a][1], g.x = 8 * (ze[ze[a][b]][0] - ze[a][0]), g.y = 8 * (ze[ze[a][b]][1] - ze[a][1]), d = Tg(g) / 8 - 1, Pg(g, 8), e.add(g), c = 0; c < d; c++) Df(this.t +
                        e.x, e.y, 2, 2, 13421772), e.add(g);
    for (d = 0; d < this.s; d++)
        for (b = 0; b < this.i; b++) - 1 != this.W[d][b] && gg(lb, this.t + 16 * b + 8, 16 * d + 8, 16, 16, 16 * this.W[d][b], 0, 16, 16);
    $f(lb, this.t + 384 - 8, 124, 16, 16, 16, 0, 16, 16, 8421631);
    $f(lb, this.t + 504 - 8, 116, 16, 16, 48, 0, 16, 16, 16777215);
    $f(lb, this.t + 552 - 8, 116, 16, 16, 64, 0, 16, 16, 16777215);
    $f(lb, this.t + 592 - 8, 100, 16, 16, 32, 0, 16, 16, 16777215);
    $f(lb, this.t + 672 - 8, 68, 16, 16, 32, 0, 16, 16, 16777215);
    $f(lb, this.t + 808 - 8, 132, 16, 16, 16, 0, 16, 16, 13434879);
    $f(lb, this.t + 904 - 8, 164, 16, 16, 112, 0, 16, 16, 13434879);
    $f(lb,
        this.t + 1040 - 8, 172, 16, 16, 128, 0, 16, 16, 13434879);
    $f(lb, this.t + 1088 - 8, 100, 16, 16, 32, 0, 16, 16, 16777215);
    $f(lb, this.t + 1160 - 8, 84, 16, 16, 32, 0, 16, 16, 16777215);
    $f(lb, this.t + 1112 - 8, 44, 32, 16, 144, 0, 32, 16, 16777215);
    for (a = 0; a < ve; a++) 0 != we[a] && (b = 8 * ze[a][0], d = 8 * ze[a][1], c = 0 == a || 20 == a || 47 == a || 77 == a ? 16777215 : 33 == a ? 0 : 71 == a ? 0 : 0 != (we[a] & xe) ? 10027008 : 13421568, 0 == ze[a][2] && Df(this.t + b, d, 6, 6, c), c = 71 == a ? 3 : 24, zf(this.t + b, d, c, c) && Ef(this.t + b, d, c, c, 13369344));
    b = 8 * ze[l][0];
    d = 8 * ze[l][1];
    gg(Pa, this.t + b + 1 - 12, d - 14 - 11, 24, 22, 0, 0, 24, 22);
    for (a = 0; a < ve; a++) 0 != we[a] && (b = 8 * ze[a][0], d = 8 * ze[a][1], c = 71 == a ? 3 : 24, zf(this.t + b, d, c, c)) && (!Af || 0 != a && 20 != a && 47 != a && 70 != a && 77 != a ? Af && 0 != a && (l = a, nb = 0, h = 10) : (l = a, nb = 1, h = 50), b = V(Yf, 1 + 4 * Qf[a].length, 510 - 4 * Qf[a].length), d = V(ag - 24, 8, 256), uf(F, b, d, Qf[a], 16777215, 5263440));
    a = F;
    a.Q = 4;
    uf(a, 256, 16, "WORLD MAP", -1, 13158600);
    a.Q = 0;
    0 > this.t && uf(F, 12, 16, "<<", 13158600, 5263440);

    /* Map Size */
    -720 < this.t && uf(F, 500, 16, ">>", 13158600, 5263440)
};

var rh = document,
    Se = rh.getElementById("cv"),
    sh = Se.getContext("2d"),
    th = sh.createImageData(fa, ha),
    cf = new Uint8Array(th.data.buffer),
    uh = ea.console,
    vg = String.fromCharCode,
    kf = setTimeout,
    vh = vg(100, 97, 110, 45, 98, 97, 108, 108, 46, 106, 112);
ea.fff = wh;

function wh(a, b, c) {
    try {
        Se = rh.getElementById("cv"), sh = Se.getContext("2d"), sh.putImageData(a, b, c)
    } catch (d) {}
}
ea.fff = Qe;

function Qe(a) {
    try {
        uh.log(a)
    } catch (b) {}
}
ea.Init = Pe;
var Dg = vg(40, 67, 41, 32, 50, 48, 48, 56, 32, 104, 97, 53, 53, 105, 105, 32, 68, 65, 78, 45, 66, 65, 76, 76, 46, 106, 112),
    Re = vg(67, 111, 112, 121, 114, 105, 103, 104, 116, 32, 40, 67, 41, 32, 50, 48, 48, 56, 32, 104, 97, 53, 53, 105, 105, 32, 68, 65, 78, 45, 66, 65, 76, 76, 46, 106, 112),
    xh = vg(46, 47, 100, 97, 116, 97, 47),
    wf = vg(102, 112, 115),
    yh = vg(99, 97, 110, 118, 97, 115),
    zh = vg(50, 100),
    Ah = 0,
    Bh = vg(100, 97, 110, 45, 98, 97, 108, 108, 46, 106, 112),
    D = new Int32Array(fa * ha),
    fh = new Int32Array(ha),
    gh = new Int32Array(ha),
    jh = new Float32Array(ha),
    ih = new Float32Array(ha),
    lh = new Float32Array(ha),
    kh = new Float32Array(ha);

function nf() {
    if (Ch) {
        Ch(nf);
        Dh++;
        Eh = Date.now();
        var a = A(60 * (Eh - Fh) / 1E3 + 0.5);
        if (0 > a || 60 <= a) Dh = 0, vf = Gh, Gh = 0, xf = A((2 * xf + Hh) / 3), Hh = 0, Fh = Eh, a = 0;
        else if (a == Ih) return;
        Gh++;
        Ih = a
    }
    Af = !1 == Qg && !0 == Jh;
    tg = !0 == Qg && !1 == Jh;
    Kh = !0 == Lh && !1 == Mh;
    Qg = Jh;
    Lh = Mh;
    Hg = !(tg | Qg | Kh | Lh);
    Wf = tg ? 1 : Kh ? -1 : 0;
    Yf = Nh;
    ag = Oh;
    for (a = 0; 256 > a; a++) Ve[a] = We[a], We[a] = !1;
    af = af + A(1024 * Math.random()) & 1023;
    bf = A(512 * Math.random()) | 1;
    of();
    var b, c = 11 == Ah ? fa * ha : 0;
    for (b = a = 0; a < c; a++) cf[b++] = D[a] >> 16 & 255, cf[b++] = D[a] >> 8 & 255, cf[b++] = D[a] & 255, b++;
    wh(th, 0, 0);
    Ch ?
        Hh += Date.now() - Eh : kf(nf, lf())
}
var pf = 1;

function ef() {
    if (vh.length != Bh.length) return !0;
    for (pf = 0; Ah < vh.length; Ah++)
        if (vh[Ah] != Bh[Ah]) return !0;
    return !1
}
var Ch = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame,
    Dh = 0,
    Ih = 0,
    Gh = 0,
    vf = 0,
    Hh = 0,
    xf = 0,
    Ph = 20,
    Eh = Date.now(),
    Fh = Eh,
    Qh = Eh + Ph,
    Rh = Eh,
    Eg = 0;

function lf() {
    Eh = Date.now();
    var a = V(Qh - Eh, 5, Ph);
    Gh++;
    Eg++;
    Hh += a;
    Qh += Ph;
    if (Eh + a >= Rh || Eh < Fh) xf = xf + Hh >> 1, Hh = 0, vf = Gh, Gh = 0, Qh = Eh + Ph, Rh = Eh + 1E3;
    Fh = Eh;
    return a
}
var jf = 0;

function wa() {
    this.Z = 0;
    this.file = "";
    this.ib = this.ca = this.Xa = this.u = this.d = this.f = this.shift = this.s = this.i = 0
}

function mf(a, b, c) {
    a.i = b;
    a.s = c;
    for (b = a.shift = 0; 16 > b; b++) 1 << b == a.i && (a.shift = b);
    a.f = new Int32Array(a.i * a.s)
}
wa.prototype.j = function(a) {
    this.file != a && (jf++, this.file = a, this.Z = new Image, this.Z.src = xh + a + "?16.5", delete this.f, this.d = this.f = 0)
};

function hf(a) {
    if (0 == a.d && a.Z.complete) {
        jf--;
        var b = a.Z.width,
            c = a.Z.height;
        if (0 == b || 0 == c) throw delete a.Z, a.file = "", Sh;
        var d = rh.createElement(yh);
        d.width = b;
        d.height = c;
        d = d.getContext(zh);
        d.drawImage(a.Z, 0, 0);
        d = d.getImageData(0, 0, b, c).data;
        mf(a, b, c);
        b = 0;
        for (c = d.length; b < c; b += 4) a.f[b >> 2] = 0 == d[b + 3] ? -1 : d[b + 0] << 16 | d[b + 1] << 8 | d[b + 2];
        delete a.Z;
        a.d = 1
    }
}

function rg(a, b) {
    0 == a.d && (a.d = 1, mf(a, fa, 16), a.Xa = rh.createElement(yh), a.Xa.width = a.i, a.Xa.height = a.s, a.ca = a.Xa.getContext(zh));
    var c = b + "sans-serif014";
    if (a.ib != c) {
        a.ib = c;
        a.ca.fillStyle = "#000000";
        a.ca.fillRect(0, 0, a.i, a.s);
        c = "14px sans-serif";
        a.ca.font = c;
        a.ca.fillStyle = "#ffffff";
        a.ca.fillText(b, 0, 14);
        for (var d = a.ca.getImageData(0, 0, a.i, a.s).data, c = 0, e = d.length; c < e; c += 4) a.f[c >> 2] = 1 <= d[c + 0] ? 16777215 : -1;
        for (c = d = a.u = 0; d < a.s; d++)
            for (e = 0; e < a.i; e++, c++) 16777215 == a.f[c] && a.u <= e && (a.u = e + 1)
    }
}
var Th = [
        [0, 2, 0, 0, 1, 0, 0, 2, 2, 1, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0],
        [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    ],
    Uh = [
        [0, 1, 1, 0, 0, 0, 0, 2, 1, 2, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0
        ],
        [0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
    ],
    F = new Vh,
    df = new Vh;

function Vh() {
    this.N = new wa;
    this.P = this.Q = this.$a = this.R = 0
}
Vh.prototype.j = function(a, b, c) {
    this.N.j(a);
    this.R = b;
    this.$a = c;
    this.P = this.Q = 0
};
Vh.prototype.b = function(a, b, c, d, e) {
    var g, k, r, m, n, G, H, N = fa - this.R,
        E = this.N.i - this.R,
        ja = -1 < d ? 16777215 : 1,
        La = -1 < e ? 0 : 1,
        Ea = c.length;
    for (g = 0; g < Ea; g++, a += this.R + this.Q)
        if (n = c.charCodeAt(g) - 32, 0 != n) {
            96 <= n && (n = 31);
            0 != this.P && (a -= Th[this.P - 1][n]);
            G = n * this.R;
            m = b * fa + a;
            for (r = 0; r < this.$a; r++, m += N, G += E)
                for (k = 0; k < this.R; k++, m++, G++) H = this.N.f[G], H == ja ? D[m] = d : H == La && (D[m] = e);
            0 != this.P && (a -= Uh[this.P - 1][n])
        }
    this.P = 0
};

function uf(a, b, c, d, e, g) {
    b -= d.length * (a.R + a.Q) >> 1;
    c -= a.$a >> 1;
    a.b(b, c, d, e, g)
}

function cg(a, b, c, d, e, g) {
    var k = F;
    k.Q = g;
    k.b(a, b, c, d, e);
    k.Q = 0
}
Vh.prototype.M = function(a, b, c, d, e, g, k, r, m, n, G, H, N) {
    d = d * k >> 8;
    e = e * k >> 8;
    g = g * k >> 8;
    k = 255 - k;
    r = r * G >> 8;
    m = m * G >> 8;
    n = n * G >> 8;
    G = 255 - G;
    var E, ja, La, Ea, Da, Y, W, aa, sb, tb = fa - H,
        Za = 255 != k ? 16777215 : 1,
        ua = 255 != G ? 0 : 1,
        ya = c.length;
    for (E = 0; E < ya; E++, a += H + this.Q)
        if (Da = c.charCodeAt(E) - 32, 0 != Da) {
            96 <= Da && (Da = 31);
            0 != this.P && (a -= A(Th[this.P - 1][Da] * H / this.R));
            Y = Da * this.R;
            Ea = b * fa + a;
            for (La = 0; La < N; La++, Ea += tb)
                for (aa = A(La * this.$a / N) * this.N.i + Y << 8, sb = A((this.R << 8) / H), ja = 0; ja < H; ja++, Ea++, aa += sb) W = this.N.f[aa >> 8], W == Za ? (W = D[Ea], D[Ea] = d + ((W >>
                    16 & 255) * k >> 8) << 16 | e + ((W >> 8 & 255) * k >> 8) << 8 | g + ((W & 255) * k >> 8)) : W == ua && (W = D[Ea], D[Ea] = r + ((W >> 16 & 255) * G >> 8) << 16 | m + ((W >> 8 & 255) * G >> 8) << 8 | n + ((W & 255) * G >> 8));
            0 != this.P && (a -= A(Uh[this.P - 1][Da] * H / this.R))
        }
    this.P = 0
};

function Cf(a, b, c, d, e, g, k, r, m, n, G, H, N, E) {
    b -= d.length * (N + a.Q) >> 1;
    a.M(b, c - (E >> 1), d, e, g, k, r, m, n, G, H, N, E)
}

function Rf(a) {
    var b, c, d, e, g;
    b = 0 * fa;
    for (c = 384 * fa; b < c; b++) d = D[b] >> 16 & 255, e = ((0 - d) * a >> 8) + d, d = D[b] >> 8 & 255, g = ((0 - d) * a >> 8) + d, d = D[b] & 255, d = ((0 - d) * a >> 8) + d, D[b] = e << 16 | g << 8 | d
}
var Tf = 0;

function mh(a, b, c) {
    var d = Tf,
        e = 0,
        g = 0,
        k = 0;
    1 == d ? (d = a >> 16 & 255, e = (((b >> 16 & 255) - d) * c >> 8) + d, d = a >> 8 & 255, g = (((b >> 8 & 255) - d) * c >> 8) + d, d = a & 255, k = (((b & 255) - d) * c >> 8) + d) : 2 == d ? (e = ((b >> 16 & 255) * c >> 8) + (a >> 16 & 255), 255 < e && (e = 255), g = ((b >> 8 & 255) * c >> 8) + (a >> 8 & 255), 255 < g && (g = 255), k = ((b & 255) * c >> 8) + (a & 255), 255 < k && (k = 255)) : 3 == d ? (e = (a >> 16 & 255) - ((b >> 16 & 255) * c >> 8), 0 > e && (e = 0), g = (a >> 8 & 255) - ((b >> 8 & 255) * c >> 8), 0 > g && (g = 0), k = (a & 255) - ((b & 255) * c >> 8), 0 > k && (k = 0)) : 4 == d ? (e = (b >> 16 & 255) * (a >> 16 & 255) >> 8, g = (b >> 8 & 255) * (a >> 8 & 255) >> 8, k = (b & 255) * (a & 255) >>
        8) : 5 == d ? (d = a >> 16 & 255, e = d + ((b >> 16 & 255) * d * c >> 16), 255 < e && (e = 255), d = a >> 8 & 255, g = d + ((b >> 8 & 255) * d * c >> 16), 255 < g && (g = 255), d = a & 255, k = d + ((b & 255) * d * c >> 16), 255 < k && (k = 255)) : 6 == d && (d = a >> 16 & 255, e = d + (c - (2 * d * c >> 8)), d = a >> 8 & 255, g = d + (c - (2 * d * c >> 8)), d = a & 255, k = d + (c - (2 * d * c >> 8)));
    return e << 16 | g << 8 | k
}
var Zf = 0;

function L(a, b, c, d, e) {
    c -= a;
    d -= b;
    var g, k;
    Gg(c) >= Gg(d) ? (k = A(Gg(c)), 0 != k && (d = A(65536 * d / k)), c = 0 <= c ? 65536 : -65536) : (k = A(Gg(d)), 0 != k && (c = A(65536 * c / k)), d = 0 <= d ? 65536 : -65536);
    a = A(65536 * a) + 32768;
    for (b = A(65536 * b) + 32768; 0 <= k; k--, a += c, b += d) 0 > a || fa <= a >> 16 || 0 > b || ha <= b >> 16 || (g = (b >> 16) * fa + (a >> 16), D[g] = 0 == Tf ? e : mh(D[g], e, e >> 24 & 255))
}

function Xf(a, b, c, d, e) {
    c--;
    d--;
    L(a, b, a + c, b, e);
    L(a, b + d, a + c, b + d, e);
    L(a, b, a, b + d, e);
    L(a + c, b, a + c, b + d, e)
}

function Ef(a, b, c, d, e) {
    Xf(a - (c >> 1), b - (d >> 1), c, d, e)
}

function U(a, b, c, d, e) {
    var g;
    c = a + c > fa ? fa : ~~(a + c);
    d = b + d > ha ? ha : ~~(b + d);
    a = 0 > a ? 0 : ~~a;
    b = (0 > b ? 0 : ~~b) * fa + a;
    g = fa - (c - a);
    c = b + c - a;
    d *= fa;
    if (0 == Tf)
        for (; b < d; b += g, c += fa)
            for (; b < c; b++) D[b] = e;
    else
        for (; b < d; b += g, c += fa)
            for (; b < c; b++) D[b] = mh(D[b], e, e >> 24 & 255)
}

function Df(a, b, c, d, e) {
    U(a - (c >> 1), b - (d >> 1), c, d, e)
}

function gg(a, b, c, d, e, g, k, r, m) {
    var n, G;
    if (0 != d && 0 != e)
        for (r = ~~((r << 8) / d), m = ~~((m << 8) / e), g <<= 8, k <<= 8, 0 > b && (g += r * -b), 0 > c && (k += m * -c), d = b + d > fa ? fa : ~~(b + d), e = c + e > ha ? ha : ~~(c + e), b = 0 > b ? 0 : ~~b, c = (0 > c ? 0 : ~~c) * fa + b, n = fa - (d - b), d = c + d - b, e *= fa; c < e; c += n, d += fa, k += m)
            for (b = ((k >> 8) * a.i << 8) + g; c < d; c++, b += r) G = a.f[b >> 8], -1 != G && (D[c] = G)
}

function $f(a, b, c, d, e, g, k, r, m, n) {
    var G, H, N, E;
    if (0 != d && 0 != e) {
        r = A((r << 8) / d);
        m = A((m << 8) / e);
        g <<= 8;
        k <<= 8;
        0 > b && (g += r * -b);
        0 > c && (k += m * -c);
        d = b + d > fa ? fa : A(b + d);
        e = c + e > ha ? ha : A(c + e);
        b = 0 > b ? 0 : A(b);
        c = 0 > c ? 0 : A(c);
        var ja = n >> 24 & 255,
            La = n >> 16 & 255,
            Ea = n >> 8 & 255,
            Da = n & 255,
            Y, W, aa;
        if (0 == Zf)
            for (; c < e; c++, k += m)
                for (H = c * fa + b, N = ((k >> 8) * a.i << 8) + g, G = b; G < d; G++, H++, N += r) E = a.f[N >> 8], -1 != E && (Y = La * (E >> 16 & 255) >> 8, W = Ea * (E >> 8 & 255) >> 8, aa = Da * (E & 255) >> 8, 0 == Tf ? D[H] = Y << 16 | W << 8 | aa : 1 == Tf ? (E = D[H] >> 16 & 255, Y = ((Y - E) * ja >> 8) + E, E = D[H] >> 8 & 255, W = ((W - E) * ja >>
                    8) + E, E = D[H] & 255, aa = ((aa - E) * ja >> 8) + E, D[H] = Y << 16 | W << 8 | aa) : 2 == Tf ? (Y = (Y * ja >> 8) + (D[H] >> 16 & 255), 255 < Y && (Y = 255), W = (W * ja >> 8) + (D[H] >> 8 & 255), 255 < W && (W = 255), aa = (aa * ja >> 8) + (D[H] & 255), 255 < aa && (aa = 255), D[H] = Y << 16 | W << 8 | aa) : 5 == Tf && (E = D[H] >> 16 & 255, Y = E + (Y * E * ja >> 16), 255 < Y && (Y = 255), E = D[H] >> 8 & 255, W = E + (W * E * ja >> 16), 255 < W && (W = 255), E = D[H] & 255, aa = E + (aa * E * ja >> 16), 255 < aa && (aa = 255), D[H] = Y << 16 | W << 8 | aa));
        else if (1 == Zf)
            for (; c < e; c++, k += m)
                for (H = c * fa + b, N = ((k >> 8) * a.i << 8) + g, G = b; G < d; G++, H++, N += r) E = ja * (a.f[N >> 8] & 255) >> 8, 0 != E && (1 == Tf ? (Y =
                    D[H] >> 16 & 255, Y = ((La - Y) * E >> 8) + Y, W = D[H] >> 8 & 255, W = ((Ea - W) * E >> 8) + W, aa = D[H] & 255, aa = ((Da - aa) * E >> 8) + aa, D[H] = Y << 16 | W << 8 | aa) : 2 == Tf ? (Y = (D[H] >> 16 & 255) + (La * E >> 8), 255 < Y && (Y = 255), W = (D[H] >> 8 & 255) + (Ea * E >> 8), 255 < W && (W = 255), aa = (D[H] & 255) + (Da * E >> 8), 255 < aa && (aa = 255), D[H] = Y << 16 | W << 8 | aa) : 3 == Tf ? (Y = (D[H] >> 16 & 255) - E, 0 > Y && (Y = 0), W = (D[H] >> 8 & 255) - E, 0 > W && (W = 0), aa = (D[H] & 255) - E, 0 > aa && (aa = 0), D[H] = Y << 16 | W << 8 | aa) : D[H] = mh(D[H], n, E));
        else if (2 == Zf)
            for (; c < e; c++, k += m)
                for (H = c * fa + b, N = ((k >> 8) * a.i << 8) + g, G = b; G < d; G++, H++, N += r) E = a.f[N >> 8], 0 !=
                    E && (Y = E >> 16 & 255, W = E >> 8 & 255, aa = E & 255, D[H] = Y == W && W == aa ? La * Y >> 8 << 16 | Ea * W >> 8 << 8 | Da * aa >> 8 : Y << 16 | W << 8 | aa);
        else if (3 == Zf)
            for (; c < e; c++, k += m)
                for (H = c * fa + b, N = ((k >> 8) * a.i << 8) + g, G = b; G < d; G++, H++, N += r) E = ja * (a.f[N >> 8] & 255) >> 8, 0 != E && (1 == Tf ? D[H] = ((255 - D[H]) * E >> 8) + D[H] : 2 == Tf ? (Y = (D[H] >> 16 & 255) + (La * E >> 8), 255 < Y && (Y = 255), W = (D[H] >> 8 & 255) + (Ea * E >> 8), 255 < W && (W = 255), aa = (D[H] & 255) + (Da * E >> 8), 255 < aa && (aa = 255), D[H] = Y << 16 | W << 8 | aa) : 3 == Tf && (E = D[H] - E, 0 > E && (E = 0), D[H] = E))
    }
}

function K(a, b, c, d, e, g, k, r, m, n) {
    $f(a, b - (d >> 1), c - (e >> 1), d, e, g, k, r, m, n)
}

function Kg(a, b, c, d, e) {
    var g;
    c = a + c > fa ? fa : ~~(a + c);
    d = b + d > ha ? ha : ~~(b + d);
    a = 0 > a ? 0 : ~~a;
    b = (0 > b ? 0 : ~~b) * fa + a;
    g = fa - (c - a);
    c = b + c - a;
    for (d *= fa; b < d; b += g, c += fa)
        for (; b < c; b++) 0 == (D[b] & 16777215) && (D[b] = e)
}

function Uf(a, b, c, d) {
    var e = Pa,
        g, k, r, m, n, G = 0 > a ? -a : 0,
        H = a + 24 > fa ? 24 - (a + 24 - fa) : 24,
        N = b + 24 > ha ? 24 - (b + 24 - ha) : 24;
    for (k = 0 > b ? -b : 0; k < N; k++)
        for (r = (b + k) * fa + (a + G), m = (0 + A(24 * k / 24)) * e.i + c, g = G; g < H; g++, r++) n = m + A(24 * g / 24), 16711680 == e.f[n] && (D[r] = d)
}

function hh(a, b, c, d, e, g, k, r) {
    var m = dg(Gg(e - a >> 16), Gg(g - b >> 16)) + 1;
    e = A((e - a) / m);
    g = A((g - b) / m);
    k = A((k - c) / m);
    r = A((r - d) / m);
    c = A(c);
    d = A(d);
    for (var n, G, H = 0; H < m; H++, a += e, b += g, c += k, d += r) n = a >> 16, G = b >> 16, 0 > G || ha <= G || (fh[G] > n && (fh[G] = n, jh[G] = c, lh[G] = d), gh[G] < n && (gh[G] = n, ih[G] = c, kh[G] = d))
}
var Wh = new Mg;

function $(a, b, c, d, e) {
    Wh.p(a, b);
    c -= Tg(Wh);
    d *= c;
    e *= c;
    a.x += Wh.x * d;
    a.y += Wh.y * d;
    b.x -= Wh.x * e;
    b.y -= Wh.y * e
}

function X(a, b, c, d) {
    Wh.p(a, b);
    b.set(a);
    Wh.y += c;
    Pg(Wh, d);
    a.add(Wh)
}
var Af = !1,
    tg = !1,
    Qg = !1,
    Jh = !1,
    Kh = !1,
    Lh = !1,
    Mh = !1,
    Hg = !1,
    Wf = 0,
    Yf = 0,
    ag = 0,
    Nh = 0,
    Oh = 0;

function Sf(a, b, c, d) {
    return Yf < a || a + c <= Yf || ag < b || b + d <= ag ? !1 : !0
}

function zf(a, b, c, d) {
    return Sf(a - c / 2, b - d / 2, c, d)
}

function Xh(a) {
    var b = Se.getBoundingClientRect();
    Nh = A(a.clientX - b.left);
    Oh = A(a.clientY - b.top)
}
rh.onmousemove = Xh;
rh.onmousedown = function(a) {
    Xh(a);
    Yh = !1;
    if (!(0 > Nh || fa <= Nh || 0 > Oh || ha <= Oh) && (Yh = !0, 0 == a.button && (Jh = !0), 2 == a.button && (Mh = !0), Yh)) return !1
};
rh.onmouseup = function(a) {
    Xh(a);
    0 == a.button && (Jh = !1);
    2 == a.button && (Mh = !1)
};
rh.oncontextmenu = function() {
    if (Yh) return !1
};

function Zh(a) {
    for (var b = 0, c = 0, d = Se; null !== d; d = d.offsetParent) b += d.offsetLeft, c += d.offsetTop;
    a = a.touches;
    Nh = A(a[0].pageX - b);
    Oh = A(a[0].pageY - c)
}
rh.ontouchstart = function(a) {
    Zh(a);
    Yh = Mh = Jh = !1;
    if (!(0 > Nh || fa <= Nh || 0 > Oh || ha <= Oh)) return Jh = Yh = !0, 1 < a.touches.length && (Mh = !0), !1
};
rh.ontouchmove = function(a) {
    Zh(a);
    if (Yh) return !1
};
rh.ontouchend = function(a) {
    1 > a.touches.length && (Jh = !1);
    Mh = !1;
    if (Yh) return !1
};
rh.ontouchcancel = function() {
    Mh = Jh = Yh = !1
};
var Ve = Array(256),
    We = Array(256),
    Xe = Array(256),
    Ye = Array(256),
    Ze = Array(256);
rh.onkeydown = function(a) {
    var b = a.keyCode;
    65 <= b & 90 >= b ? a.shiftKey || (b += 32) : b = a.shiftKey ? Ze[b] : Ye[b];
    0 <= b && 256 > b && (Xe[b] = !0, We[b] = !0);
    if (0 != b && Yh) return !1
};
rh.onkeyup = function(a) {
    var b = a.keyCode;
    65 <= b & 90 >= b ? a.shiftKey || (b += 32) : b = a.shiftKey ? Ze[b] : Ye[b];
    0 <= b && 256 > b && (Xe[b] = !1);
    if (0 != b && Yh) return !1
};
var Yh = !1,
    sg = "",
    ug = new wa,
    Bg = Array(100),
    Ag = 0,
    $h = vg(80, 79, 83, 84),
    wg = vg(38, 98, 61),
    xg = vg(38, 99, 61),
    yg = vg(38, 100, 61),
    Cg = vg(38, 101, 61);
vg(38, 102, 61);
vg(38, 103, 61);
vg(38, 104, 61);
vg(38, 105, 61);
vg(38, 106, 61);
vg(38, 107, 61);
vg(111, 107);
var Sh = vg(69, 82, 82, 79, 82),
    ai = vg(61),
    bi = vg(10),
    ci = vg(67, 111, 110, 116, 101, 110, 116, 45, 84, 121, 112, 101),
    di = vg(97, 112, 112, 108, 105, 99, 97, 116, 105, 111, 110, 47, 120, 45, 119, 119, 119, 45, 102, 111, 114, 109, 45, 117, 114, 108, 101, 110, 99, 111, 100, 101, 100);

function zg(a) {
    for (var b = Ag = 0; 100 > b; b++) Bg[b] = "";
    try {
        var c = new XMLHttpRequest;
        c.onreadystatechange = function() {
            if (4 == c.readyState)
                if (200 == c.status) {
                    var a, b, d = 0,
                        r = c.responseText.length;
                    for (a = 0; a < r; a++)
                        if (b = c.responseText[a], b == ai) {
                            for (a += 1; a < r; a++) {
                                b = c.responseText[a];
                                if (b == bi) break;
                                Bg[d] += b
                            }
                            d++
                        } else
                            for (; a < r && c.responseText[a] != bi; a++);
                    Ag = 1
                } else Ag = -1
        };
        c.open($h, a, !0);
        c.setRequestHeader(ci, di);
        c.send("")
    } catch (d) {
        Ag = -2
    }
}

function Mg() {
    this.y = this.x = 0
}
Mg.prototype.set = function(a) {
    this.x = a.x;
    this.y = a.y;
    return this
};

function Ng(a, b, c) {
    a.x = b;
    a.y = c
}
Mg.prototype.add = function(a) {
    this.x += a.x;
    this.y += a.y;
    return this
};

function ah(a, b, c) {
    a.x = b.x + c.x;
    a.y = b.y + c.y
}
Mg.prototype.sub = function(a) {
    this.x -= a.x;
    this.y -= a.y;
    return this
};
Mg.prototype.p = function(a, b) {
    this.x = a.x - b.x;
    this.y = a.y - b.y;
    return this
};

function Pg(a, b) {
    a.x *= b;
    a.y *= b
}

function $g(a) {
    var b = a.x;
    a.x = a.y;
    a.y = -b
}

function Og(a) {
    return Math.sqrt(a.x * a.x + a.y * a.y)
}

function Tg(a) {
    var b = Og(a);
    if (0 == b) return 0;
    a.x /= b;
    a.y /= b;
    return b
}

function Rg(a) {
    var b = Math.acos(a.x / Math.sqrt(a.x * a.x + a.y * a.y));
    0 < a.y && (b = Sg - b);
    return b
}
var $e = new Float32Array(1024),
    af = 0,
    bf = 0;

function B(a) {
    af += bf;
    af &= 1023;
    return $e[af] * a
}

function M(a, b) {
    af += bf;
    af &= 1023;
    return $e[af] * (b - a) + a
}

function Gf(a, b) {
    af += bf;
    af &= 1023;
    return 0.5 > $e[af] ? a : b
}

function Wg(a) {
    af += bf;
    af &= 1023;
    return ~~($e[af] * a)
}
var Te = Array(513),
    Ue = 3.1415927,
    Sg = 6.2831855;

function Gg(a) {
    return 0 > a ? -a : a
}

function dg(a, b) {
    return a > b ? a : b
}

function V(a, b, c) {
    return a < b ? b : a > c ? c : a
}

function Vf(a, b, c) {
    return a < b ? c : a > c ? b : a
}

function A(a) {
    return Math.floor(a)
};